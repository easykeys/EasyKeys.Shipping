{
	"openapi": "3.0.0",
	"servers": [
		{
			"url": "https://apis-sandbox.fedex.com",
			"description": "Sandbox Server"
		},
		{
			"url": "https://apis.fedex.com",
			"description": "Production Server"
		}
	],
	"schemes": [
		"https"
	],
	"info": {
		"version": "1.0.0",
		"title": "Ship API"
	},
	"paths": {
		"/ship/v1/shipments": {
			"post": {
				"summary": "Create Shipment",
				"description": "This endpoint helps you to create shipment requests therebyy validating all the shippingg input information and either generates the labels (if the responses is synchronous) or a job ID if transaction is processed using asynchronous method.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>",
				"operationId": "Create Shipment",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/Full_Schema_Ship"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SHPCResponseVO_ShipShipment"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "ACCOUNTNUMBER.REGISTRATION.REQUIRED",
											"message": "Please enter a valid 9-digit FedEx account number or register for a new FedEx account number."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO401"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.AUTHORIZED.ERROR",
											"message": "Access token expired. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO403"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "FORBIDDEN.ERROR",
											"message": "We could not authorize your credentials. Please check your permissions and try again."
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO404"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.FOUND.ERROR",
											"message": "The resource you requested is no longer available. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Failure",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO500"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "INTERNAL.SERVER.ERROR",
											"message": "We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO503"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "SERVICE.UNAVAILABLE.ERROR",
											"message": "The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					}
				},
				"parameters": [
					{
						"in": "header",
						"name": "x-customer-transaction-id",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
						"required": false,
						"schema": {
							"type": "string",
							"example": "624deea6-b709-470c-8c39-4b5511281492"
						}
					},
					{
						"in": "header",
						"name": "content-type",
						"description": "This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"in": "header",
						"name": "x-locale",
						"description": "This indicates the combination of language code and country code.  <a onclick='loadDocReference(\"locales\")'>Click here to see Locales</a>",
						"required": false,
						"schema": {
							"type": "string",
							"example": "en_US"
						}
					},
					{
						"in": "header",
						"name": "authorization",
						"description": "This indicates the authorization token for the input request.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "Bearer XXX"
						}
					}
				],
				"x-code-samples": [
					{
						"lang": "C#",
						"source": "var client = new RestClient(\"https://apis-sandbox.fedex.com/ship/v1/shipments\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"Authorization\", \"Bearer \");\nrequest.AddHeader(\"X-locale\", \"en_US\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\n// 'input' refers to JSON Payload\nrequest.AddParameter(\"application/x-www-form-urlencoded\", input, ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\n\n\n\n\n"
					},
					{
						"lang": "JAVA",
						"source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\n// 'input' refers to JSON Payload\nRequestBody body = RequestBody.create(mediaType, input);\nRequest request = new Request.Builder()\n    .url(\"https://apis-sandbox.fedex.com/ship/v1/shipments\")\n    .post(body)\n    .addHeader(\"Content-Type\", \"application/json\")\n    .addHeader(\"X-locale\", \"en_US\")\n    .addHeader(\"Authorization\", \"Bearer \")\n    .build();\n            \nResponse response = client.newCall(request).execute();"
					},
					{
						"lang": "JAVASCRIPT",
						"source": "// 'input' refers to JSON Payload\nvar data = JSON.stringify(input);\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"POST\", \"https://apis-sandbox.fedex.com/ship/v1/shipments\");\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\"X-locale\", \"en_US\");\n  xhr.setRequestHeader(\"Authorization\", \"Bearer \");\n  \n  xhr.send(data);"
					},
					{
						"lang": "PHP",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://apis-sandbox.fedex.com/ship/v1/shipments');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'Authorization' => 'Bearer ',\n  'X-locale' => 'en_US',\n  'Content-Type' => 'application/json'\n));\n\n$request->setBody(input); // 'input' refers to JSON Payload\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "PYTHON",
						"source": "import requests\n\nurl = \"https://apis-sandbox.fedex.com/ship/v1/shipments\"\n\npayload = input # 'input' refers to JSON Payload\nheaders = {\n    'Content-Type': \"application/json\",\n    'X-locale': \"en_US\",\n    'Authorization': \"Bearer \"\n    }\n\nresponse = requests.post(url, data=payload, headers=headers)\n\nprint(response.text)"
					},
					{
						"lang": "RUST",
						"source": "extern crate reqwest;\n\nuse std::io::Read;\n\nfn construct_headers() -> HeaderMap {\n    let mut headers = HeaderMap::new();\n    headers.insert(\"Content-Type\", \"application/json\");\n    headers.insert(\"X-locale\", \"en_US\");\n    headers.insert(\"Authorization\", \"Bearer \");\n    headers\n}\n\nfn run() -> Result<()> {\n    let client = reqwest::Client::new();\n    let mut res = client.post(\"https://apis-sandbox.fedex.com/ship/v1/shipments\")\n        .body(input) // 'input' refers to JSON Payload\n        .headers(construct_headers())\n        .send()?;\n    let mut body = String::new();\n    res.read_to_string(&mut body)?;\n\n    println!(\"Status: {}\", res.status());\n    println!(\"Headers:\\n{:#?}\", res.headers());\n    println!(\"Body:\\n{}\", body);\n\n    Ok(())\n}"
					},
					{
						"lang": "SWIFT",
						"source": "import Foundation\n\nlet headers = [\n  \"Content-Type\": \"application/json\",\n  \"X-locale\": \"en_US\",\n  \"Authorization\": \"Bearer \"\n]\nlet parameters = [\n  input // 'input' refers to JSON Payload\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://apis-sandbox.fedex.com/ship/v1/shipments\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
					}
				]
			}
		},
		"/ship/v1/shipments/cancel": {
			"put": {
				"summary": "Cancel Shipment",
				"description": "Use this endpoint to cancel FedEx Express and Ground shipments that have not already been tendered to FedEx. This request will cancel all packages within the shipment.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>",
				"operationId": "Cancel Shipment",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/Full_Schema_Cancel_Shipment"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SHPCResponseVO_CancelShipment"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "SHIPMENT.USER.UNAUTHORIZED",
											"message": "Requested user is not authorized to perform the operation."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO401_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.AUTHORIZED.ERROR",
											"message": "Access token expired. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO403_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "FORBIDDEN.ERROR",
											"message": "We could not authorize your credentials. Please check your permissions and try again."
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO404_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.FOUND.ERROR",
											"message": "The resource you requested is no longer available. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Failure",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO500_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "INTERNAL.SERVER.ERROR",
											"message": "We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO503_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "SERVICE.UNAVAILABLE.ERROR",
											"message": "The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					}
				},
				"parameters": [
					{
						"in": "header",
						"name": "x-customer-transaction-id",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
						"required": false,
						"schema": {
							"type": "string",
							"example": "624deea6-b709-470c-8c39-4b5511281492"
						}
					},
					{
						"in": "header",
						"name": "content-type",
						"description": "This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"in": "header",
						"name": "x-locale",
						"description": "This indicates the combination of language code and country code.  <a onclick='loadDocReference(\"locales\")'>Click here to see Locales</a>",
						"required": false,
						"schema": {
							"type": "string",
							"example": "en_US"
						}
					},
					{
						"in": "header",
						"name": "authorization",
						"description": "This indicates the authorization token for the input request.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "Bearer XXX"
						}
					}
				],
				"x-code-samples": [
					{
						"lang": "C#",
						"source": "var client = new RestClient(\"https://apis-sandbox.fedex.com/ship/v1/shipments/cancel\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"Authorization\", \"Bearer \");\nrequest.AddHeader(\"X-locale\", \"en_US\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\n// 'input' refers to JSON Payload\nrequest.AddParameter(\"application/x-www-form-urlencoded\", input, ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
					},
					{
						"lang": "JAVA",
						"source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\n// 'input' refers to JSON Payload\nRequestBody body = RequestBody.create(mediaType, input);\nRequest request = new Request.Builder()\n  .url(\"https://apis-sandbox.fedex.com/ship/v1/shipments/cancel\")\n  .put(body)\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"X-locale\", \"en_US\")\n  .addHeader(\"Authorization\", \"Bearer \")\n  .build();\n\nResponse response = client.newCall(request).execute();"
					},
					{
						"lang": "JAVASCRIPT",
						"source": "// 'input' refers to JSON Payload\nvar data = JSON.stringify(input);\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"PUT\", \"https://apis-sandbox.fedex.com/ship/v1/shipments/cancel\");\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\"X-locale\", \"en_US\");\n  xhr.setRequestHeader(\"Authorization\", \"Bearer \");\n  \n  xhr.send(data);"
					},
					{
						"lang": "PHP",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://apis-sandbox.fedex.com/ship/v1/shipments/cancel');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'Authorization' => 'Bearer ',\n  'X-locale' => 'en_US',\n  'Content-Type' => 'application/json'\n));\n\n$request->setBody(input); // 'input' refers to JSON Payload\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "PYTHON",
						"source": "import requests\n\nurl = \"https://apis-sandbox.fedex.com/ship/v1/shipments/cancel\"\n\npayload = input # 'input' refers to JSON Payload\nheaders = {\n    'Content-Type': \"application/json\",\n    'X-locale': \"en_US\",\n    'Authorization': \"Bearer \"\n    }\n\nresponse = requests.put(url, data=payload, headers=headers)\n\nprint(response.text)"
					},
					{
						"lang": "RUST",
						"source": "extern crate reqwest;\n\nuse std::io::Read;\n\nfn construct_headers() -> HeaderMap {\n    let mut headers = HeaderMap::new();\n    headers.insert(\"Content-Type\", \"application/json\");\n    headers.insert(\"X-locale\", \"en_US\");\n    headers.insert(\"Authorization\", \"Bearer \");\n    headers\n}\n\nfn run() -> Result<()> {\n    let client = reqwest::Client::new();\n    let mut res = client.put(\"https://apis-sandbox.fedex.com/ship/v1/shipments/cancel\")\n        .body(input) // 'input' refers to JSON Payload\n        .headers(construct_headers())\n        .send()?;\n    let mut body = String::new();\n    res.read_to_string(&mut body)?;\n\n    println!(\"Status: {}\", res.status());\n    println!(\"Headers:\\n{:#?}\", res.headers());\n    println!(\"Body:\\n{}\", body);\n\n    Ok(())\n}"
					},
					{
						"lang": "SWIFT",
						"source": "import Foundation\n\nlet headers = [\n  \"Content-Type\": \"application/json\",\n  \"X-locale\": \"en_US\",\n  \"Authorization\": \"Bearer \"\n]\nlet parameters = [\n  input // 'input' refers to JSON Payload\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://apis-sandbox.fedex.com/ship/v1/shipments/cancel\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"PUT\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
					}
				]
			}
		},
		"/ship/v1/shipments/results": {
			"post": {
				"summary": "Retrieve Async Ship",
				"description": "This endpoint helps you to process confirmed shipments asynchronously (above 40 packages) and produce results based on job id.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>",
				"operationId": "Get Confirmed Shipment Async Results",
				"parameters": [
					{
						"name": "x-customer-transaction-id",
						"in": "header",
						"description": "This transaction Id helps the customers to track the transaction with APIF.",
						"required": false,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						},
						"example": "0e671149-016f-1000-941f-ef4dbabadd2e"
					},
					{
						"in": "header",
						"name": "content-type",
						"description": "This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"in": "header",
						"name": "x-locale",
						"description": "This indicates the combination of language code and country code.  <a onclick='loadDocReference(\"locales\")'>Click here to see Locales</a>",
						"required": false,
						"schema": {
							"type": "string",
							"example": "en_US"
						}
					},
					{
						"in": "header",
						"name": "authorization",
						"description": "This indicates the authorization token for the input request.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "Bearer XXX"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/FullSchema-getConfirmedShipmentAsyncResults"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SHPCResponseVO_GetOpenShipmentResults"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO_2"
								},
								"example": {
									"transactionId": "624xxxxx-b709-470c-8c39-4b55112xxxxx",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "TRACKINGNUMBER.ENTERED.INVALID",
											"message": "Error with entered Tracking Number. Please verify the entered Tracking Number."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO401_2"
								},
								"example": {
									"transactionId": "624xxxxx-b709-470c-8c39-4b55112xxxxx",
									"errors": [
										{
											"code": "NOT.AUTHORIZED.ERROR",
											"message": "Access token expired. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO403_2"
								},
								"example": {
									"transactionId": "624xxxxx-b709-470c-8c39-4b55112xxxxx",
									"errors": [
										{
											"code": "FORBIDDEN.ERROR",
											"message": "We could not authorize your credentials. Please check your permissions and try again."
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO404_2"
								},
								"example": {
									"transactionId": "624xxxxx-b709-470c-8c39-4b55112xxxxx",
									"errors": [
										{
											"code": "NOT.FOUND.ERROR",
											"message": "The resource you requested is no longer available. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Failure",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO500_2"
								},
								"example": {
									"transactionId": "624xxxxx-b709-470c-8c39-4b55112xxxxx",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "INTERNAL.SERVER.ERROR",
											"message": "We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO503_2"
								},
								"example": {
									"transactionId": "624xxxxx-b709-470c-8c39-4b55112xxxxx",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "SERVICE.UNAVAILABLE.ERROR",
											"message": "The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					}
				},
				"x-code-samples": [
					{
						"lang": "C#",
						"source": "var client = new RestClient(\"https://apis-sandbox.fedex.com/ship/v1/shipments/results\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"Authorization\", \"Bearer \");\nrequest.AddHeader(\"X-locale\", \"en_US\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\n// 'input' refers to JSON Payload\nrequest.AddParameter(\"application/x-www-form-urlencoded\", input, ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\n\n\n\n\n"
					},
					{
						"lang": "JAVA",
						"source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\n// 'input' refers to JSON Payload\nRequestBody body = RequestBody.create(mediaType, input);\nRequest request = new Request.Builder()\n    .url(\"https://apis-sandbox.fedex.com/ship/v1/shipments/results\")\n    .post(body)\n    .addHeader(\"Content-Type\", \"application/json\")\n    .addHeader(\"X-locale\", \"en_US\")\n    .addHeader(\"Authorization\", \"Bearer \")\n    .build();\n            \nResponse response = client.newCall(request).execute();"
					},
					{
						"lang": "JAVASCRIPT",
						"source": "// 'input' refers to JSON Payload\nvar data = JSON.stringify(input);\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"POST\", \"https://apis-sandbox.fedex.com/ship/v1/shipments/results\");\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\"X-locale\", \"en_US\");\n  xhr.setRequestHeader(\"Authorization\", \"Bearer \");\n  \n  xhr.send(data);"
					},
					{
						"lang": "PHP",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://apis-sandbox.fedex.com/ship/v1/shipments/results');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'Authorization' => 'Bearer ',\n  'X-locale' => 'en_US',\n  'Content-Type' => 'application/json'\n));\n\n$request->setBody(input); // 'input' refers to JSON Payload\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "PYTHON",
						"source": "import requests\n\nurl = \"https://apis-sandbox.fedex.com/ship/v1/shipments/results\"\n\npayload = input # 'input' refers to JSON Payload\nheaders = {\n    'Content-Type': \"application/json\",\n    'X-locale': \"en_US\",\n    'Authorization': \"Bearer \"\n    }\n\nresponse = requests.post(url, data=payload, headers=headers)\n\nprint(response.text)"
					},
					{
						"lang": "RUST",
						"source": "extern crate reqwest;\n\nuse std::io::Read;\n\nfn construct_headers() -> HeaderMap {\n    let mut headers = HeaderMap::new();\n    headers.insert(\"Content-Type\", \"application/json\");\n    headers.insert(\"X-locale\", \"en_US\");\n    headers.insert(\"Authorization\", \"Bearer \");\n    headers\n}\n\nfn run() -> Result<()> {\n    let client = reqwest::Client::new();\n    let mut res = client.post(\"https://apis-sandbox.fedex.com/ship/v1/shipments/results\")\n        .body(input) // 'input' refers to JSON Payload\n        .headers(construct_headers())\n        .send()?;\n    let mut body = String::new();\n    res.read_to_string(&mut body)?;\n\n    println!(\"Status: {}\", res.status());\n    println!(\"Headers:\\n{:#?}\", res.headers());\n    println!(\"Body:\\n{}\", body);\n\n    Ok(())\n}"
					},
					{
						"lang": "SWIFT",
						"source": "import Foundation\n\nlet headers = [\n  \"Content-Type\": \"application/json\",\n  \"X-locale\": \"en_US\",\n  \"Authorization\": \"Bearer \"\n]\nlet parameters = [\n  input // 'input' refers to JSON Payload\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://apis-sandbox.fedex.com/ship/v1/shipments/results\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
					}
				]
			}
		},
		"/ship/v1/shipments/packages/validate": {
			"post": {
				"summary": "Validate Shipment",
				"description": "Use this endpoint to verify the accuracy of a shipment request prior to actually submitting shipment request. This allow businesses that receive shipping orders from end-user/customers to verify the shipment information prior to submitting a create shipment request to FedEx and printing a label. If for any reason the information needs to be edited or changed, it can be done while the end-user is still available to confirm the changes.<br><br>Note:<ul><li>This is shipment level validation hence supports validation for single piece shipment only.</li><li>Shipment validation is supported for all Express and Ground - Domestic as well as international shipments with all applicable special services. </li><li>Shipment validation is supported for SmartPost and not for Freight LTL shipments.</li></ul><br><br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>",
				"operationId": "ShipmentPackageValidate",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/FullSchema-VerifyShipment"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SHPCResponseVO_Validate"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO_2"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "LOGIN.REAUTHENTICATE.ERROR",
											"message": "Re-Login authentication error"
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "UNAUTHORIZED.USAGE",
											"message": "UNAUTHORIZED.USAGE"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"example": {
									"error": "NOT.FOUND.ERROR",
									"error_detail": "The resource you requested is no longer available. Please modify your request and try again."
								}
							}
						}
					},
					"500": {
						"description": "Failure",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "INTERNAL.SERVER.ERROR",
											"message": "We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					}
				},
				"parameters": [
					{
						"in": "header",
						"name": "x-customer-transaction-id",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
						"required": false,
						"schema": {
							"type": "string",
							"example": "624deea6-b709-470c-8c39-4b5511281492"
						}
					},
					{
						"in": "header",
						"name": "content-type",
						"description": "This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"in": "header",
						"name": "x-locale",
						"description": "This indicates the combination of language code and country code.  <a onclick='loadDocReference(\"locales\")'>Click here to see Locales</a>",
						"required": false,
						"schema": {
							"type": "string",
							"example": "en_US"
						}
					},
					{
						"in": "header",
						"name": "authorization",
						"description": "This indicates the authorization token for the input request.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "Bearer XXX"
						}
					}
				],
				"x-code-samples": [
					{
						"lang": "C#",
						"source": "var client = new RestClient(\"https://apis-sandbox.fedex.com/ship/v1/shipments/packages/validate\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"Authorization\", \"Bearer \");\nrequest.AddHeader(\"X-locale\", \"en_US\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\n// 'input' refers to JSON Payload\nrequest.AddParameter(\"application/x-www-form-urlencoded\", input, ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\n\n\n\n\n"
					},
					{
						"lang": "JAVA",
						"source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\n// 'input' refers to JSON Payload\nRequestBody body = RequestBody.create(mediaType, input);\nRequest request = new Request.Builder()\n    .url(\"https://apis-sandbox.fedex.com/ship/v1/shipments/packages/validate\")\n    .post(body)\n    .addHeader(\"Content-Type\", \"application/json\")\n    .addHeader(\"X-locale\", \"en_US\")\n    .addHeader(\"Authorization\", \"Bearer \")\n    .build();\n            \nResponse response = client.newCall(request).execute();"
					},
					{
						"lang": "JAVASCRIPT",
						"source": "// 'input' refers to JSON Payload\nvar data = JSON.stringify(input);\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"POST\", \"https://apis-sandbox.fedex.com/ship/v1/shipments/packages/validate\");\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\"X-locale\", \"en_US\");\n  xhr.setRequestHeader(\"Authorization\", \"Bearer \");\n  \n  xhr.send(data);"
					},
					{
						"lang": "PHP",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://apis-sandbox.fedex.com/ship/v1/shipments/packages/validate');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'Authorization' => 'Bearer ',\n  'X-locale' => 'en_US',\n  'Content-Type' => 'application/json'\n));\n\n$request->setBody(input); // 'input' refers to JSON Payload\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "PYTHON",
						"source": "import requests\n\nurl = \"https://apis-sandbox.fedex.com/ship/v1/shipments/packages/validate\"\n\npayload = input # 'input' refers to JSON Payload\nheaders = {\n    'Content-Type': \"application/json\",\n    'X-locale': \"en_US\",\n    'Authorization': \"Bearer \"\n    }\n\nresponse = requests.post(url, data=payload, headers=headers)\n\nprint(response.text)"
					},
					{
						"lang": "RUST",
						"source": "extern crate reqwest;\n\nuse std::io::Read;\n\nfn construct_headers() -> HeaderMap {\n    let mut headers = HeaderMap::new();\n    headers.insert(\"Content-Type\", \"application/json\");\n    headers.insert(\"X-locale\", \"en_US\");\n    headers.insert(\"Authorization\", \"Bearer \");\n    headers\n}\n\nfn run() -> Result<()> {\n    let client = reqwest::Client::new();\n    let mut res = client.post(\"https://apis-sandbox.fedex.com/ship/v1/shipments/packages/validate\")\n        .body(input) // 'input' refers to JSON Payload\n        .headers(construct_headers())\n        .send()?;\n    let mut body = String::new();\n    res.read_to_string(&mut body)?;\n\n    println!(\"Status: {}\", res.status());\n    println!(\"Headers:\\n{:#?}\", res.headers());\n    println!(\"Body:\\n{}\", body);\n\n    Ok(())\n}"
					},
					{
						"lang": "SWIFT",
						"source": "import Foundation\n\nlet headers = [\n  \"Content-Type\": \"application/json\",\n  \"X-locale\": \"en_US\",\n  \"Authorization\": \"Bearer \"\n]\nlet parameters = [\n  input // 'input' refers to JSON Payload\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://apis-sandbox.fedex.com/ship/v1/shipments/packages/validate\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
					}
				]
			}
		},
		"/ship/v1/shipments/tag": {
			"post": {
				"summary": "Create Tag",
				"description": "FedEx creates and delivers a return shipping label to your customer and collects the item for return. Your customer needs to have the package ready for pickup when the FedEx driver arrives. Use this endpoint to create tag requests for FedEx Express and FedEx Ground shipments.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>",
				"operationId": "Create Tag",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/Full_Schema_Create_Tag"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SHPCResponseVO_CreateTag"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "SHIPMENT.USER.UNAUTHORIZED",
											"message": "Requested user is not authorized to perform the operation."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO401"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.AUTHORIZED.ERROR",
											"message": "Access token expired. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO403"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "FORBIDDEN.ERROR",
											"message": "We could not authorize your credentials. Please check your permissions and try again."
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO404"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.FOUND.ERROR",
											"message": "The resource you requested is no longer available. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Failure",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO500"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "INTERNAL.SERVER.ERROR",
											"message": "We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO503"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "SERVICE.UNAVAILABLE.ERROR",
											"message": "The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					}
				},
				"parameters": [
					{
						"in": "header",
						"name": "x-customer-transaction-id",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
						"required": false,
						"schema": {
							"type": "string",
							"example": "624deea6-b709-470c-8c39-4b5511281492"
						}
					},
					{
						"in": "header",
						"name": "content-type",
						"description": "This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"in": "header",
						"name": "x-locale",
						"description": "This indicates the combination of language code and country code.  <a onclick='loadDocReference(\"locales\")'>Click here to see Locales</a>",
						"required": false,
						"schema": {
							"type": "string",
							"example": "en_US"
						}
					},
					{
						"in": "header",
						"name": "authorization",
						"description": "This indicates the authorization token for the input request.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "Bearer XXX"
						}
					}
				],
				"x-code-samples": [
					{
						"lang": "C#",
						"source": "var client = new RestClient(\"https://apis-sandbox.fedex.com/ship/v1/shipments/tag\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"Authorization\", \"Bearer \");\nrequest.AddHeader(\"X-locale\", \"en_US\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\n// 'input' refers to JSON Payload\nrequest.AddParameter(\"application/x-www-form-urlencoded\", input, ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);\n\n\n\n\n"
					},
					{
						"lang": "JAVA",
						"source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\n// 'input' refers to JSON Payload\nRequestBody body = RequestBody.create(mediaType, input);\nRequest request = new Request.Builder()\n    .url(\"https://apis-sandbox.fedex.com/ship/v1/shipments/tag\")\n    .post(body)\n    .addHeader(\"Content-Type\", \"application/json\")\n    .addHeader(\"X-locale\", \"en_US\")\n    .addHeader(\"Authorization\", \"Bearer \")\n    .build();\n            \nResponse response = client.newCall(request).execute();"
					},
					{
						"lang": "JAVASCRIPT",
						"source": "// 'input' refers to JSON Payload\nvar data = JSON.stringify(input);\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"POST\", \"https://apis-sandbox.fedex.com/ship/v1/shipments/tag\");\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\"X-locale\", \"en_US\");\n  xhr.setRequestHeader(\"Authorization\", \"Bearer \");\n  \n  xhr.send(data);"
					},
					{
						"lang": "PHP",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://apis-sandbox.fedex.com/ship/v1/shipments/tag');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'Authorization' => 'Bearer ',\n  'X-locale' => 'en_US',\n  'Content-Type' => 'application/json'\n));\n\n$request->setBody(input); // 'input' refers to JSON Payload\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "PYTHON",
						"source": "import requests\n\nurl = \"https://apis-sandbox.fedex.com/ship/v1/shipments/tag\"\n\npayload = input # 'input' refers to JSON Payload\nheaders = {\n    'Content-Type': \"application/json\",\n    'X-locale': \"en_US\",\n    'Authorization': \"Bearer \"\n    }\n\nresponse = requests.post(url, data=payload, headers=headers)\n\nprint(response.text)"
					},
					{
						"lang": "RUST",
						"source": "extern crate reqwest;\n\nuse std::io::Read;\n\nfn construct_headers() -> HeaderMap {\n    let mut headers = HeaderMap::new();\n    headers.insert(\"Content-Type\", \"application/json\");\n    headers.insert(\"X-locale\", \"en_US\");\n    headers.insert(\"Authorization\", \"Bearer \");\n    headers\n}\n\nfn run() -> Result<()> {\n    let client = reqwest::Client::new();\n    let mut res = client.post(\"https://apis-sandbox.fedex.com/ship/v1/shipments/tag\")\n        .body(input) // 'input' refers to JSON Payload\n        .headers(construct_headers())\n        .send()?;\n    let mut body = String::new();\n    res.read_to_string(&mut body)?;\n\n    println!(\"Status: {}\", res.status());\n    println!(\"Headers:\\n{:#?}\", res.headers());\n    println!(\"Body:\\n{}\", body);\n\n    Ok(())\n}"
					},
					{
						"lang": "SWIFT",
						"source": "import Foundation\n\nlet headers = [\n  \"Content-Type\": \"application/json\",\n  \"X-locale\": \"en_US\",\n  \"Authorization\": \"Bearer \"\n]\nlet parameters = [\n  input // 'input' refers to JSON Payload\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://apis-sandbox.fedex.com/ship/v1/shipments/tag\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"POST\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
					}
				]
			}
		},
		"/ship/v1/shipments/tag/cancel/{shipmentid}": {
			"put": {
				"summary": "Cancel Tag",
				"description": "This endpoint cancels a FedEx Return Tag and the associated pickup for FedEx Express and FedEx Ground shipments if the shipment has not yet been picked up by the courier.<br><i>Note: FedEx APIs do not support Cross-Origin Resource Sharing (CORS) mechanism.</i>",
				"operationId": "CancelTag",
				"parameters": [
					{
						"name": "shipmentid",
						"in": "path",
						"required": true,
						"style": "simple",
						"explode": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "header",
						"name": "x-customer-transaction-id",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply.",
						"required": false,
						"schema": {
							"type": "string",
							"example": "624deea6-b709-470c-8c39-4b5511281492"
						}
					},
					{
						"in": "header",
						"name": "content-type",
						"description": "This is used to indicate the media type of the resource. The media type is a string sent along with the file indicating format of the file.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "application/json"
						}
					},
					{
						"in": "header",
						"name": "x-locale",
						"description": "This indicates the combination of language code and country code.  <a onclick='loadDocReference(\"locales\")'>Click here to see Locales</a>",
						"required": false,
						"schema": {
							"type": "string",
							"example": "en_US"
						}
					},
					{
						"in": "header",
						"name": "authorization",
						"description": "This indicates the authorization token for the input request.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "Bearer XXX"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"$ref": "#/components/schemas/FullSchema-CancelTag"
									}
								]
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SHPCResponseVO"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "SHIPMENT.USER.UNAUTHORIZED",
											"message": "Requested user is not authorized to perform the operation."
										}
									]
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO401_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.AUTHORIZED.ERROR",
											"message": "Access token expired. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"403": {
						"description": "Forbidden",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO403_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "FORBIDDEN.ERROR",
											"message": "We could not authorize your credentials. Please check your permissions and try again."
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO404_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "NOT.FOUND.ERROR",
											"message": "The resource you requested is no longer available. Please modify your request and try again."
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Failure",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO500_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"customerTransactionId": "AnyCo_order123456789",
									"errors": [
										{
											"code": "INTERNAL.SERVER.ERROR",
											"message": "We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					},
					"503": {
						"description": "Service Unavailable",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponseVO503_2"
								},
								"example": {
									"transactionId": "624deea6-b709-470c-8c39-4b5511281492",
									"errors": [
										{
											"code": "SERVICE.UNAVAILABLE.ERROR",
											"message": "The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
										}
									]
								}
							}
						}
					}
				},
				"x-code-samples": [
					{
						"lang": "C#",
						"source": "var client = new RestClient(\"https://apis-sandbox.fedex.com/ship/v1/shipments/tag/cancel/{shipmentid}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"Authorization\", \"Bearer \");\nrequest.AddHeader(\"X-locale\", \"en_US\");\nrequest.AddHeader(\"Content-Type\", \"application/json\");\n// 'input' refers to JSON Payload\nrequest.AddParameter(\"application/x-www-form-urlencoded\", input, ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
					},
					{
						"lang": "JAVA",
						"source": "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\n// 'input' refers to JSON Payload\nRequestBody body = RequestBody.create(mediaType, input);\nRequest request = new Request.Builder()\n  .url(\"https://apis-sandbox.fedex.com/ship/v1/shipments/tag/cancel/{shipmentid}\")\n  .put(body)\n  .addHeader(\"Content-Type\", \"application/json\")\n  .addHeader(\"X-locale\", \"en_US\")\n  .addHeader(\"Authorization\", \"Bearer \")\n  .build();\n\nResponse response = client.newCall(request).execute();"
					},
					{
						"lang": "JAVASCRIPT",
						"source": "// 'input' refers to JSON Payload\nvar data = JSON.stringify(input);\n  \n  var xhr = new XMLHttpRequest();\n  xhr.withCredentials = true;\n  \n  xhr.addEventListener(\"readystatechange\", function () {\n    if (this.readyState === 4) {\n      console.log(this.responseText);\n    }\n  });\n  \n  xhr.open(\"PUT\", \"https://apis-sandbox.fedex.com/ship/v1/shipments/tag/cancel/{shipmentid}\");\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n  xhr.setRequestHeader(\"X-locale\", \"en_US\");\n  xhr.setRequestHeader(\"Authorization\", \"Bearer \");\n  \n  xhr.send(data);"
					},
					{
						"lang": "PHP",
						"source": "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://apis-sandbox.fedex.com/ship/v1/shipments/tag/cancel/{shipmentid}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'Authorization' => 'Bearer ',\n  'X-locale' => 'en_US',\n  'Content-Type' => 'application/json'\n));\n\n$request->setBody(input); // 'input' refers to JSON Payload\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
					},
					{
						"lang": "PYTHON",
						"source": "import requests\n\nurl = \"https://apis-sandbox.fedex.com/ship/v1/shipments/tag/cancel/{shipmentid}\"\n\npayload = input # 'input' refers to JSON Payload\nheaders = {\n    'Content-Type': \"application/json\",\n    'X-locale': \"en_US\",\n    'Authorization': \"Bearer \"\n    }\n\nresponse = requests.put(url, data=payload, headers=headers)\n\nprint(response.text)"
					},
					{
						"lang": "RUST",
						"source": "extern crate reqwest;\n\nuse std::io::Read;\n\nfn construct_headers() -> HeaderMap {\n    let mut headers = HeaderMap::new();\n    headers.insert(\"Content-Type\", \"application/json\");\n    headers.insert(\"X-locale\", \"en_US\");\n    headers.insert(\"Authorization\", \"Bearer \");\n    headers\n}\n\nfn run() -> Result<()> {\n    let client = reqwest::Client::new();\n    let mut res = client.put(\"https://apis-sandbox.fedex.com/ship/v1/shipments/tag/cancel/{shipmentid}\")\n        .body(input) // 'input' refers to JSON Payload\n        .headers(construct_headers())\n        .send()?;\n    let mut body = String::new();\n    res.read_to_string(&mut body)?;\n\n    println!(\"Status: {}\", res.status());\n    println!(\"Headers:\\n{:#?}\", res.headers());\n    println!(\"Body:\\n{}\", body);\n\n    Ok(())\n}"
					},
					{
						"lang": "SWIFT",
						"source": "import Foundation\n\nlet headers = [\n  \"Content-Type\": \"application/json\",\n  \"X-locale\": \"en_US\",\n  \"Authorization\": \"Bearer \"\n]\nlet parameters = [\n  input // 'input' refers to JSON Payload\n] as [String : Any]\n\nlet postData = JSONSerialization.data(withJSONObject: parameters, options: [])\n\nlet request = NSMutableURLRequest(url: NSURL(string: \"https://apis-sandbox.fedex.com/ship/v1/shipments/tag/cancel/{shipmentid}\")! as URL,\n                                        cachePolicy: .useProtocolCachePolicy,\n                                    timeoutInterval: 10.0)\nrequest.httpMethod = \"PUT\"\nrequest.allHTTPHeaderFields = headers\nrequest.httpBody = postData as Data\n\nlet session = URLSession.shared\nlet dataTask = session.dataTask(with: request as URLRequest, completionHandler: { (data, response, error) -> Void in\n  if (error != nil) {\n    print(error)\n  } else {\n    let httpResponse = response as? HTTPURLResponse\n    print(httpResponse)\n  }\n})\n\ndataTask.resume()"
					}
				]
			}
		}
	},
	"components": {
		"schemas": {
			"Full_Schema_Ship": {
				"required": [
					"accountNumber",
					"labelResponseOptions",
					"requestedShipment"
				],
				"type": "object",
				"properties": {
					"mergeLabelDocOption": {
						"type": "string",
						"description": "It specifies the content of the merged pdf URL in the response. The merged pdf URL is generated only if the labelResponseOption is indicated as URL_ONLY.<ul><li>If the value is 'LABELS_AND_DOCS', then merged (all shipping labels and shipping documents) pdf URL will be returned.</li><li>If the value is 'LABELS_ONLY', merged (all shipping labels only) pdf URL will be returned.</li><li>If the value is 'NONE', then no merged pdf URL will be returned.</li></ul><br>This is optional field and will default to LABELS_AND_DOCS.<br>Note: If the value is 'LABELS_ONLY', then the returned merged pdf label will not be in the Base64 encoded format.",
						"example": "LABELS_AND_DOCS",
						"enum": [
							"NONE",
							"LABELS_AND_DOCS",
							"LABELS_ONLY"
						]
					},
					"requestedShipment": {
						"$ref": "#/components/schemas/RequestedShipment"
					},
					"labelResponseOptions": {
						"$ref": "#/components/schemas/LABELRESPONSEOPTIONS"
					},
					"accountNumber": {
						"$ref": "#/components/schemas/ShipperAccountNumber"
					},
					"shipAction": {
						"$ref": "#/components/schemas/OpenShipmentAction"
					},
					"processingOptionType": {
						"$ref": "#/components/schemas/AsynchronousProcessingOptionType_1"
					},
					"oneLabelAtATime": {
						"type": "boolean",
						"description": "This flag is used to specify if the shipment is singleshot mps or one Label at a time, piece by piece shipment. Default is false. If true, one label at a time is processed.",
						"example": true
					}
				},
				"description": "The request elements required to create a shipment."
			},
			"RequestedShipment": {
				"required": [
					"labelSpecification",
					"packagingType",
					"pickupType",
					"recipients",
					"requestedPackageLineItems",
					"serviceType",
					"shipper",
					"shippingChargesPayment"
				],
				"type": "object",
				"properties": {
					"shipDatestamp": {
						"type": "string",
						"description": "This is the shipment date. Default value is current date in case the date is not provided or a past date is provided.<br>Format [YYYY-MM-DD].<br>Example: 2019-10-14",
						"example": "2019-10-14"
					},
					"totalDeclaredValue": {
						"description": "It is the sum of all declared values of all packages in a shipment. The amount of totalDeclaredValue must be equal to the sum of all the individual declaredValues in the shipment. The declaredValue and totalDeclaredValue must match in all currencies in one shipment. This value represents FedEx maximum liability associated with a shipment. This is including, but not limited to any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information related to the Shipment.<br><i>Note: The totalDeclaredValue should not exceed customsValue.</i>",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					},
					"shipper": {
						"description": "Indicate the Shipper contact details for this shipment.",
						"example": {
							"address": {
								"streetLines": [
									"10 FedEx Parkway",
									"Suite 302"
								],
								"city": "Beverly Hills",
								"stateOrProvinceCode": "CA",
								"postalCode": "90210",
								"countryCode": "US",
								"residential": false
							},
							"contact": {
								"personName": "John Taylor",
								"emailAddress": "sample@company.com",
								"phoneExtension": "91",
								"phoneNumber": "XXXX567890",
								"companyName": "Fedex"
							},
							"tins": [
								{
									"number": "XXX567",
									"tinType": "FEDERAL",
									"usage": "usage",
									"effectiveDate": "2000-01-23T04:56:07.000+00:00",
									"expirationDate": "2000-01-23T04:56:07.000+00:00"
								}
							]
						},
						"allOf": [
							{
								"$ref": "#/components/schemas/ShipperParty"
							}
						]
					},
					"soldTo": {
						"description": "Will indicate the party responsible for purchasing the goods shipped from the shipper to the recipient. The sold to party is not necessarily the recipient or the importer of record. The sold to party is relevant when the purchaser, rather than the recipient determines when certain customs regulations apply.",
						"allOf": [
							{
								"$ref": "#/components/schemas/SoldToParty"
							}
						]
					},
					"recipients": {
						"type": "array",
						"description": "Indicate the descriptive data for the recipient location to which the shipment is to be received.",
						"items": {
							"$ref": "#/components/schemas/RecipientsParty"
						}
					},
					"recipientLocationNumber": {
						"type": "string",
						"description": "A unique identifier for a recipient location.",
						"example": "1234567"
					},
					"pickupType": {
						"type": "string",
						"description": "Indicate the pickup type method by which the shipment to be tendered to FedEx.<br><a onclick='loadDocReference(\"pickuptypes\")'>Click here for more information on Pickup Types.</a>",
						"example": "USE_SCHEDULED_PICKUP",
						"enum": [
							"CONTACT_FEDEX_TO_SCHEDULE",
							"DROPOFF_AT_FEDEX_LOCATION",
							"USE_SCHEDULED_PICKUP"
						]
					},
					"serviceType": {
						"type": "string",
						"description": "Indicate the FedEx service type used for this shipment.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference(\"servicetypes\")'>click here to see Service Types</a>",
						"example": "PRIORITY_OVERNIGHT"
					},
					"packagingType": {
						"type": "string",
						"description": "Specify the packaging used.<br>Note: For Express Freight shipments, the packaging will default to YOUR_PACKAGING irrespective of the user provided package type in the request.<br>Example: FEDEX_PAK<br><a onclick='loadDocReference(\"packagetypes\")'>click here to see Package Types</a>",
						"example": "YOUR_PACKAGING"
					},
					"totalWeight": {
						"type": "number",
						"description": "Indicate the shipment total weight in pounds.<br>Example: 10.6<br>Note: <ul><li>This only applies to International shipments and should be used on the first package of a multiple piece shipment.</li><li>This value contains 1 explicit decimal position.</li><li>For one Label at a time shipments, the unit of totalWeight is considered same as the unit of weight provided in requestedPackageLineItem field.</li></ul>",
						"format": "double",
						"example": 20.6
					},
					"origin": {
						"description": "Indicate shipment origin address information, if it is different from the shipper address.",
						"allOf": [
							{
								"$ref": "#/components/schemas/ContactAndAddress_1"
							}
						]
					},
					"shippingChargesPayment": {
						"$ref": "#/components/schemas/Payment"
					},
					"shipmentSpecialServices": {
						"$ref": "#/components/schemas/ShipmentSpecialServicesRequested"
					},
					"emailNotificationDetail": {
						"$ref": "#/components/schemas/ShipShipmentEMailNotificationDetail"
					},
					"expressFreightDetail": {
						"$ref": "#/components/schemas/ExpressFreightDetail"
					},
					"variableHandlingChargeDetail": {
						"$ref": "#/components/schemas/VariableHandlingChargeDetail"
					},
					"customsClearanceDetail": {
						"$ref": "#/components/schemas/CustomsClearanceDetail"
					},
					"smartPostInfoDetail": {
						"$ref": "#/components/schemas/SmartPostInfoDetail"
					},
					"blockInsightVisibility": {
						"type": "boolean",
						"description": "Indicate if the shipment be available to be visible/tracked using FedEx InSight<sup>®</sup> tool. If value indicated as true, only the shipper/payer will have visibility of this shipment in the FedEx InSight<sup>®</sup> tool.",
						"example": true
					},
					"labelSpecification": {
						"$ref": "#/components/schemas/LabelSpecification"
					},
					"shippingDocumentSpecification": {
						"$ref": "#/components/schemas/ShippingDocumentSpecification"
					},
					"rateRequestType": {
						"type": "array",
						"description": "Indicate the type of rates to be returned. The account specific rates are returned by default if the account number is specified in the request.<br>Following are values:<ul><li>LIST - Returns FedEx published list rates in addition to account-specific rates (if applicable).</li><li>INCENTIVE - This is one-time discount for incentivising the customer. For more information, contact your FedEx representative.</li><li>ACCOUNT - Returns account specific rates (Default).</li><li>PREFERRED - Returns rates in the preferred currency specified in the element preferredCurrency.</li><li>RETAIL - Returns customer rate from one of retail FedEx service centers.</li></ul>Examples: [\"ACCOUNT\", \"PREFERRED\"]",
						"example": [
							"LIST",
							"PREFERRED"
						],
						"items": {
							"type": "string",
							"enum": [
								"LIST",
								"NONE",
								"PREFERRED",
								"ACCOUNT",
								"INCENTIVE",
								"RETAIL"
							]
						}
					},
					"preferredCurrency": {
						"type": "string",
						"description": "Indicate the currency the caller requests to have used in all returned monetary values. Should be Used in conjunction with the element RateRequestType.<br>Example: USD<br><a onclick='loadDocReference(\"currencycodes\")'>click here to see available Currency codes</a><br>Note: Incorrect currency codes should not be supplied. The system ignores the incorrect currency code.",
						"example": "USD"
					},
					"totalPackageCount": {
						"type": "integer",
						"description": "For an MPS, this is the total number of packages in the shipment.Applicable for parent shipment for one label at a time shipments. <br>Example: 25",
						"format": "int32",
						"example": 25
					},
					"masterTrackingId": {
						"$ref": "#/components/schemas/MasterTrackingId"
					},
					"requestedPackageLineItems": {
						"type": "array",
						"description": "These are one or more package-attribute descriptions, each of which describes an individual package, a group of identical packages, or (for the total-piece-total-weight case) common characteristics of all packages in the shipment.<ul><li>At least one instance containing the weight for at least one package is required for EXPRESS and GROUND shipments.</li><li>Single piece requests will have one RequestedPackageLineItem.</li><li>Multiple piece requests will have multiple RequestedPackageLineItems.</li><li>Maximum occurrences is 30.</li></ul>",
						"items": {
							"$ref": "#/components/schemas/RequestedPackageLineItem"
						}
					}
				},
				"description": "The descriptive data of the requested shipment."
			},
			"Money": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "number",
						"description": "This is the amount. Maximum limit is 5 digits before decimal.<br>Example: 12.45",
						"format": "double",
						"example": 12.45
					},
					"currency": {
						"type": "string",
						"description": "This is the currency code for the amount.<br>Example: USD<br><a onclick='loadDocReference(\"currencycodes\")'>Click here to see Currency codes</a>",
						"example": "USD"
					}
				},
				"description": "This customs value is applicable for all items(or units) under the specified commodity"
			},
			"Customs_Money": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "number",
						"description": "This is the amount. Maximum limit is 5 digits before decimal.<br>Example:  1556.25",
						"format": "double",
						"example": "1556.25"
					},
					"currency": {
						"type": "string",
						"description": "This is the currency code for the amount.<br>Example: USD<br><a onclick='loadDocReference(\"currencycodes\")'>Click here to see Currency codes</a>",
						"example": "USD"
					}
				},
				"description": "This customs value is applicable for all items(or units) under the specified commodity."
			},
			"ShipperParty": {
				"required": [
					"address",
					"contact"
				],
				"type": "object",
				"properties": {
					"address": {
						"$ref": "#/components/schemas/PartyAddress"
					},
					"contact": {
						"$ref": "#/components/schemas/PartyContact"
					},
					"tins": {
						"type": "array",
						"description": "This is the tax identification number details.",
						"items": {
							"$ref": "#/components/schemas/TaxpayerIdentification"
						}
					}
				},
				"description": "Indicate the Shipper contact details for this shipment.",
				"example": {
					"address": {
						"streetLines": [
							"10 FedEx Parkway",
							"Suite 302"
						],
						"city": "Beverly Hills",
						"stateOrProvinceCode": "CA",
						"postalCode": "90210",
						"countryCode": "US",
						"residential": false
					},
					"contact": {
						"personName": "John Taylor",
						"emailAddress": "sample@company.com",
						"phoneExtension": "000",
						"phoneNumber": "XXXX345671",
						"companyName": "Fedex"
					},
					"tins": [
						{
							"number": "123567",
							"tinType": "FEDERAL",
							"usage": "usage",
							"effectiveDate": "2000-01-23T04:56:07.000+00:00",
							"expirationDate": "2000-01-23T04:56:07.000+00:00"
						}
					]
				}
			},
			"SoldToParty": {
				"description": "Will indicate the party responsible for purchasing the goods shipped from the shipper to the recipient. The sold to party is not necessarily the recipient or the importer of record. The sold to party is relevant when the purchaser, rather than the recipient determines when certain customs regulations apply.",
				"type": "object",
				"properties": {
					"address": {
						"$ref": "#/components/schemas/PartyAddress"
					},
					"contact": {
						"$ref": "#/components/schemas/PartyContact"
					},
					"tins": {
						"description": "Used for adding the tax id",
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/TaxpayerIdentification"
						}
					},
					"accountNumber": {
						"description": "Identification of a specific FedEx customer account.",
						"$ref": "#/components/schemas/AccountNumber"
					}
				}
			},
			"PartyAddress": {
				"required": [
					"city",
					"countryCode",
					"streetLines"
				],
				"type": "object",
				"properties": {
					"streetLines": {
						"type": "array",
						"description": "Combination of number, street name, etc. At least one line is required for a valid physical address. Empty lines should not be included. Max Length is 35.<br>Example: [1550 Union Blvd,Suite 302]",
						"example": "1550 Union Blvd, Suite 302",
						"items": {
							"type": "string"
						}
					},
					"city": {
						"type": "string",
						"maxLength": 35,
						"description": "The name of city, town of the recipient.Max length is 35.<br>Example: Beverly Hills",
						"example": "Beverly Hills"
					},
					"stateOrProvinceCode": {
						"type": "string",
						"description": "The US States,Canada and Puerto Rico Province codes of the recipient. The Format and presence of this field may vary depending on the country.State code is required for US, CA, PR and not required for other countries. Conditional. Max length is 2.<br>Example: CA",
						"example": "CA"
					},
					"postalCode": {
						"type": "string",
						"description": "This is the postal code.<br>Note: This is Optional for non postal-aware countries. Maximum length is 10.<br>Example: 65247<br><a onclick='loadDocReference(\"postalawarecountries\")'>click here to see Postal aware countries</a>",
						"example": "90210"
					},
					"countryCode": {
						"type": "string",
						"description": "This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference(\"countrycodes\")'>click here to see Country codes</a>",
						"example": "US"
					},
					"residential": {
						"type": "boolean",
						"description": "Indicate whether this address is residential (as opposed to commercial).",
						"example": false
					}
				},
				"description": "This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).",
				"example": {
					"streetLines": [
						"10 FedEx Parkway",
						"Suite 302"
					],
					"city": "Beverly Hills",
					"stateOrProvinceCode": "CA",
					"postalCode": "90210",
					"countryCode": "US",
					"residential": false
				}
			},
			"PartyContact": {
				"required": [
					"phoneNumber"
				],
				"type": "object",
				"properties": {
					"personName": {
						"type": "string",
						"description": "Specify contact name. Maximum length is 70. <br>Note: Either the companyName or personName is mandatory.<br> Example: John Taylor",
						"example": "John Taylor"
					},
					"emailAddress": {
						"type": "string",
						"description": "Specify contact email address. Maximum length is 80. <br> Example: sample@company.com",
						"example": "sample@company.com"
					},
					"phoneExtension": {
						"type": "string",
						"description": "Specify contact phone extension. Maximum length is 6. <br> Example: 1234",
						"example": "91"
					},
					"phoneNumber": {
						"type": "string",
						"description": "The shipper's phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers.<br>Note: For US and CA, a phone number must have exactly 10 digits, plus an optional leading country code of '1' or '+1'.<br>Example: 918xxxxx890",
						"example": "918xxxxx890"
					},
					"companyName": {
						"type": "string",
						"description": "Specify contact company name. Maximum length is 35. <br>Note: Either the companyName or personName is mandatory.",
						"example": "Fedex"
					}
				},
				"description": "Indicate the contact details for this shipment.",
				"example": {
					"personName": "John Taylor",
					"emailAddress": "sample@company.com",
					"phoneExtension": "91",
					"phoneNumber": "1234567890",
					"companyName": "Fedex"
				}
			},
			"TaxpayerIdentification": {
				"type": "object",
				"properties": {
					"number": {
						"type": "string",
						"description": "Specify tax ID number. Maximum length is 18. <br>Example: 123567",
						"example": "123567"
					},
					"tinType": {
						"type": "string",
						"description": "Indicate the type of tax identification number.",
						"example": "FEDERAL",
						"enum": [
							"PERSONAL_NATIONAL",
							"PERSONAL_STATE",
							"FEDERAL",
							"BUSINESS_NATIONAL",
							"BUSINESS_STATE",
							"BUSINESS_UNION"
						]
					},
					"usage": {
						"type": "string",
						"description": "Specify the reason for using the tax identification number in shipment processing.",
						"example": "usage"
					},
					"effectiveDate": {
						"type": "string",
						"description": "Specify the tax ID effective date.<br>Example: 2000-01-23T04:56:07.000+00:00",
						"example": "2000-01-23T04:56:07.000+00:00"
					},
					"expirationDate": {
						"type": "string",
						"description": "Specify the tax ID expiration date.<br>Example: 2000-01-23T04:56:07.000+00:00",
						"example": "2000-01-23T04:56:07.000+00:00"
					}
				},
				"example": {
					"number": "123567",
					"tinType": "FEDERAL",
					"usage": "usage",
					"effectiveDate": "2000-01-23T04:56:07.000+00:00",
					"expirationDate": "2000-01-23T04:56:07.000+00:00"
				}
			},
			"RecipientsParty": {
				"required": [
					"address",
					"contact"
				],
				"type": "object",
				"properties": {
					"address": {
						"$ref": "#/components/schemas/PartyAddress"
					},
					"contact": {
						"$ref": "#/components/schemas/PartyContact"
					},
					"tins": {
						"type": "array",
						"description": "This is the tax identification number details.",
						"items": {
							"$ref": "#/components/schemas/TaxpayerIdentification"
						}
					},
					"deliveryInstructions": {
						"type": "string",
						"description": "Specify the delivery instructions to be added with the shipment. Use with Ground Home Delivery.<br>Example: Delivery Instructions",
						"example": "Instruction 1"
					}
				},
				"description": "The descriptive information of the recipient for the shipment and the physical location for the package destination.",
				"example": {
					"address": {
						"streetLines": [
							"10 FedEx Parkway",
							"Suite 302"
						],
						"city": "Beverly Hills",
						"stateOrProvinceCode": "CA",
						"postalCode": "90210",
						"countryCode": "US",
						"residential": false
					},
					"contact": {
						"personName": "John Taylor",
						"emailAddress": "sample@company.com",
						"phoneExtension": "000",
						"phoneNumber": "XXXX345671",
						"companyName": "FedEx"
					},
					"tins": [
						{
							"number": "123567",
							"tinType": "FEDERAL",
							"usage": "usage",
							"effectiveDate": "2000-01-23T04:56:07.000+00:00",
							"expirationDate": "2000-01-23T04:56:07.000+00:00"
						}
					],
					"deliveryInstructions": "Delivery Instructions"
				}
			},
			"ContactAndAddress_1": {
				"type": "object",
				"properties": {
					"contact": {
						"$ref": "#/components/schemas/Contact_2"
					},
					"address": {
						"$ref": "#/components/schemas/Address_1"
					}
				},
				"description": "Specifies the contact and address details of a location.",
				"example": {
					"address": {
						"streetLines": [
							"10 FedEx Parkway",
							"Suite 302"
						],
						"city": "Beverly Hills",
						"stateOrProvinceCode": "CA",
						"postalCode": "38127",
						"countryCode": "US",
						"residential": false
					},
					"contact": {
						"personName": "person name",
						"emailAddress": "email address",
						"phoneNumber": "phone number",
						"phoneExtension": "phone extension",
						"companyName": "company name",
						"faxNumber": "fax number"
					}
				}
			},
			"Contact_2": {
				"type": "object",
				"properties": {
					"personName": {
						"type": "string",
						"description": "Specify contact person name.<br>Recommended length is 70. <br>Note: There's no specific validation for the person name.<br> Example: John Taylor",
						"example": "John Taylor"
					},
					"emailAddress": {
						"type": "string",
						"description": "Specify contact email address. Maximum length is 80. <br> Example: sample@company.com",
						"example": "sample@company.com"
					},
					"phoneNumber": {
						"type": "string",
						"description": "Specify contact phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers. <br>Note: Recommended Maximum length is 15 and there's no specific validation will be done for the phone number. <br> Example: 918xxxxx890",
						"example": "1234567890"
					},
					"phoneExtension": {
						"type": "string",
						"description": "Specify contact phone extension. <br>Note: Recommended length is 6. There's no specific validation for the phone extension. <br> Example: 1234",
						"example": "91"
					},
					"faxNumber": {
						"type": "string",
						"description": "Specify contact fax number.<br>Note: Recommended length is 15. There's no specific validation for the fax number.<br> Example: 1234567890",
						"example": "956123"
					},
					"companyName": {
						"type": "string",
						"description": "Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation for the company name.",
						"example": "Fedex"
					}
				},
				"description": "Indicate the contact details of the shipper.",
				"example": {
					"personName": "John Taylor",
					"emailAddress": "sample@company.com",
					"phoneNumber": "1234567890",
					"phoneExtension": 1234,
					"faxNumber": "1234567890",
					"companyName": "Fedex"
				}
			},
			"Address_1": {
				"type": "object",
				"properties": {
					"streetLines": {
						"type": "array",
						"description": "This is the combination of number, street name, etc. <br>Note: At least one line is required and streetlines more than 3 will be ignored. Empty lines should not be included. Maximum length per line is 35.<br>Example: [10 FedEx Parkway, Suite 302, .etc.]",
						"example": [
							"Bldg. 10",
							"10 FedEx Parkway"
						],
						"items": {
							"type": "string"
						}
					},
					"city": {
						"type": "string",
						"description": "This is a placeholder for City Name.<br>Note: This is conditional and not required in all the requests.<br>Note: It is recommended for Express shipments for the most accurate ODA and OPA surcharges.<br>Example: Beverly Hills",
						"example": "Beverly Hills"
					},
					"stateOrProvinceCode": {
						"type": "string",
						"description": "This is a placeholder for State or Province code.State code is required for US, CA, PR and not required for other countries. Conditional. Max length is 2.<br>Example: CA<br><a onclick='loadDocReference(\"canadaprovincecodes\")'>click here to see State or Province Code</a>",
						"example": "CA"
					},
					"postalCode": {
						"type": "string",
						"description": "Indicate the Postal code. This is Optional for non postal-aware countries. Maximum length is 10.<br> Example: 65247<br><a onclick='loadDocReference(\"postalawarecountries\")'>click here to see Postal aware countries</a>",
						"example": "38127"
					},
					"countryCode": {
						"type": "string",
						"description": "This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference(\"countrycodes\")'>click here to see Country codes</a>",
						"example": "US"
					},
					"residential": {
						"type": "boolean",
						"description": "Indicate whether this address is residential (as opposed to commercial).",
						"example": false
					}
				},
				"description": "This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the U.S.)."
			},
			"Payment": {
				"required": [
					"paymentType"
				],
				"type": "object",
				"properties": {
					"paymentType": {
						"type": "string",
						"description": "Specifies the payment Type. <br>Note: This is required for Express, Ground and SmartPost shipments.<br> The payment type COLLECT is applicable only for Ground shipments.",
						"enum": [
							"SENDER",
							"RECIPIENT",
							"THIRD_PARTY",
							"COLLECT"
						]
					},
					"payor": {
						"$ref": "#/components/schemas/Payor"
					}
				},
				"description": "Specifies the payment details specifying the method and means of payment to FedEx for providing shipping services.",
				"example": {
					"paymentType": "SENDER",
					"payor": {
						"responsibleParty": {
							"address": {
								"streetLines": [
									"10 FedEx Parkway",
									"Suite 302"
								],
								"city": "Beverly Hills",
								"stateOrProvinceCode": "CA",
								"postalCode": "90210",
								"countryCode": "US",
								"residential": false
							},
							"contact": {
								"personName": "John Taylor",
								"emailAddress": "sample@company.com",
								"phoneNumber": "XXXX567890",
								"phoneExtension": "phone extension",
								"companyName": "Fedex",
								"faxNumber": "fax number"
							},
							"accountNumber": {
								"value": "Your account number"
							}
						}
					}
				}
			},
			"Payor": {
				"required": [
					"responsibleParty"
				],
				"type": "object",
				"properties": {
					"responsibleParty": {
						"$ref": "#/components/schemas/ResponsiblePartyParty"
					}
				},
				"description": "Payor is mandatory when the paymentType is RECIPIENT, THIRD_PARTY or COLLECT.",
				"example": {
					"responsibleParty": {
						"address": {
							"streetLines": [
								"10 FedEx Parkway",
								"Suite 302"
							],
							"city": "Beverly Hills",
							"stateOrProvinceCode": "CA",
							"postalCode": "90210",
							"countryCode": "US",
							"residential": false
						},
						"contact": {
							"personName": "John Taylor",
							"emailAddress": "sample@company.com",
							"phoneNumber": "XXXX567890",
							"phoneExtension": "phone extension",
							"companyName": "Fedex",
							"faxNumber": "fax number"
						},
						"accountNumber": {
							"value": "Your account number"
						}
					}
				}
			},
			"ResponsiblePartyParty": {
				"required": [
					"accountNumber"
				],
				"type": "object",
				"properties": {
					"address": {
						"$ref": "#/components/schemas/PartyAddress"
					},
					"contact": {
						"$ref": "#/components/schemas/PartyContact"
					},
					"accountNumber": {
						"$ref": "#/components/schemas/PartyAccountNumber"
					}
				},
				"description": "Indicate the payer Information responsible for paying for the shipment. <br>Note: ResponsibleParty accountNumber is required for ACCOUNT based services.",
				"example": {
					"address": {
						"streetLines": [
							"10 FedEx Parkway",
							"Suite 302"
						],
						"city": "Beverly Hills",
						"stateOrProvinceCode": "CA",
						"postalCode": "90210",
						"countryCode": "US",
						"residential": false
					},
					"contact": {
						"personName": "John Taylor",
						"emailAddress": "sample@company.com",
						"phoneExtension": "000",
						"phoneNumber": "XXXX345671",
						"companyName": "FedEx"
					},
					"accountNumber": {
						"value": "Your account number"
					}
				}
			},
			"PartyAccountNumber": {
				"type": "object",
				"properties": {
					"value": {
						"type": "string",
						"description": "The account number value.Value is required if the paymentType is RECIPIENT, THIRD_PARTY or COLLECT."
					}
				},
				"description": "This is FedEx Account number details.",
				"example": {
					"value": "Your account number"
				}
			},
			"ShipmentSpecialServicesRequested": {
				"type": "object",
				"properties": {
					"specialServiceTypes": {
						"type": "array",
						"description": "Special services requested for the shipment.<br>Example: <ul><li>HOLD_AT_LOCATION</li><li>RETURN_SHIPMENT</li><li>BROKER_SELECT_OPTION</li><li>CALL_BEFORE_DELIVERY</li><li>COD</li><li>CUSTOM_DELIVERY_WINDOW</li></ul><br><a onclick='loadDocReference(\"shipmentlevelspecialservicetypes\")'>click here to see Shipment Special Service Types</a>",
						"example": [
							"THIRD_PARTY_CONSIGNEE",
							"PROTECTION_FROM_FREEZING"
						],
						"items": {
							"type": "string"
						}
					},
					"etdDetail": {
						"$ref": "#/components/schemas/ETDDetail"
					},
					"returnShipmentDetail": {
						"$ref": "#/components/schemas/ReturnShipmentDetail"
					},
					"deliveryOnInvoiceAcceptanceDetail": {
						"$ref": "#/components/schemas/DeliveryOnInvoiceAcceptanceDetail"
					},
					"internationalTrafficInArmsRegulationsDetail": {
						"$ref": "#/components/schemas/InternationalTrafficInArmsRegulationsDetail"
					},
					"pendingShipmentDetail": {
						"$ref": "#/components/schemas/PendingShipmentDetail"
					},
					"holdAtLocationDetail": {
						"$ref": "#/components/schemas/HoldAtLocationDetail"
					},
					"shipmentCODDetail": {
						"$ref": "#/components/schemas/ShipmentCODDetail"
					},
					"shipmentDryIceDetail": {
						"$ref": "#/components/schemas/ShipmentDryIceDetail_1"
					},
					"internationalControlledExportDetail": {
						"$ref": "#/components/schemas/InternationalControlledExportDetail"
					},
					"homeDeliveryPremiumDetail": {
						"$ref": "#/components/schemas/HomeDeliveryPremiumDetail"
					}
				},
				"description": "Specify the special services requested at the shipment level.<br>If the shipper is requesting a special service which requires additional data (such as the COD amount), the shipment special service type must be present in the specialServiceTypes collection, and the supporting detail must be provided in the appropriate sub-object below.<br>RETURN_SHIPMENT is required for creating return shipments."
			},
			"ETDDetail": {
				"type": "object",
				"properties": {
					"attributes": {
						"type": "array",
						"description": "Use this attribute to specify if the Trade documents will be uploaded post the shipment.",
						"items": {
							"type": "string",
							"enum": [
								"POST_SHIPMENT_UPLOAD_REQUESTED"
							]
						}
					},
					"attachedDocuments": {
						"type": "array",
						"description": "Use this object to specify the details regarding already uploded document(s). This object is required if the documents are uploaded Pre-Shipment uploaded documents. It is recommended to provide values for all elements under this object.",
						"items": {
							"$ref": "#/components/schemas/UploadDocumentReferenceDetail"
						}
					},
					"requestedDocumentTypes": {
						"type": "array",
						"description": "Indicate the types of shipping documents produced for the shipper by FedEx. The types of shipping documents are copied back to the shipper in the shipment result data.<br>Note: For more information document types, refer business overview topic - <a href='#shippingandcustoms'><b>Shipping and Customs Documents.</b></a>",
						"example": [
							"VICS_BILL_OF_LADING",
							"GENERAL_AGENCY_AGREEMENT"
						],
						"items": {
							"type": "string",
							"enum": [
								"CERTIFICATE_OF_ORIGIN",
								"COMMERCIAL_INVOICE",
								"CUSTOM_PACKAGE_DOCUMENT",
								"CUSTOM_SHIPMENT_DOCUMENT",
								"CUSTOMER_SPECIFIED_LABELS",
								"EXPORT_DECLARATION",
								"GENERAL_AGENCY_AGREEMENT",
								"LABEL",
								"USMCA_CERTIFICATION_OF_ORIGIN",
								"OP_900",
								"PENDING_SHIPMENT_EMAIL_NOTIFICATION",
								"PRO_FORMA_INVOICE",
								"RETURN_INSTRUCTIONS",
								"USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN"
							]
						}
					}
				},
				"description": "Use this object to specify all information on how the electronic Trade document references used with the shipment."
			},
			"UploadDocumentReferenceDetail": {
				"type": "object",
				"properties": {
					"documentType": {
						"type": "string",
						"description": "Specify document type for the uploaded document. It should match with the type of uploaded document associated with documentId.",
						"example": "PRO_FORMA_INVOICE",
						"enum": [
							"CERTIFICATE_OF_ORIGIN",
							"COMMERCIAL_INVOICE",
							"ETD_LABEL",
							"USMCA_CERTIFICATION_OF_ORIGIN",
							"OTHER",
							"PRO_FORMA_INVOICE",
							"USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN"
						]
					},
					"documentReference": {
						"type": "string",
						"description": "Specify the reference for the uploaded document.This is for the customer to reference their uploaded docs when they retrieve them. Could be anything, order number, po number, whatever the customer used to tie the document to something they would use.<br>Note: Ensure to supply document references in case of  Pre-Shipment document upload.</br><br>Example: Reference",
						"example": "DocumentReference"
					},
					"description": {
						"type": "string",
						"description": "Specify additional information about the uploaded document for better understanding.<br>Example: Certificate of Origin is uploaded for country of manufacturing verification.",
						"example": "PRO FORMA INVOICE"
					},
					"documentId": {
						"type": "string",
						"description": "This is the uploaded document ID value.<br>Example: 090927d680038c61",
						"example": "090927d680038c61"
					}
				},
				"description": "Specify the document upload reference details."
			},
			"ReturnShipmentDetail": {
				"required": [
					"returnType"
				],
				"type": "object",
				"properties": {
					"returnEmailDetail": {
						"$ref": "#/components/schemas/ReturnEmailDetail"
					},
					"rma": {
						"$ref": "#/components/schemas/ReturnMerchandiseAuthorization"
					},
					"returnAssociationDetail": {
						"$ref": "#/components/schemas/ReturnAssociationDetail"
					},
					"returnType": {
						"type": "string",
						"description": "This is the return Type. Required to be set to PRINT_RETURN_LABEL for printed return label shipments. For email return label shipments returnType must be set to PENDING and pendingShipmentDetail must be set to EMAIL.",
						"example": "PRINT_RETURN_LABEL",
						"enum": [
							"PENDING",
							"PRINT_RETURN_LABEL"
						]
					}
				},
				"description": "Use this object for specifying return shipment details."
			},
			"ReturnEmailDetail": {
				"required": [
					"merchantPhoneNumber"
				],
				"type": "object",
				"properties": {
					"merchantPhoneNumber": {
						"type": "string",
						"description": "This is the merchant phone number and required for Email Return Labels.<br>Example: 19012635656",
						"example": "19012635656"
					},
					"allowedSpecialService": {
						"type": "array",
						"description": "Indicate the allowed (merchant-authorized) special services which may be selected when the subsequent shipment is created.<br>Only services represented in EmailLabelAllowedSpecialServiceType will be controlled by this list.",
						"items": {
							"type": "string",
							"example": "SATURDAY_DELIVERY",
							"enum": [
								"SATURDAY_DELIVERY",
								"SATURDAY_PICKUP"
							]
						}
					}
				},
				"description": "These are email details for the return shipment."
			},
			"ReturnMerchandiseAuthorization": {
				"type": "object",
				"properties": {
					"reason": {
						"type": "string",
						"description": "Specify the reason for the return.<br> Note: There is no validation for reason. Recommended length is 60 alpha-numeric characters<br>Example: Wrong color or size.",
						"example": "Wrong Size or Color"
					}
				},
				"description": "This is a Return Merchant Authorization (RMA) for the return shipment.<br> Reason for the requirement is mandatory."
			},
			"ReturnAssociationDetail": {
				"type": "object",
				"properties": {
					"shipDatestamp": {
						"type": "string",
						"description": "This is the ship date for the outbound shipment associated with a return shipment. The format is YYYY-MM-DD.<br> Example: 2019-10-01",
						"example": "2019-10-01"
					},
					"trackingNumber": {
						"type": "string",
						"description": "This is the tracking number associated with this package.<br>Example: 49XXX0000XXX20032835",
						"example": "123456789"
					}
				},
				"description": "Specifies the details of an outbound shipment in order to associate the return shipment to it."
			},
			"DeliveryOnInvoiceAcceptanceDetail": {
				"type": "object",
				"properties": {
					"recipient": {
						"description": "The descriptive data for the recipient of the shipment and the physical location for the shipment destination.",
						"allOf": [
							{
								"$ref": "#/components/schemas/RecipientsParty"
							},
							{
								"required": [
									"address",
									"contact"
								],
								"properties": {
									"address": {
										"required": [
											"countryCode",
											"streetLines"
										],
										"properties": {
											"streetLines": {
												"type": "array",
												"description": "This is the combination of number, street name, etc. <br>Note: At least one line is required and streetlines more than 3 will be ignored. Empty lines should not be included. Maximum length per line is 35.<br>Example: [10 FedEx Parkway, Suite 302, .etc.]",
												"example": [
													"23, RUE JOSEPH-DE MA"
												],
												"items": {
													"type": "string"
												}
											},
											"countryCode": {
												"type": "string",
												"description": "The two-letter code used to identify a country. Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference(\"countrycodes\")'>click here to see Country codes</a>",
												"example": "US"
											}
										}
									},
									"contact": {
										"required": [
											"companyName",
											"personName",
											"phoneNumber"
										],
										"properties": {
											"companyName": {
												"type": "string",
												"description": "Identifies the company this contact is associated with. Maximum length is 35.",
												"example": "Fedex"
											},
											"personName": {
												"type": "string",
												"description": "Identifies the contact person's name. Maximum length is 70.",
												"example": "John Taylor"
											},
											"phoneNumber": {
												"type": "string",
												"description": "Identifies the phone number associated with this contact. Maximum length is 10.",
												"example": "1234567890"
											}
										}
									}
								}
							}
						]
					}
				},
				"description": "Indicate the Delivery On Invoice Acceptance detail. Recipient is required for Delivery On Invoice Special service."
			},
			"InternationalTrafficInArmsRegulationsDetail": {
				"required": [
					"licenseOrExemptionNumber"
				],
				"type": "object",
				"properties": {
					"licenseOrExemptionNumber": {
						"type": "string",
						"description": "The export or license number for the ITAR shipment.<br>Minimum length is 5 characters.<br>Maximum length is 21 characters.<br>Example: 9871234",
						"example": "9871234"
					}
				},
				"description": "These are International Traffic In Arms Regulations shipment service details."
			},
			"PendingShipmentDetail": {
				"required": [
					"emailLabelDetail",
					"pendingShipmentType"
				],
				"type": "object",
				"properties": {
					"pendingShipmentType": {
						"type": "string",
						"description": "This is Pending Shipment Type. Must include the value 'EMAIL' for email return shipments.<br>Not applicable for other types of shipments.",
						"example": "EMAIL",
						"enum": [
							"EMAIL"
						]
					},
					"processingOptions": {
						"$ref": "#/components/schemas/PendingShipmentProcessingOptionsRequested"
					},
					"recommendedDocumentSpecification": {
						"$ref": "#/components/schemas/RecommendedDocumentSpecification"
					},
					"emailLabelDetail": {
						"$ref": "#/components/schemas/EmailLabelDetail"
					},
					"attachedDocuments": {
						"type": "array",
						"description": "These are the reference document details with the shipment.",
						"items": {
							"$ref": "#/components/schemas/UploadDocumentReferenceDetail_1"
						}
					},
					"expirationTimeStamp": {
						"type": "string",
						"description": "This is the Email Label expiration date. The maximum expiration date for an Email Return Label must be greater of equal to the day of the label request and not greater than 2 years in the future.<br>Example: 2020-01-01",
						"example": "2020-01-01"
					}
				},
				"description": "This object is used to specify the Pending Shipment Type for Email label."
			},
			"PendingShipmentProcessingOptionsRequested": {
				"type": "object",
				"properties": {
					"options": {
						"type": "array",
						"description": "These are processing options.",
						"example": [
							"ALLOW_MODIFICATIONS"
						],
						"items": {
							"type": "string",
							"enum": [
								"ALLOW_MODIFICATIONS"
							]
						}
					}
				},
				"description": "Use this object to allow the Email Label shipment originator,  specify if the Email label shipment completer can make modifications to editable shipment data."
			},
			"RecommendedDocumentSpecification": {
				"required": [
					"types"
				],
				"type": "object",
				"properties": {
					"types": {
						"type": "array",
						"description": "This is the recommended document Type.<br><a onclick='loadDocReference(\"shipmentdocumenttype\")'>click here to see shipment document type</a>",
						"example": "ANTIQUE_STATEMENT_EUROPEAN_UNION",
						"items": {
							"type": "string",
							"enum": [
								"ANTIQUE_STATEMENT_EUROPEAN_UNION",
								"ANTIQUE_STATEMENT_UNITED_STATES",
								"ASSEMBLER_DECLARATION",
								"BEARING_WORKSHEET",
								"CERTIFICATE_OF_SHIPMENTS_TO_SYRIA",
								"COMMERCIAL_INVOICE_FOR_THE_CARIBBEAN_COMMON_MARKET",
								"CONIFEROUS_SOLID_WOOD_PACKAGING_MATERIAL_TO_THE_PEOPLES_REPUBLIC_OF_CHINA",
								"DECLARATION_FOR_FREE_ENTRY_OF_RETURNED_AMERICAN_PRODUCTS",
								"DECLARATION_OF_BIOLOGICAL_STANDARDS",
								"DECLARATION_OF_IMPORTED_ELECTRONIC_PRODUCTS_SUBJECT_TO_RADIATION_CONTROL_STANDARD",
								"ELECTRONIC_INTEGRATED_CIRCUIT_WORKSHEET",
								"FILM_AND_VIDEO_CERTIFICATE",
								"INTERIM_FOOTWEAR_INVOICE",
								"USMCA_CERTIFICATION_OF_ORIGIN_CANADA_ENGLISH",
								"USMCA_CERTIFICATION_OF_ORIGIN_CANADA_FRENCH",
								"USMCA_CERTIFICATION_OF_ORIGIN_SPANISH",
								"USMCA_CERTIFICATION_OF_ORIGIN_UNITED_STATES",
								"PACKING_LIST",
								"PRINTED_CIRCUIT_BOARD_WORKSHEET",
								"REPAIRED_WATCH_BREAKOUT_WORKSHEET",
								"STATEMENT_REGARDING_THE_IMPORT_OF_RADIO_FREQUENCY_DEVICES",
								"TOXIC_SUBSTANCES_CONTROL_ACT",
								"UNITED_STATES_CARIBBEAN_BASIN_TRADE_PARTNERSHIP_ACT_CERTIFICATE_OF_ORIGIN_TEXTILES",
								"UNITED_STATES_CARIBBEAN_BASIN_TRADE_PARTNERSHIP_ACT_CERTIFICATE_OF_ORIGIN_NON_TEXTILES",
								"UNITED_STATES_NEW_WATCH_WORKSHEET",
								"UNITED_STATES_WATCH_REPAIR_DECLARATION"
							]
						}
					}
				},
				"description": "These are documents that are recommended to be included with the shipment."
			},
			"EmailLabelDetail": {
				"type": "object",
				"properties": {
					"recipients": {
						"type": "array",
						"description": "This is Email label recipient email address, shipment role, & language locale details. Atleast one entry must be specified.",
						"items": {
							"$ref": "#/components/schemas/EmailRecipient"
						}
					},
					"message": {
						"type": "string",
						"description": "This is an optional personalized message to be included in the email to the recipient.",
						"example": "your optional message"
					}
				},
				"description": "These are specific information about the pending email label.<br>Required when PendingShipmentType is EMAIL.<br>Not applicable for CreateTag."
			},
			"EmailRecipient": {
				"required": [
					"emailAddress",
					"role"
				],
				"type": "object",
				"properties": {
					"emailAddress": {
						"type": "string",
						"description": "This is recipient email address for notifying the return label. Maximum length 200 characters.<br> Example: neena@abc.com",
						"example": "neena@fedex.com"
					},
					"optionsRequested": {
						"$ref": "#/components/schemas/EmailOptionsRequested"
					},
					"role": {
						"type": "string",
						"description": "This is to specify Recipient role in the shipment.Shipment completor role is needed when we pass shipment initiator. We cannot use shipment initiator alone.",
						"enum": [
							"SHIPMENT_COMPLETOR",
							"SHIPMENT_INITIATOR"
						]
					},
					"locale": {
						"type": "string",
						"description": "These are locale details.<br>Example: 'en_US'<br><a onclick='loadDocReference(\"locales\")'>click here to see locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.",
						"example": "en_US"
					}
				},
				"description": "These are the recipient details for the online email return label."
			},
			"EmailOptionsRequested": {
				"type": "object",
				"properties": {
					"options": {
						"type": "array",
						"description": "These are the processing options.",
						"example": [
							"PRODUCE_PAPERLESS_SHIPPING_FORMAT",
							"SUPPRESS_ACCESS_EMAILS"
						],
						"items": {
							"type": "string",
							"enum": [
								"PRODUCE_PAPERLESS_SHIPPING_FORMAT",
								"SUPPRESS_ADDITIONAL_LANGUAGES",
								"SUPPRESS_ACCESS_EMAILS"
							]
						}
					}
				},
				"description": "These are to indicate how the email notifications for the pending shipment to be processed."
			},
			"UploadDocumentReferenceDetail_1": {
				"type": "object",
				"properties": {
					"documentType": {
						"type": "string",
						"description": "This is the uploaded document type.",
						"example": "PRO_FORMA_INVOICE",
						"enum": [
							"CERTIFICATE_OF_ORIGIN",
							"COMMERCIAL_INVOICE",
							"ETD_LABEL",
							"USMCA_CERTIFICATION_OF_ORIGIN",
							"NET_RATE_SHEET",
							"OTHER",
							"PRO_FORMA_INVOICE",
							"USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN"
						]
					},
					"documentReference": {
						"type": "string",
						"description": "Specify the reference for the uploaded document.<br>Example: Reference",
						"example": "DocumentReference"
					},
					"description": {
						"type": "string",
						"description": "This is the document description of the attached document.<br>Example: PRO FORMA INVOICE",
						"example": "PRO FORMA INVOICE"
					},
					"documentId": {
						"type": "string",
						"description": "This is the uploaded document ID value.<br>Example: 090927d680038c61",
						"example": "090927d680038c61"
					}
				},
				"description": "Specify the document upload reference details."
			},
			"HoldAtLocationDetail": {
				"required": [
					"locationId"
				],
				"type": "object",
				"properties": {
					"locationId": {
						"type": "string",
						"description": "This is an alphanumeric identifier used for Location/Facility Identification.<br>Example: YBZA<br>Note: <ul><li>For HAL Shipment, Location ID is <b>REQUIRED</b> to ensure packages are delivered to the right location.</li><li>Use endpoint [<b>Find Location</b>] in [<b>Location Search API</b>], to find the correct location ID for your shipment.</li></ul>",
						"example": "YBZA"
					},
					"locationContactAndAddress": {
						"$ref": "#/components/schemas/ContactAndAddress"
					},
					"locationType": {
						"type": "string",
						"description": "Specifies the type of facility at which package/shipment is to be held.",
						"example": "FEDEX_ONSITE",
						"enum": [
							"FEDEX_AUTHORIZED_SHIP_CENTER",
							"FEDEX_OFFICE",
							"FEDEX_SELF_SERVICE_LOCATION",
							"FEDEX_STAFFED",
							"RETAIL_ALLICANCE_LOCATION",
							"FEDEX_GROUND_TERMINAL",
							"FEDEX_ONSITE"
						]
					}
				},
				"description": "Use this object to specify required information for a shipment to be held at destination FedEx location.<br><i>Note: This object HoldAtLocationDetail is Required, when HOLD_AT_LOCATION is chosen in the specialServiceTypes.</i>"
			},
			"ContactAndAddress": {
				"type": "object",
				"properties": {
					"contact": {
						"$ref": "#/components/schemas/Contact_1"
					},
					"address": {
						"$ref": "#/components/schemas/Address_1"
					}
				},
				"description": "Specifies the contact and address details of a location.",
				"example": {
					"address": {
						"streetLines": [
							"10 FedEx Parkway",
							"Suite 302"
						],
						"city": "Beverly Hills",
						"stateOrProvinceCode": "CA",
						"postalCode": "38127",
						"countryCode": "US",
						"residential": false
					},
					"contact": {
						"personName": "person name",
						"emailAddress": "email address",
						"phoneNumber": "phone number",
						"phoneExtension": "phone extension",
						"companyName": "company name",
						"faxNumber": "fax number"
					}
				}
			},
			"Contact_1": {
				"type": "object",
				"properties": {
					"personName": {
						"type": "string",
						"description": "Specify contact person name.<br>Recommended length is 70. <br>Note: There's no specific validation for the person name.<br> Example: John Taylor",
						"example": "John Taylor"
					},
					"emailAddress": {
						"type": "string",
						"description": "Specify contact email address. Maximum length is 80. <br> Example: sample@company.com",
						"example": "sample@company.com"
					},
					"phoneNumber": {
						"type": "string",
						"description": "Contact person's phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers.<br>Note: For US and CA, a phone number must have exactly 10 digits, plus an optional leading country code of '1' or '+1'.<br>Example: 918xxxxx890",
						"example": "918xxxxx890"
					},
					"phoneExtension": {
						"type": "string",
						"description": "Specify contact phone extension. <br>Note: Recommended length is 6. There's no specific validation for the phone extension. <br> Example: 1234",
						"example": "91"
					},
					"faxNumber": {
						"type": "string",
						"description": "Specify contact fax number.<br>Note: Recommended length is 15. There's no specific validation for the fax number.<br> Example: 1234567890",
						"example": "956123"
					},
					"companyName": {
						"type": "string",
						"description": "Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation for the company name.",
						"example": "Fedex"
					}
				},
				"description": "Indicate the contact details of the shipper.",
				"example": {
					"personName": "John Taylor",
					"emailAddress": "sample@company.com",
					"phoneNumber": "1234567890",
					"phoneExtension": 1234,
					"faxNumber": "1234567890",
					"companyName": "Fedex"
				}
			},
			"ShipmentCODDetail": {
				"required": [
					"codCollectionType"
				],
				"type": "object",
				"properties": {
					"addTransportationChargesDetail": {
						"$ref": "#/components/schemas/CODTransportationChargesDetail"
					},
					"codRecipient": {
						"description": "Descriptive data of the Cash On Delivery along with their details of the physical location.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Party_1"
							}
						]
					},
					"remitToName": {
						"type": "string",
						"description": "Specify the name of the person or company receiving the secured/unsecured funds payment.",
						"example": "remitToName"
					},
					"codCollectionType": {
						"type": "string",
						"description": "Identifies the type of funds FedEx should collect upon shipment delivery",
						"enum": [
							"ANY",
							"CASH",
							"GUARANTEED_FUNDS",
							"COMPANY_CHECK",
							"PERSONAL_CHECK"
						]
					},
					"financialInstitutionContactAndAddress": {
						"$ref": "#/components/schemas/ContactAndAddress"
					},
					"codCollectionAmount": {
						"description": "Indicate the COD collection amount.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					},
					"returnReferenceIndicatorType": {
						"type": "string",
						"description": "Indicate return reference type information to include on the COD return shipping label.",
						"enum": [
							"INVOICE",
							"PO",
							"REFERENCE",
							"TRACKING"
						]
					},
					"shipmentCodAmount": {
						"description": "Indicate the COD amount for this shipment.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					}
				},
				"description": "This is the shipment level COD detail."
			},
			"CODTransportationChargesDetail": {
				"type": "object",
				"properties": {
					"rateType": {
						"type": "string",
						"description": "Specify the Rate Type used.",
						"enum": [
							"ACCOUNT",
							"CURRENT",
							"CUSTOM"
						]
					},
					"rateLevelType": {
						"type": "string",
						"description": "Specify which level the rate to be applied.",
						"enum": [
							"BUNDLED_RATE",
							"INDIVIDUAL_PACKAGE_RATE"
						]
					},
					"chargeLevelType": {
						"type": "string",
						"description": "Specify which level the charges to be applied.",
						"enum": [
							"CURRENT_PACKAGE",
							"SUM_OF_PACKAGES"
						]
					},
					"chargeType": {
						"type": "string",
						"description": "Specify Charge type.",
						"enum": [
							"COD_SURCHARGE",
							"NET_CHARGE",
							"NET_FREIGHT",
							"TOTAL_CUSTOMER_CHARGE"
						]
					}
				},
				"description": "Use this object to specify C.O.D. transportation charges."
			},
			"Party_1": {
				"type": "object",
				"properties": {
					"address": {
						"$ref": "#/components/schemas/PartyAddress"
					},
					"contact": {
						"$ref": "#/components/schemas/PartyContact"
					},
					"accountNumber": {
						"$ref": "#/components/schemas/PartyAccountNumber"
					},
					"tins": {
						"type": "array",
						"description": "This is the tax identification number details.",
						"items": {
							"$ref": "#/components/schemas/TaxpayerIdentification"
						}
					}
				},
				"example": {
					"address": {
						"streetLines": [
							"10 FedEx Parkway",
							"Suite 302"
						],
						"city": "Beverly Hills",
						"stateOrProvinceCode": "CA",
						"postalCode": "90210",
						"countryCode": "US",
						"residential": false
					},
					"contact": {
						"personName": "John Taylor",
						"emailAddress": "sample@company.com",
						"phoneExtension": "000",
						"phoneNumber": "XXXX345671",
						"companyName": "Fedex"
					},
					"accountNumber": {
						"value": "Your account number"
					},
					"tins": [
						{
							"number": "123567",
							"tinType": "FEDERAL",
							"usage": "usage",
							"effectiveDate": "2000-01-23T04:56:07.000+00:00",
							"expirationDate": "2000-01-23T04:56:07.000+00:00"
						}
					]
				}
			},
			"ShipmentDryIceDetail_1": {
				"type": "object",
				"properties": {
					"totalWeight": {
						"$ref": "#/components/schemas/Weight_1"
					},
					"packageCount": {
						"type": "integer",
						"description": "Indicates the total number of packages in the shipment that contain dry ice.<br>Example: 12",
						"format": "int32",
						"example": 12
					}
				},
				"description": "This is the descriptive data required for a FedEx shipment containing dangerous materials. This element is required when SpecialServiceType DRY_ICE is selected.<p><i>Note:<ul><li>Dry Ice is a Package level Special Service for Domestic and International shipments.</li><li>Dry Ice must be declared at both Shipment and Package level for International MPS shipments to print the compliance statement on Airway Bill labels.</li></ul></i></p>"
			},
			"Weight_1": {
				"type": "object",
				"properties": {
					"units": {
						"type": "string",
						"description": "This is the package weight unit. For Dry Ice the unit of measure is KG.",
						"example": "LB",
						"enum": [
							"KG",
							"LB"
						]
					},
					"value": {
						"type": "number",
						"description": "Weight Value.<br> Example: 68.25<br><a href='https://developer.fedex.com/api/en-us/guides/api-reference.html#packagetypes' target='_blank'>Click here to see Weight Values</a>.",
						"format": "double",
						"example": 68.25
					}
				},
				"description": "These are the package weight details.",
				"example": {
					"units": "LB",
					"value": 10
				}
			},
			"InternationalControlledExportDetail": {
				"required": [
					"type"
				],
				"type": "object",
				"properties": {
					"licenseOrPermitExpirationDate": {
						"type": "string",
						"description": "Indicate the expiration date for the license or permit. The format is YYYY-MM-DD.<br>Example: \"2019-12-03\"",
						"example": "2019-12-03"
					},
					"licenseOrPermitNumber": {
						"type": "string",
						"description": "Indicate License Or Permit Number for the commodity being exported.<br>Example: 11",
						"example": "11"
					},
					"entryNumber": {
						"type": "string",
						"description": "Indicate Entry Number for the export.<br>Example: 125",
						"example": "125"
					},
					"foreignTradeZoneCode": {
						"type": "string",
						"description": "Indicate the Foreign Trade Zone Code.<br>Example: US",
						"example": "US"
					},
					"type": {
						"type": "string",
						"description": "Indicate International Controlled Export Type.",
						"example": "WAREHOUSE_WITHDRAWAL",
						"enum": [
							"DEA_036",
							"DEA_236",
							"DSP_05",
							"DSP_61",
							"DSP_73",
							"DSP_85",
							"DSP_LICENSE_AGREEMENT",
							"WAREHOUSE_WITHDRAWAL"
						]
					}
				},
				"description": "Use this object to specify International Controlled Export shipment Details.<br>Note: licenseOrPermitExpirationDate and licenseOrPermitNumber are not required when type is WAREHOUSE_WITHDRAWAL."
			},
			"HomeDeliveryPremiumDetail": {
				"type": "object",
				"properties": {
					"phoneNumber": {
						"$ref": "#/components/schemas/PhoneNumber1"
					},
					"deliveryDate": {
						"type": "string",
						"description": "This is delivery date. Required for FedEx Date Certain Home Delivery. Valid dates are Monday to Sunday. <br>There may be a delay in delivery on Sundays to locations that are geographically difficult to access.<br>Example: 2019-06-26",
						"example": "2019-06-26"
					},
					"homedeliveryPremiumType": {
						"type": "string",
						"description": "This is Home Delivery Premium Type. It allows to specify additional premimum service options for the home delivery shipment. Can specify Evening delivery or a Date certain, or can specify appointment for the delivery.",
						"example": "APPOINTMENT",
						"enum": [
							"APPOINTMENT",
							"DATE_CERTAIN",
							"EVENING"
						]
					}
				},
				"description": "These are Special service elements for FedEx Ground Home Delivery shipments. If selected, element homedeliveryPremiumType is mandatory. "
			},
			"PhoneNumber1": {
				"type": "object",
				"properties": {
					"areaCode": {
						"type": "string",
						"description": "Indicate the area code for the phone number."
					},
					"localNumber": {
						"type": "string",
						"description": "Indicate the local phone number for contacting in the event of an emergency. Maximum length  is 10."
					},
					"extension": {
						"type": "string",
						"description": "Indicate the extension for the phone number."
					},
					"personalIdentificationNumber": {
						"type": "string",
						"description": "Indicate the Personal Identification Number associated with the phone number."
					}
				},
				"description": "Indicate the phone number. Only numeric values allowed.<br> Note that phoneNumber is mandatory when homedeliveryPremiumType is DATE_CERTAIN or EVENING.",
				"example": {
					"areaCode": "901",
					"localNumber": "3575012",
					"extension": "200",
					"personalIdentificationNumber": "98712345"
				}
			},
			"ShipShipmentEMailNotificationDetail": {
				"type": "object",
				"properties": {
					"aggregationType": {
						"type": "string",
						"description": "This is the shipment Notification Aggregation Type.",
						"example": "PER_PACKAGE",
						"enum": [
							"PER_PACKAGE",
							"PER_SHIPMENT"
						]
					},
					"emailNotificationRecipients": {
						"type": "array",
						"description": "These are email notification recipient details.",
						"items": {
							"$ref": "#/components/schemas/ShipShipmentEmailNotificationRecipient"
						}
					},
					"personalMessage": {
						"type": "string",
						"description": "This is your personal message for the email.<br>Note: The maximum personal message character limit depends on the element notificationFormatType values:<ul><li>If notificationFormatType is TEXT, then only 120 characters printed on the email</li><li>If notificationFormatType is HTML, then 500 characters printed on the email</li></ul><br>Example: This is concerning the order 123456 of 26 July 2021 - art no 34324-23 Teddy Bear, brown",
						"example": "your personal message here"
					}
				},
				"description": "This is used to provide eMail notification information.."
			},
			"ShipShipmentEmailNotificationRecipient": {
				"required": [
					"emailAddress",
					"emailNotificationRecipientType"
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Specify the recipient name.<br>Example: Joe Smith",
						"example": "Joe Smith"
					},
					"emailNotificationRecipientType": {
						"type": "string",
						"description": "Specify the recipient type for email notification.",
						"example": "SHIPPER",
						"enum": [
							"BROKER",
							"OTHER",
							"RECIPIENT",
							"SHIPPER",
							"THIRD_PARTY"
						]
					},
					"emailAddress": {
						"type": "string",
						"description": "Specify the recipient email address.<br>Example: xyz@aol.com",
						"example": "jsmith3@aol.com"
					},
					"notificationFormatType": {
						"type": "string",
						"description": "This is the format for the email notification. Either HTML or plain text can be provided.<br>Example: TEXT",
						"example": "TEXT",
						"enum": [
							"HTML",
							"TEXT"
						]
					},
					"notificationType": {
						"type": "string",
						"description": "Indicate the type of notification that will be sent as an email<br>Example: EMAIL",
						"example": "EMAIL",
						"enum": [
							"EMAIL"
						]
					},
					"locale": {
						"type": "string",
						"description": "These are the locale details for email.<br>Example: en_US, fr_CA, es_MX,.etc.<br><a onclick='loadDocReference(\"locales\")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.",
						"example": "en_US"
					},
					"notificationEventType": {
						"type": "array",
						"description": "These are to specify the notification event types.<br> Example: [ON_PICKUP_DRIVER_ARRIVED, ON_SHIPMENT]<br><a onclick='loadDocReference(\"notificationeventtypes\")'>Click here for more information on Notification Event Types.</a>",
						"example": [
							"ON_PICKUP_DRIVER_ARRIVED",
							"ON_SHIPMENT"
						],
						"items": {
							"type": "string",
							"enum": [
								"ON_DELIVERY",
								"ON_EXCEPTION",
								"ON_SHIPMENT",
								"ON_TENDER",
								"ON_ESTIMATED_DELIVERY",
								"ON_PICKUP_DRIVER_ARRIVED",
								"ON_PICKUP_DRIVER_ASSIGNED",
								"ON_PICKUP_DRIVER_DEPARTED",
								"ON_PICKUP_DRIVER_EN_ROUTE"
							]
						}
					}
				},
				"description": "These are recipient details for receiving email notification."
			},
			"ExpressFreightDetail": {
				"type": "object",
				"properties": {
					"bookingConfirmationNumber": {
						"type": "string",
						"description": "This is an advanced booking number that must be acquired through the appropriate channel in the shipment origin country. Without the booking number pickup and space allocation for the Express Freight shipment are not guaranteed. <br>Minimum length: 5 digits <br> Maximum length: 12 digits  <br>Example: XXXX56789812",
						"example": "123456789812"
					},
					"shippersLoadAndCount": {
						"type": "integer",
						"description": "Indicates the content of a container were loaded and counted by the shipper.<br>Minimum length: 1 digits <br> Maximum length: 5 digits <br>Example:  If a skid has 32 small boxes on it that are shrinkwrapped, the shippersLoadAndCount should be “32”",
						"format": "int32",
						"example": 123
					},
					"packingListEnclosed": {
						"type": "boolean",
						"description": "This indicates whether or not the Packing List is enclosed with the shipment. A packing list is a document that includes details about the contents of a package. <br> Example: true",
						"example": true
					}
				},
				"description": "Indicates the advance booking number, shipper load /count and packing list details. This details must be provided by the user during freight shipment."
			},
			"VariableHandlingChargeDetail": {
				"type": "object",
				"properties": {
					"rateType": {
						"type": "string",
						"description": "The rate type indicates what type of rate request is being returned; account, preferred, incentive, etc.",
						"example": "PREFERRED_CURRENCY",
						"enum": [
							"ACCOUNT",
							"ACTUAL",
							"CURRENT",
							"CUSTOM",
							"LIST",
							"INCENTIVE",
							"PREFERRED",
							"PREFERRED_INCENTIVE",
							"PREFERRED_CURRENCY"
						]
					},
					"percentValue": {
						"type": "number",
						"description": "This is the variable handling percentage. If the percent value is mentioned as 10, it means 10%(multiplier of 0.1).<br>Example: 12.45",
						"format": "double",
						"example": 12.45
					},
					"rateLevelType": {
						"type": "string",
						"description": "indicates whether or not the rating is being done at the package level, or if the packages are bundled together. At the package level, charges are applied based on the details of each individual package. If they are bundled, one package is chosen as the parent and charges are applied based on that one package.",
						"example": "INDIVIDUAL_PACKAGE_RATE",
						"enum": [
							"BUNDLED_RATE",
							"INDIVIDUAL_PACKAGE_RATE"
						]
					},
					"fixedValue": {
						"description": "This is to specify a fixed handling charge on the shipment. The element allows entry of 7 characters before the decimal and 2 characters following the decimal. <br>Example: 5.00.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							},
							{
								"required": [
									"amount",
									"currency"
								],
								"properties": {
									"amount": {
										"type": "number",
										"description": "fixed variable handling charge amount"
									},
									"currency": {
										"type": "string",
										"description": "fixed variable handling charge currency type<br><a onclick='loadDocReference(\"currencycodes\")'>click here to see Currency codes</a>"
									}
								},
								"example": {
									"amount": 24.45,
									"currency": "USD"
								}
							}
						]
					},
					"rateElementBasis": {
						"type": "string",
						"description": "Specify the charge type upon which the variable handling percentage amount is calculated.",
						"example": "NET_CHARGE_EXCLUDING_TAXES",
						"enum": [
							"NET_CHARGE",
							"NET_FREIGHT",
							"BASE_CHARGE",
							"NET_CHARGE_EXCLUDING_TAXES"
						]
					}
				},
				"description": "Indicate the details about how to calculate variable handling charges at the shipment level. They can be based on a percentage of the shipping charges or a fixed amount. If indicated, element rateLevelType is required."
			},
			"CustomsClearanceDetail": {
				"required": [
					"commercialInvoice",
					"commodities"
				],
				"type": "object",
				"properties": {
					"regulatoryControls": {
						"type": "array",
						"description": "These are the regulatory controls applicable to the shipment.",
						"example": "NOT_IN_FREE_CIRCULATION",
						"items": {
							"type": "string",
							"enum": [
								"FOOD_OR_PERISHABLE",
								"USMCA",
								"NOT_APPLICABLE_FOR_LOW_VALUE_CUSTOMS_EXCEPTIONS",
								"NOT_IN_FREE_CIRCULATION"
							]
						}
					},
					"brokers": {
						"type": "array",
						"description": "Specify broker information. Use this option only if you are using Broker Select Option for your shipment. A country code must be specified in addition to one of the following address items: postal code, city, or location id.",
						"items": {
							"$ref": "#/components/schemas/BrokerDetail"
						}
					},
					"commercialInvoice": {
						"$ref": "#/components/schemas/CommercialInvoice"
					},
					"freightOnValue": {
						"type": "string",
						"description": "Specify the risk owner for the Freight shipment.This element is only mandatory or valid for Intra India shipments.",
						"example": "OWN_RISK",
						"enum": [
							"CARRIER_RISK",
							"OWN_RISK"
						]
					},
					"dutiesPayment": {
						"$ref": "#/components/schemas/Payment_1"
					},
					"commodities": {
						"type": "array",
						"description": "Indicates the details about the dutiable packages. Maximum upto 999 commodities per shipment.",
						"items": {
							"$ref": "#/components/schemas/Commodity"
						}
					},
					"isDocumentOnly": {
						"type": "boolean",
						"description": "Used to specify if a shipment is document shipment or not. Used only for International Express document shipments. Default value is false.",
						"example": true
					},
					"recipientCustomsId": {
						"$ref": "#/components/schemas/RecipientCustomsId"
					},
					"customsOption": {
						"$ref": "#/components/schemas/CustomsOptionDetail"
					},
					"importerOfRecord": {
						"description": "The descriptive data for the importer of Record for the shipment and their physical address, contact and account number information.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Party_1"
							}
						]
					},
					"generatedDocumentLocale": {
						"type": "string",
						"description": "This is the locale for generated document.<br>Example: en_US<br><a onclick='loadDocReference(\"locales\")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.",
						"example": "en_US"
					},
					"exportDetail": {
						"$ref": "#/components/schemas/ExportDetail"
					},
					"totalCustomsValue": {
						"description": "This is the total customs value.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					},
					"partiesToTransactionAreRelated": {
						"type": "boolean",
						"description": "Specify if the transacting parties are related."
					},
					"declarationStatementDetail": {
						"$ref": "#/components/schemas/CustomsDeclarationStatementDetail"
					},
					"insuranceCharge": {
						"description": "Specify insurance charges if applicable. <br><i>Note: FedEx does not provide insurance of any kind.</i>",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					}
				},
				"description": "These are customs clearance details. Required for International and intra-country Shipments."
			},
			"BrokerDetail": {
				"type": "object",
				"properties": {
					"broker": {
						"description": "These are broker details for the shipment with physical address, contact and account number information.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Party_1"
							},
							{
								"required": [
									"address",
									"contact"
								],
								"properties": {
									"address": {
										"description": "Specifies broker address details."
									},
									"contact": {
										"description": "Specifies broker contact details."
									}
								}
							}
						]
					},
					"type": {
						"type": "string",
						"description": "Identifies the type of broker.",
						"example": "IMPORT",
						"enum": [
							"IMPORT"
						]
					}
				},
				"description": "These are broker details for the shipment.",
				"example": {
					"broker": {
						"address": {
							"streetLines": [
								"10 FedEx Parkway",
								"Suite 302"
							],
							"city": "Beverly Hills",
							"stateOrProvinceCode": "CA",
							"postalCode": "90210",
							"countryCode": "US",
							"residential": false
						},
						"contact": {
							"personName": "John Taylor",
							"emailAddress": "sample@company.com",
							"phoneNumber": "1234567890",
							"phoneExtension": 91,
							"companyName": "Fedex",
							"faxNumber": 1234567
						},
						"accountNumber": {
							"value": "Your account number"
						},
						"tins": [
							{
								"number": "number",
								"tinType": "FEDERAL",
								"usage": "usage",
								"effectiveDate": "2000-01-23T04:56:07.000+00:00",
								"expirationDate": "2000-01-23T04:56:07.000+00:00"
							}
						],
						"deliveryInstructions": "deliveryInstructions"
					},
					"type": "IMPORT"
				}
			},
			"CommercialInvoice": {
				"type": "object",
				"properties": {
					"originatorName": {
						"type": "string",
						"description": "The originator name that will populate the Commercial Invoice (or Pro Forma).",
						"example": "originator Name"
					},
					"comments": {
						"type": "array",
						"description": "The comments that will populate the Commercial Invoice (or Pro Forma). Only the comments specified in the first two indexes of the array will be printed on the invoice and other comments would be ignored as the limitation is set for only two indexes. It considers the comment which is in the first index as a Special Instructions, Hence the comment at first index will be printed under special instructions and the other will be printed at comments section in the Commercial Invoice Document. <br>Example: comments",
						"example": [
							"optional comments for the commercial invoice"
						],
						"items": {
							"type": "string"
						}
					},
					"customerReferences": {
						"type": "array",
						"description": "These are additional customer reference data for commercial invoice.",
						"items": {
							"$ref": "#/components/schemas/CustomerReference"
						}
					},
					"taxesOrMiscellaneousCharge": {
						"description": "Indicate the taxes or miscellaneous charges(other than freight charges or insurance charges) that are associated with the shipment.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					},
					"taxesOrMiscellaneousChargeType": {
						"type": "string",
						"description": "Indicate the type of taxes Or miscellaneous charge.",
						"example": "COMMISSIONS",
						"enum": [
							"COMMISSIONS",
							"DISCOUNTS",
							"HANDLING_FEES",
							"OTHER",
							"ROYALTIES_AND_LICENSE_FEES",
							"TAXES"
						]
					},
					"freightCharge": {
						"description": "Indicate the freight charge.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					},
					"packingCosts": {
						"description": "Indicate the packing cost.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					},
					"handlingCosts": {
						"description": "Indicate the handling cost.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					},
					"declarationStatement": {
						"type": "string",
						"description": "This is the declaration statement which will populate the Commercial Invoice (or Pro Forma).<br>Maximum length is 554.<br>Example: declarationStatement",
						"example": "declarationStatement"
					},
					"termsOfSale": {
						"type": "string",
						"description": "Specify terms Of Sale that will be populated on the Commercial Invoice (or Pro Forma). Maximum length is 3<br>Valid values are:<ul><li>FCA/FOB (Free Carrier/Free On Board): Seller is responsible for all costs of delivering goods to destination. (Default)</li><li>CIP (Costs, Insurance Paid): Seller is responsible for miscellaneous charges to destination.</li><li>CPT (Carriage Paid To): Buyer is responsible for insurance.</li><li>EXW (Ex Works): Seller makes goods available to buyer. Buyer is responsible for delivering goods to destination.</li><li>DDU (Delivered Duty Unpaid): Seller is responsible for delivering goods to destination. Buyer is responsible for clearing goods through Bureau of Customs and Border Protection.</li><li>DDP (Delivered Duty Paid): Seller is responsible for delivering goods to destination, including duties, taxes, and miscellaneous fees.</li><li>DAP (Delivered at Place): Seller pays for carriage to the named place, except for costs related to import clearance, and assumes all risks prior to the point that the goods are ready for unloading by the buyer.</li><li>DPU(Deliver at Place of Unloading)</li></ul>",
						"example": "FCA"
					},
					"specialInstructions": {
						"type": "string",
						"description": "These are special instructions that will be populated on the Commercial Invoice (or Pro Forma).<br>Example: specialInstructions",
						"example": "specialInstructions\""
					},
					"shipmentPurpose": {
						"type": "string",
						"description": "This is the reason for the shipment. <br>Note: SOLD is not a valid purpose for a Proforma Invoice.",
						"example": "REPAIR_AND_RETURN",
						"enum": [
							"GIFT",
							"NOT_SOLD",
							"PERSONAL_EFFECTS",
							"REPAIR_AND_RETURN",
							"SAMPLE",
							"SOLD"
						]
					},
					"emailNotificationDetail": {
						"$ref": "#/components/schemas/ShipEmailDispositionDetail"
					}
				},
				"description": "Use this object to provide Commercial Invoice details. This element is required for electronic upload of CI data. It will serve to create/transmit an electronic Commercial Invoice through the FedEx system.<br>Customers are responsible for printing their own Commercial Invoice.<br>If you would like FedEx to generate a Commercial Invoice and transmit it to Customs for clearance purposes, you need to specify that in the ETDDetail/RequestedDocumentCopies element.<br>Supports maximum of 99 commodity line items."
			},
			"CustomerReference": {
				"type": "object",
				"properties": {
					"customerReferenceType": {
						"type": "string",
						"description": "This is a customer reference type. The value specified here for the element is printed on the Commercial Invoice only for tracking and label information.<p>Note: <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li></ul> <br>Note: INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.<br><a onclick='loadDocReference(\"customerreferencetypes\")'>For more information, click here for Cutsomer References ENUMs</a>",
						"example": "INVOICE_NUMBER",
						"enum": [
							"CUSTOMER_REFERENCE",
							"DEPARTMENT_NUMBER",
							"INVOICE_NUMBER",
							"P_O_NUMBER",
							"INTRACOUNTRY_REGULATORY_REFERENCE",
							"RMA_ASSOCIATION"
						]
					},
					"value": {
						"type": "string",
						"description": "This is a customer reference type value.<br>Example: 3686 <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li><li>The RMA value sent by the customer is returned on the label in human readable form but also as a barcode. RMA_ASSOCIATION only prints on the label as a barcode for a Return shipment.</ul>NOTE:<ul><li> INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.</li><li>  Maximum length varies for value field depending on customerReferenceType.</li></ul> Maximum length for value is as follows: <ul><li>CUSTOMER_REFERENCE - 40(Express), 30(Ground)</li><li>DEPARTMENT_NUMBER - 30</li><li>INVOICE_NUMBER - 30</li><li>P_O_NUMBER - 30</li><li>INTRACOUNTRY_REGULATORY_REFERENCE - 30</li><li>RMA_ASSOCIATION - 20</li>",
						"example": "3686"
					}
				}
			},
			"ShipEmailDispositionDetail": {
				"type": "object",
				"properties": {
					"emailAddress": {
						"type": "string",
						"description": "This is email Address.<br>Example: xxxx@xxx.com",
						"example": "neena@fedex.com"
					},
					"type": {
						"type": "string",
						"description": "Specify the email status.<br>Example: EMAILED",
						"example": "EMAILED"
					},
					"recipientType": {
						"type": "string",
						"description": "Specify the recipient Type.<br>Example: SHIPPER/BROKER",
						"example": "SHIPPER"
					}
				},
				"description": "These are email disposition details. Provides the type and email addresses of e-mail recipients. If returnedDispositionDetail in labelSpecification is set as true then email will be send with label and documents copy."
			},
			"Payment_1": {
				"type": "object",
				"properties": {
					"payor": {
						"$ref": "#/components/schemas/Payor_1"
					},
					"billingDetails": {
						"$ref": "#/components/schemas/BillingDetails"
					},
					"paymentType": {
						"type": "string",
						"description": "This is a payment type, basically indicates who is the payor for the shipment.<br>Required for Express and Ground.<br>The payment type COLLECT is applicable only for Ground shipments.",
						"enum": [
							"SENDER",
							"RECIPIENT",
							"THIRD_PARTY",
							"COLLECT"
						]
					}
				},
				"description": "This is a payment type, basically indicates who is the payor for the shipment.Conditional required for International Shipments",
				"example": {
					"payor": {
						"responsibleParty": {
							"address": {
								"streetLines": [
									"10 FedEx Parkway",
									"Suite 302"
								],
								"city": "Beverly Hills",
								"stateOrProvinceCode": "CA",
								"postalCode": "38127",
								"countryCode": "US",
								"residential": false
							},
							"contact": {
								"personName": "John Taylor",
								"emailAddress": "sample@company.com",
								"phoneNumber": "1234567890",
								"phoneExtension": "phone extension",
								"companyName": "Fedex",
								"faxNumber": "fax number"
							},
							"accountNumber": {
								"value": "Your account number"
							},
							"tins": [
								{
									"number": "number",
									"tinType": "FEDERAL",
									"usage": "usage",
									"effectiveDate": "2000-01-23T04:56:07.000+00:00",
									"expirationDate": "2000-01-23T04:56:07.000+00:00"
								},
								{
									"number": "number",
									"tinType": "FEDERAL",
									"usage": "usage",
									"effectiveDate": "2000-01-23T04:56:07.000+00:00",
									"expirationDate": "2000-01-23T04:56:07.000+00:00"
								}
							]
						}
					},
					"billingDetails": {
						"billingCode": "billingCode",
						"billingType": "billingType",
						"aliasId": "aliasId",
						"accountNickname": "accountNickname",
						"accountNumber": "Your account number",
						"accountNumberCountryCode": "US"
					},
					"paymentType": "SENDER"
				}
			},
			"Payor_1": {
				"type": "object",
				"properties": {
					"responsibleParty": {
						"$ref": "#/components/schemas/Party_2"
					}
				},
				"description": "Information about the person who is paying for the shipment. Not applicable for credit card payment. ",
				"example": {
					"responsibleParty": {
						"address": {
							"streetLines": [
								"10 FedEx Parkway",
								"Suite 302"
							],
							"city": "Beverly Hills",
							"stateOrProvinceCode": "CA",
							"postalCode": "38127",
							"countryCode": "US",
							"residential": false
						},
						"contact": {
							"personName": "John Taylor",
							"emailAddress": "sample@company.com",
							"phoneNumber": "1234567890",
							"phoneExtension": "phone extension",
							"companyName": "Fedex",
							"faxNumber": "fax number"
						},
						"accountNumber": {
							"value": "Your account number"
						},
						"tins": [
							{
								"number": "number",
								"tinType": "FEDERAL",
								"usage": "usage",
								"effectiveDate": "2000-01-23T04:56:07.000+00:00",
								"expirationDate": "2000-01-23T04:56:07.000+00:00"
							},
							{
								"number": "number",
								"tinType": "FEDERAL",
								"usage": "usage",
								"effectiveDate": "2000-01-23T04:56:07.000+00:00",
								"expirationDate": "2000-01-23T04:56:07.000+00:00"
							}
						]
					}
				}
			},
			"Party_2": {
				"type": "object",
				"properties": {
					"address": {
						"$ref": "#/components/schemas/Address_1"
					},
					"contact": {
						"$ref": "#/components/schemas/Contact_1"
					},
					"accountNumber": {
						"$ref": "#/components/schemas/PartyAccountNumber"
					},
					"tins": {
						"type": "array",
						"description": "This is the tax identification number details.",
						"items": {
							"$ref": "#/components/schemas/TaxpayerIdentification"
						}
					}
				},
				"description": "Use this object to provide the attributes such as physical address, contact information and account number information.",
				"example": {
					"address": {
						"streetLines": [
							"10 FedEx Parkway",
							"Suite 302"
						],
						"city": "Beverly Hills",
						"stateOrProvinceCode": "CA",
						"postalCode": "38127",
						"countryCode": "US",
						"residential": false
					},
					"contact": {
						"personName": "John Taylor",
						"emailAddress": "sample@company.com",
						"phoneNumber": "1234567890",
						"phoneExtension": "phone extension",
						"companyName": "Fedex",
						"faxNumber": "fax number"
					},
					"accountNumber": {
						"value": "Your account number"
					},
					"tins": [
						{
							"number": "number",
							"tinType": "FEDERAL",
							"usage": "usage",
							"effectiveDate": "2000-01-23T04:56:07.000+00:00",
							"expirationDate": "2000-01-23T04:56:07.000+00:00"
						},
						{
							"number": "number",
							"tinType": "FEDERAL",
							"usage": "usage",
							"effectiveDate": "2000-01-23T04:56:07.000+00:00",
							"expirationDate": "2000-01-23T04:56:07.000+00:00"
						}
					]
				}
			},
			"BillingDetails": {
				"type": "object",
				"properties": {
					"billingCode": {
						"type": "string",
						"description": "Indicates a billing code."
					},
					"billingType": {
						"type": "string",
						"description": "These are duties and taxes billing type."
					},
					"aliasId": {
						"type": "string",
						"description": "This is bill to alias identifier."
					},
					"accountNickname": {
						"type": "string",
						"description": "This is account nick name."
					},
					"accountNumber": {
						"type": "string",
						"description": "This is bill to account number."
					},
					"accountNumberCountryCode": {
						"type": "string",
						"description": "This is the country code of the account number.<br>Example: CA"
					}
				},
				"description": "These are billing details.",
				"example": {
					"billingCode": "128345",
					"billingType": "billingType",
					"aliasId": "alias identifier",
					"accountNickname": "accountNickname",
					"accountNumber": "Your account number",
					"accountNumberCountryCode": "CA"
				}
			},
			"Commodity": {
				"required": [
					"description"
				],
				"type": "object",
				"properties": {
					"unitPrice": {
						"description": "This is the unit price.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					},
					"additionalMeasures": {
						"type": "array",
						"description": "This object contains additional quantitative information other than weight and quantity to calculate duties and taxes.",
						"items": {
							"$ref": "#/components/schemas/AdditionalMeasures"
						}
					},
					"numberOfPieces": {
						"type": "integer",
						"description": "Indicate the number of pieces associated with the commodity. The value can neither be negative nor exceed 9,999.<br>Example: 12",
						"format": "int32",
						"example": 12
					},
					"quantity": {
						"type": "integer",
						"description": "This is the units quantity (using quantityUnits as the unit of measure) per commodity. This is used to estimate duties and taxes.<br> Example: 125",
						"format": "int32",
						"example": 125
					},
					"quantityUnits": {
						"type": "string",
						"description": "This is the unit of measure for the units quantity. This is used to estimate duties and taxes.<br>Example: EA<br><a onclick='loadDocReference(\"harmonizedsystemcodeunitofmeasure-table1\")'>click here to see Commodity Unit Measures</a>",
						"example": "Ea"
					},
					"customsValue": {
						"description": "This customs value is applicable for all items(or units) under the specified commodity.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Customs_Money"
							}
						]
					},
					"countryOfManufacture": {
						"type": "string",
						"description": "This is commodity country of manufacture. This is required for International shipments. Maximum allowed length is 4.<br>Example: US<br><a onclick='loadDocReference(\"countrycodes\")'>click here to see Country codes</a>",
						"example": "US"
					},
					"cIMarksAndNumbers": {
						"type": "string",
						"description": "This is an identifying mark or number used on the packaging of a shipment to help customers identify a particular shipment<br>Example: 87123",
						"example": "87123"
					},
					"harmonizedCode": {
						"type": "string",
						"description": "This is to specify the Harmonized Tariff System (HTS) code to meet U.S. and foreign governments' customs requirements. These are mainly used to estimate the duties and taxes.<br>Example: 0613<br>To research the classification for your commodity, use the FedEx Global Trade Manager online at <a href='http://www.fedex.com/gtm' target='_blank'>fedex.com/gtm</a>. You will find country-specific information to determine whether your commodity is considered to be a document or non-document for your destination.",
						"example": "0613"
					},
					"description": {
						"type": "string",
						"description": "This is the commodity description. Maximum allowed 450 characters.<br><a onclick='loadDocReference(\"vaguecommoditydescriptions\")'>click here to see Vague commodity descriptions</a>",
						"example": "description"
					},
					"name": {
						"type": "string",
						"description": "This is Commodity name.<br>Example: Non-Threaded Rivets",
						"example": "non-threaded rivets"
					},
					"weight": {
						"$ref": "#/components/schemas/Weight_4"
					},
					"exportLicenseNumber": {
						"type": "string",
						"description": "This is the export license number for the shipment.<br>Example: 26456",
						"example": "26456"
					},
					"exportLicenseExpirationDate": {
						"type": "string",
						"description": "Specify the export license expiration date for the shipment.<br>Format YYYY-MM-DD<br>Example : 2009-04-12",
						"format": "date-time"
					},
					"partNumber": {
						"type": "string",
						"description": "This is a part number.<br>Example: 167",
						"example": "167"
					},
					"purpose": {
						"type": "string",
						"description": "This is the purpose of this shipment. This is used for calculation of duties and taxes.",
						"example": "BUSINESS",
						"enum": [
							"BUSINESS",
							"CONSUMER"
						]
					},
					"usmcaDetail": {
						"$ref": "#/components/schemas/UsmcaDetail"
					}
				}
			},
			"AdditionalMeasures": {
				"type": "object",
				"properties": {
					"quantity": {
						"type": "number",
						"description": "Specify commodity quantity.",
						"format": "double",
						"example": 12.45
					},
					"units": {
						"type": "string",
						"description": "Unit of measure used to express the quantity of this commodity line item.",
						"example": "KG"
					}
				}
			},
			"Weight": {
				"required": [
					"units",
					"value"
				],
				"type": "object",
				"properties": {
					"units": {
						"type": "string",
						"description": "Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.",
						"example": "KG",
						"enum": [
							"KG"
						]
					},
					"value": {
						"type": "number",
						"description": "Weight Value.<br> Example: 68.25<br><a href='https://developer.fedex.com/api/en-us/guides/api-reference.html#packagetypes' target='_blank'>Click here to see Weight Values</a>.",
						"format": "double",
						"example": 68.25
					}
				},
				"description": "These are the package weight details.<br>Note: Weight is not required for One rate shipments",
				"example": {
					"units": "KG",
					"value": 68
				}
			},
			"Weight_4": {
				"required": [
					"units",
					"value"
				],
				"type": "object",
				"properties": {
					"units": {
						"type": "string",
						"description": "Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.",
						"example": "KG",
						"enum": [
							"KG"
						]
					},
					"value": {
						"type": "number",
						"description": "Weight Value.<br> Example: 68.25",
						"format": "double",
						"example": 68.25
					}
				},
				"description": "It is the unit weight of the commodity.<br>Note: Weight is not required for One rate shipments",
				"example": {
					"units": "KG",
					"value": 68
				}
			},
			"Weight_3": {
				"required": [
					"units",
					"value"
				],
				"type": "object",
				"properties": {
					"units": {
						"type": "string",
						"description": "Indicate the weight unit type. The package and commodity weight unit should be the same else the request will result in an error.",
						"example": "KG",
						"enum": [
							"KG"
						]
					},
					"value": {
						"type": "number",
						"description": "Weight Value.<br> Example: 68.25<br>",
						"format": "double",
						"example": 68.25
					}
				},
				"description": "These are the package weight details.<br>Note: Weight is not required for One rate shipments",
				"example": {
					"units": "KG",
					"value": 68
				}
			},
			"UsmcaDetail": {
				"type": "object",
				"properties": {
					"originCriterion": {
						"type": "string",
						"description": "Specify the origin criterion.",
						"enum": [
							"A",
							"B",
							"C",
							"D",
							"E"
						]
					}
				},
				"description": "Indicates the USMCA detail"
			},
			"RecipientCustomsId": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"description": "This is ID Type.",
						"example": "PASSPORT",
						"enum": [
							"COMPANY",
							"INDIVIDUAL",
							"PASSPORT"
						]
					},
					"value": {
						"type": "string",
						"description": "This is the ID number.",
						"example": "123"
					}
				},
				"description": "Use this element to provide valid identification details. Used for populating brazil tax id."
			},
			"CustomsOptionDetail": {
				"type": "object",
				"properties": {
					"description": {
						"type": "string",
						"description": "Specify additional description about customs options. This is a required field when the Type is OTHER.",
						"example": "Description"
					},
					"type": {
						"type": "string",
						"description": "Specify the reason for a global return, as recognized by Customs. Valid values:<ul><li>COURTESY_RETURN_LABEL: Applicable for Outbound shipments.</li><li>EXHIBITION_TRADE_SHOW: For exhibition or trade-show, outbound and inbound.</li><li>FAULTY_ITEM: For faulty item being returned, inbound only.</li><li>FOLLOWING_REPAIR: For repaired or processed item being sent, outbound only.</li><li>FOR_REPAIR: For repair or processing, outbound and inbound.</li><li>ITEM_FOR_LOAN: For loan item, outbound and inbound.</li><li>OTHER: Other reason, outbound and inbound. This type requires a description.</li><li>REJECTED: For rejected merchandise being returned, inbound.</li><li>REPLACEMENT: For replacement being sent, outbound only.</li><li>TRIAL: For use in a trial, outbound and inbound.</li></ul>",
						"example": "COURTESY_RETURN_LABEL",
						"enum": [
							"COURTESY_RETURN_LABEL",
							"EXHIBITION_TRADE_SHOW",
							"FAULTY_ITEM",
							"FOLLOWING_REPAIR",
							"FOR_REPAIR",
							"ITEM_FOR_LOAN",
							"OTHER",
							"REJECTED",
							"REPLACEMENT",
							"TRIAL"
						]
					}
				},
				"description": "These are customs Option Detail, type must be indicated for each occurrence.",
				"example": {
					"description": "Description",
					"type": "COURTESY_RETURN_LABEL"
				}
			},
			"ExportDetail": {
				"type": "object",
				"properties": {
					"destinationControlDetail": {
						"$ref": "#/components/schemas/DestinationControlDetail"
					},
					"b13AFilingOption": {
						"type": "string",
						"description": "Specify the filing option being exercised. Required for  non-document shipments originating in Canada destinated for any country other than Canada, the United States, Puerto Rico, or the U.S. Virgin Islands.",
						"example": "NOT_REQUIRED",
						"enum": [
							"NOT_REQUIRED",
							"MANUALLY_ATTACHED",
							"FILED_ELECTRONICALLY",
							"SUMMARY_REPORTING",
							"FEDEX_TO_STAMP"
						]
					},
					"exportComplianceStatement": {
						"type": "string",
						"description": "For US export shipments requiring an EEI, enter the ITN number received from AES when you filed your shipment or the FTR (Foreign Trade Regulations) exemption number.The proper format for an ITN number is AES XYYYYMMDDNNNNNN where YYYYMMDD is date and NNNNNN are numbers generated by the AES.<br> Example: AESX20220714987654<br>Note: The ITN or FTR exemption number you submit in the ship request prints on the international shipping label.<br><br>For CA export shipments,it can be Proof of report number(15-32 alphanumeric) , Summary proof of report number(7-32 alphanumeric) or Exemption number(2 digit) based on the selected b13AFilingOption.<br>Example: 98765432107654321(POR number), 7654321(Summary POR number) and 02(Exemption number). <br>For FTR exemption number you need provide a predefined value as NO_EEI_30_37_A.",
						"example": "12345678901234567"
					},
					"permitNumber": {
						"type": "string",
						"description": "This is a Permit Number. This field is applicable only to Canada export non-document shipments of any value to any destination. No special characters are allowed.<br> Example: 12345",
						"example": "12345"
					}
				},
				"description": "These are export Detail used for US or CA exports."
			},
			"DestinationControlDetail": {
				"required": [
					"statementTypes"
				],
				"type": "object",
				"properties": {
					"endUser": {
						"type": "string",
						"description": "Specify End User name. Its is required if StatementTypes is entered as DEPARTMENT_OF_STATE. <br>Example: John Wick",
						"example": "dest country user"
					},
					"statementTypes": {
						"type": "string",
						"description": "Specify appropriate destination control statement type(s), Also make sure to specify destination country and end user.",
						"example": "DEPARTMENT_OF_COMMERCE",
						"enum": [
							"DEPARTMENT_OF_COMMERCE",
							"DEPARTMENT_OF_STATE",
							"DEPARTMENT_OF_COMMERCE_AND_DEPARTMENT_OF_STATE"
						]
					},
					"destinationCountries": {
						"type": "array",
						"description": "Specify DCS shipment destination country. You may enter up to four country codes in this element. Up to 11 alphanumeric characters are allowed.<br>Example: US<br><a onclick='loadDocReference(\"countrycodes\")'>click here to see Country codes</a>",
						"example": [
							"USA",
							"India"
						],
						"items": {
							"type": "string"
						}
					}
				},
				"description": "Use this object to specify the appropriate destination control statement type(s). Also make sure to specify destination country and end user."
			},
			"CustomsDeclarationStatementDetail": {
				"required": [
					"usmcaLowValueStatementDetail"
				],
				"type": "object",
				"properties": {
					"usmcaLowValueStatementDetail": {
						"$ref": "#/components/schemas/UsmcaLowValueStatementDetail"
					}
				},
				"description": "Specifies about the statements to be declared for Customs. "
			},
			"UsmcaLowValueStatementDetail": {
				"required": [
					"customsRole"
				],
				"type": "object",
				"properties": {
					"countryOfOriginLowValueDocumentRequested": {
						"type": "boolean",
						"description": "Specify the country Of Origin of Low Value Document for Customs declaration.",
						"example": true
					},
					"customsRole": {
						"type": "string",
						"description": "Specify the shipper role for Customs declaration.",
						"example": "EXPORTER",
						"enum": [
							"EXPORTER",
							"IMPORTER"
						]
					}
				},
				"description": "Specify the low Value statement necessary for printing the USMCA for Customs documentation."
			},
			"SmartPostInfoDetail": {
				"required": [
					"hubId",
					"indicia"
				],
				"type": "object",
				"properties": {
					"ancillaryEndorsement": {
						"type": "string",
						"description": "Indicate the type of ancillary endorsement. Is required for Presorted Standard but not for returns or parcel select. <br>Note: Not all are usable for all ancillary endorsements.<br>For more information, refer to the <a href = 'https://www.fedex.com/en-us/shipping/fedex-smartpost/rates-zones.html' target='_blank'>FedEx SmartPost®</a>.",
						"example": "RETURN_SERVICE",
						"enum": [
							"ADDRESS_CORRECTION",
							"CARRIER_LEAVE_IF_NO_RESPONSE",
							"CHANGE_SERVICE",
							"FORWARDING_SERVICE",
							"RETURN_SERVICE"
						]
					},
					"hubId": {
						"type": "string",
						"description": "Specify the four-digit numeric Hub ID value used for smartport shipments.<br><a onclick='loadDocReference(\"smartposthubids\")'>click here to see Hub Ids</a>",
						"example": "5015"
					},
					"indicia": {
						"type": "string",
						"description": "Specify the indicia type.<br>Available options include:<ul><li>MEDIA_MAIL</li><li>PARCEL_SELECT (1 LB through 70 LB)</li><li>PRESORTED_BOUND_PRINTED_MATTER</li><li>PRESORTED_STANDARD (less than 1 LB)</li><li>PARCEL_RETURN</li></ul>",
						"example": "PRESORTED_STANDARD",
						"enum": [
							"MEDIA_MAIL",
							"PARCEL_RETURN",
							"PARCEL_SELECT",
							"PRESORTED_BOUND_PRINTED_MATTER",
							"PRESORTED_STANDARD"
						]
					},
					"specialServices": {
						"type": "string",
						"description": "Specify the special handling associated with Smartpost Shipment.",
						"example": "USPS_DELIVERY_CONFIRMATION",
						"enum": [
							"USPS_DELIVERY_CONFIRMATION"
						]
					}
				},
				"description": "Use this object to specify the smartpost shipment details. <br>Required for SMARTPOST service. If SmartPostInfoDetail is indicated, the elements below it are also required."
			},
			"LabelSpecification": {
				"required": [
					"imageType",
					"labelStockType"
				],
				"type": "object",
				"properties": {
					"labelFormatType": {
						"type": "string",
						"description": "Specify the label Format Type.<br><a onclick='loadDocReference(\"labelstocktypes\")'>click here to see label format types</a>",
						"example": "COMMON2D",
						"enum": [
							"COMMON2D",
							"LABEL_DATA_ONLY"
						]
					},
					"labelOrder": {
						"type": "string",
						"description": "This is the order of the Shipping label/documents to be generated.",
						"example": "SHIPPING_LABEL_FIRST",
						"enum": [
							"SHIPPING_LABEL_FIRST",
							"SHIPPING_LABEL_LAST"
						]
					},
					"customerSpecifiedDetail": {
						"$ref": "#/components/schemas/CustomerSpecifiedLabelDetail"
					},
					"printedLabelOrigin": {
						"$ref": "#/components/schemas/ContactAndAddress"
					},
					"labelStockType": {
						"type": "string",
						"description": "Indicate the label stock type used. <br><a onclick='loadDocReference(\"labelstocktypes\")'>click here to see label format types</a>",
						"example": "PAPER_85X11_TOP_HALF_LABEL",
						"enum": [
							"PAPER_4X6",
							"PAPER_4X675",
							"PAPER_4X8",
							"PAPER_4X9",
							"PAPER_7X475",
							"PAPER_85X11_BOTTOM_HALF_LABEL",
							"PAPER_85X11_TOP_HALF_LABEL",
							"PAPER_LETTER",
							"STOCK_4X675_LEADING_DOC_TAB",
							"STOCK_4X8",
							"STOCK_4X9_LEADING_DOC_TAB",
							"STOCK_4X6",
							"STOCK_4X675_TRAILING_DOC_TAB",
							"STOCK_4X9_TRAILING_DOC_TAB",
							"STOCK_4X9",
							"STOCK_4X85_TRAILING_DOC_TAB",
							"STOCK_4X105_TRAILING_DOC_TAB"
						]
					},
					"labelRotation": {
						"type": "string",
						"description": "This is applicable only to documents produced on thermal printers with roll stock.",
						"example": "UPSIDE_DOWN",
						"enum": [
							"LEFT",
							"RIGHT",
							"UPSIDE_DOWN",
							"NONE"
						]
					},
					"imageType": {
						"type": "string",
						"description": "Specify the image format used for a shipping document.<br><a onclick='loadDocReference(\"labelstocktypes\")'>click here to see label format types</a>",
						"example": "PDF",
						"enum": [
							"ZPLII",
							"EPL2",
							"PDF",
							"PNG"
						]
					},
					"labelPrintingOrientation": {
						"type": "string",
						"description": "This is applicable only to documents produced on thermal printers with roll stock.",
						"example": "TOP_EDGE_OF_TEXT_FIRST",
						"enum": [
							"BOTTOM_EDGE_OF_TEXT_FIRST",
							"TOP_EDGE_OF_TEXT_FIRST"
						]
					},
					"returnedDispositionDetail": {
						"type": "boolean",
						"description": "Specify whether or not the return deposition is needed.",
						"example": true
					}
				},
				"description": "These are label specification details includes the image type, printer format, and label stock for label. Can also specify specific details such as doc-tab content, regulatory labels, and masking data on the label."
			},
			"CustomerSpecifiedLabelDetail": {
				"type": "object",
				"properties": {
					"maskedData": {
						"type": "array",
						"description": "Specify which data/sections on the label to be masked.<br>Note: <ul><li>SECONDARY_BARCODE &ndash; This is used for Smartpost shipment labels.</li><li>SHIPPER_INFORMATION &ndash; This is used for Third Party Consignee, Intra-UK shipments.</li><li>TOTAL_WEIGHT &ndash; This replaces the Total weight with Actual Weight in Master label and AWB copies.</li></ul>",
						"example": [
							"CUSTOMS_VALUE",
							"TOTAL_WEIGHT"
						],
						"items": {
							"type": "string",
							"default": "SHIPPER_INFORMATION",
							"enum": [
								"CUSTOMS_VALUE",
								"DIMENSIONS",
								"DUTIES_AND_TAXES_PAYOR_ACCOUNT_NUMBER",
								"INSURED_VALUE",
								"SECONDARY_BARCODE",
								"SHIPPER_INFORMATION",
								"TERMS_AND_CONDITIONS",
								"TOTAL_WEIGHT",
								"TRANSPORTATION_CHARGES_PAYOR_ACCOUNT_NUMBER"
							]
						}
					},
					"regulatoryLabels": {
						"type": "array",
						"description": "Specify how the regulatory details to be provided on the labels.",
						"items": {
							"$ref": "#/components/schemas/RegulatoryLabelContentDetail"
						}
					},
					"additionalLabels": {
						"type": "array",
						"description": "Specify how the additional details to be provided on the labels.",
						"items": {
							"$ref": "#/components/schemas/AdditionalLabelsDetail"
						}
					},
					"docTabContent": {
						"$ref": "#/components/schemas/DocTabContent"
					}
				},
				"description": "This object allows the control of label content for customization."
			},
			"RegulatoryLabelContentDetail": {
				"type": "object",
				"properties": {
					"generationOptions": {
						"type": "string",
						"description": "Specify the regulatory content preference to be displayed on the label.",
						"example": "CONTENT_ON_SHIPPING_LABEL_ONLY",
						"enum": [
							"CONTENT_ON_SHIPPING_LABEL_PREFERRED",
							"CONTENT_ON_SUPPLEMENTAL_LABEL_ONLY",
							"CONTENT_ON_SHIPPING_LABEL_ONLY"
						]
					},
					"type": {
						"type": "string",
						"description": "Specify the type of regulatory content to be added on the label.",
						"example": "ALCOHOL_SHIPMENT_LABEL",
						"enum": [
							"ALCOHOL_SHIPMENT_LABEL"
						]
					}
				}
			},
			"AdditionalLabelsDetail": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"description": "Specify the type of additional  details to be added on the label.",
						"example": "CONSIGNEE",
						"enum": [
							"BROKER",
							"CONSIGNEE",
							"CUSTOMS",
							"DESTINATION",
							"DESTINATION_CONTROL_STATEMENT",
							"FREIGHT_REFERENCE",
							"MANIFEST",
							"ORIGIN",
							"RECIPIENT",
							"SECOND_ADDRESS",
							"SHIPPER"
						]
					},
					"count": {
						"type": "integer",
						"description": "Specifies the count of label to return.",
						"example": 1
					}
				}
			},
			"DocTabContent": {
				"type": "object",
				"properties": {
					"docTabContentType": {
						"type": "string",
						"description": "Indicates the content type of the doc tab.",
						"example": "BARCODED",
						"enum": [
							"BARCODED",
							"CUSTOM",
							"MINIMUM",
							"STANDARD",
							"ZONE001"
						]
					},
					"zone001": {
						"$ref": "#/components/schemas/DocTabContentZone001"
					},
					"barcoded": {
						"$ref": "#/components/schemas/DocTabContentBarcoded"
					}
				},
				"description": "Specifies details of doc tab content.It is only applicable only with imageType as ZPLII."
			},
			"DocTabContentZone001": {
				"type": "object",
				"properties": {
					"docTabZoneSpecifications": {
						"type": "array",
						"description": "Indicate the doc tab specifications for the individual doc tab zone on the label.",
						"items": {
							"$ref": "#/components/schemas/DocTabZoneSpecification"
						}
					}
				},
				"description": "Indicate the doc tab specification for different zones on the label. The specification includes zone number, header and data field to be displayed on the label."
			},
			"DocTabZoneSpecification": {
				"type": "object",
				"properties": {
					"zoneNumber": {
						"type": "integer",
						"description": "It is a non-negative integer that represents the portion of doc-tab in a label.<br>Example: 1",
						"format": "int32"
					},
					"header": {
						"type": "string",
						"description": "Indicates the parameter name in the header for the doc tab zone. The maximum charater limit is 7.<br>Example:  WHT"
					},
					"dataField": {
						"type": "string",
						"description": "Indicate the path request/reply element to be printed on doc tab.<br>Example: <ul><li> REQUEST/PACKAGE/weight/Value</li><li> REQUEST/PACKAGE/weight/Value</li><li> REQUEST/PACKAGE/InsuredValue/Amount</li><li> REQUEST/SHIPMENT/SpecialServicesRequested/CodDetail/CodCollectionAmount/Amount</li><li>REQUEST/SHIPMENT/Shipper/Address/StreetLines[1]CLIENT/MeterNumber</li><li> TRANSACTION/CustomerTransactionId</li><li> REQUEST/SHIPMENT/TotalWeight/Value</li><li> REQUEST/SHIPMENT/ShipTimestamp</li><li> REQUEST/SHIPMENT/Recipient/Contact/PersonName</li><li> REPLY/SHIPMENT/OperationalDetail/DeliveryDate</li><li>  REPLY/SHIPMENT/RATES/ACTUAL/totalBaseCharge/Amount</li><li> REPLY/SHIPMENT/RATES/ACTUAL/totalFreightDiscounts/Amount</li><li>  REPLY/SHIPMENT/RATES/ACTUAL/totalSurcharges/Amount</li><li> REPLY/SHIPMENT/RATES/ACTUAL/totalNetCharge/Amount</li><li> REPLY/SHIPMENT/RATES/PAYOR_ACCOUNT_PACKAGE/totalSurcharges/Amount</li></ul>"
					},
					"literalValue": {
						"type": "string",
						"description": "Indicates the actual data to be printed in the label<br>"
					},
					"justification": {
						"type": "string",
						"description": "Indicates the justification format for the string.",
						"example": "RIGHT",
						"enum": [
							"LEFT",
							"RIGHT"
						]
					}
				},
				"description": "Indicates the doc tab zone specification."
			},
			"DocTabContentBarcoded": {
				"type": "object",
				"properties": {
					"symbology": {
						"type": "string",
						"description": "Indicates the type of barcode symbology used on FedEx documents and labels.",
						"example": "UCC128",
						"enum": [
							"CODABAR",
							"CODE128",
							"CODE128_WIDEBAR",
							"CODE128B",
							"CODE128C",
							"CODE39",
							"CODE93",
							"I2OF5",
							"MANUAL",
							"PDF417",
							"POSTNET",
							"QR_CODE",
							"UCC128"
						]
					},
					"specification": {
						"$ref": "#/components/schemas/DocTabZoneSpecification"
					}
				},
				"description": "It is a doc tab content type which is in barcoded format."
			},
			"ShippingDocumentSpecification": {
				"type": "object",
				"properties": {
					"generalAgencyAgreementDetail": {
						"$ref": "#/components/schemas/GeneralAgencyAgreementDetail"
					},
					"returnInstructionsDetail": {
						"$ref": "#/components/schemas/ReturnInstructionsDetail"
					},
					"op900Detail": {
						"$ref": "#/components/schemas/Op900Detail"
					},
					"usmcaCertificationOfOriginDetail": {
						"$ref": "#/components/schemas/UsmcaCertificationOfOriginDetail"
					},
					"usmcaCommercialInvoiceCertificationOfOriginDetail": {
						"$ref": "#/components/schemas/UsmcaCommercialInvoiceCertificationOfOriginDetail"
					},
					"shippingDocumentTypes": {
						"type": "array",
						"description": "Indicates the types of shipping documents requested.\n",
						"example": [
							"RETURN_INSTRUCTIONS"
						],
						"items": {
							"type": "string",
							"enum": [
								"CERTIFICATE_OF_ORIGIN",
								"COMMERCIAL_INVOICE",
								"CUSTOM_PACKAGE_DOCUMENT",
								"CUSTOM_SHIPMENT_DOCUMENT",
								"CUSTOMER_SPECIFIED_LABELS",
								"EXPORT_DECLARATION",
								"GENERAL_AGENCY_AGREEMENT",
								"LABEL",
								"USMCA_CERTIFICATION_OF_ORIGIN",
								"OP_900",
								"PENDING_SHIPMENT_EMAIL_NOTIFICATION",
								"PRO_FORMA_INVOICE",
								"RETURN_INSTRUCTIONS",
								"USMCA_COMMERCIAL_INVOICE_CERTIFICATION_OF_ORIGIN"
							]
						}
					},
					"certificateOfOrigin": {
						"$ref": "#/components/schemas/CertificateOfOriginDetail"
					},
					"commercialInvoiceDetail": {
						"$ref": "#/components/schemas/CommercialInvoiceDetail"
					}
				},
				"description": "Use this object to provide all data required for additional (non-label) shipping documents to be produced."
			},
			"GeneralAgencyAgreementDetail": {
				"type": "object",
				"properties": {
					"documentFormat": {
						"$ref": "#/components/schemas/ShippingDocumentFormat"
					}
				},
				"description": "Use this object to specify details to generate general agency agreement detail."
			},
			"ShippingDocumentFormat": {
				"type": "object",
				"properties": {
					"provideInstructions": {
						"type": "boolean",
						"description": "Indicates whether or not to provide the instructions.",
						"example": true
					},
					"optionsRequested": {
						"$ref": "#/components/schemas/DocumentFormatOptionsRequested"
					},
					"stockType": {
						"type": "string",
						"description": "Indicate the used label stock type. Note to list the correct type of paper for the freight address label option.",
						"example": "PAPER_LETTER",
						"enum": [
							"PAPER_LETTER"
						]
					},
					"dispositions": {
						"type": "array",
						"description": "Specifies how to create, organize, and return the document\n\n",
						"items": {
							"$ref": "#/components/schemas/ShippingDocumentDispositionDetail"
						}
					},
					"locale": {
						"type": "string",
						"description": "These are locale details.<br>example: 'en_US'<br><a onclick='loadDocReference(\"locales\")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.",
						"example": "en_US"
					},
					"docType": {
						"type": "string",
						"description": "Specify the image format used for a shipping document.<br><a onclick='loadDocReference(\"labelstocktypes\")'>click here to see label format types</a>",
						"example": "PDF",
						"enum": [
							"PDF"
						]
					}
				},
				"description": "Specify the shipping document format."
			},
			"DocumentFormatOptionsRequested": {
				"type": "object",
				"properties": {
					"options": {
						"type": "array",
						"description": "Indicates the format options. SUPPRESS_ADDITIONAL_LANGUAGES value will suppress English language if another language is specified in the language code field.",
						"example": [
							"SUPPRESS_ADDITIONAL_LANGUAGES",
							"SHIPPING_LABEL_LAST"
						],
						"items": {
							"type": "string",
							"enum": [
								"SHIPPING_LABEL_FIRST",
								"SHIPPING_LABEL_LAST",
								"SUPPRESS_ADDITIONAL_LANGUAGES"
							]
						}
					}
				},
				"description": "Indicate the requested options for document format."
			},
			"ShippingDocumentDispositionDetail": {
				"type": "object",
				"properties": {
					"eMailDetail": {
						"$ref": "#/components/schemas/ShippingDocumentEmailDetail"
					},
					"dispositionType": {
						"type": "string",
						"description": "Specify how to create and return the document.",
						"example": "CONFIRMED",
						"enum": [
							"CONFIRMED",
							"DEFERRED_QUEUED",
							"DEFERRED_RETURNED",
							"DEFERRED_STORED",
							"EMAILED",
							"QUEUED",
							"RETURNED",
							"STORED"
						]
					}
				},
				"description": "These are document diposition details. Each occurrence of this class specifies a particular way in which a kind of shipping document is to be produced and provided."
			},
			"ShippingDocumentEmailDetail": {
				"required": [
					"eMailRecipients"
				],
				"type": "object",
				"properties": {
					"eMailRecipients": {
						"type": "array",
						"description": "Indicates the shipping document email recipients.",
						"items": {
							"$ref": "#/components/schemas/ShippingDocumentEmailRecipient"
						}
					},
					"locale": {
						"type": "string",
						"description": "These are locale details.<br>Example: 'en_US'<br><a onclick='loadDocReference(\"locales\")'>click here to see locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.",
						"example": "en_US"
					},
					"grouping": {
						"type": "string",
						"description": "Identifies the convention by which documents are to be grouped as email attachment.",
						"example": "NONE",
						"enum": [
							"BY_RECIPIENT",
							"NONE"
						]
					}
				},
				"description": "Specifies how to e-mail shipping documents."
			},
			"ShippingDocumentEmailRecipient": {
				"required": [
					"recipientType"
				],
				"type": "object",
				"properties": {
					"emailAddress": {
						"type": "string",
						"description": "Specifies the email address.<br> Example: email@fedex.com",
						"example": "email@fedex.com"
					},
					"recipientType": {
						"type": "string",
						"description": "Specify the email notification recipient type.",
						"example": "THIRD_PARTY",
						"enum": [
							"BROKER",
							"OTHER",
							"RECIPIENT",
							"SHIPPER",
							"THIRD_PARTY",
							"OTHER1",
							"OTHER2"
						]
					}
				}
			},
			"ReturnInstructionsDetail": {
				"type": "object",
				"properties": {
					"customText": {
						"type": "string",
						"description": "Specify additional information (text) to be inserted into the return document.<br>Example: This is additional text printed on Return Label",
						"example": "This is additional text printed on Return instr"
					},
					"documentFormat": {
						"$ref": "#/components/schemas/ReturnShippingDocumentFormat"
					}
				},
				"description": "These are return instruction details which will be returned in the transaction to be printed on Return Label."
			},
			"ReturnShippingDocumentFormat": {
				"type": "object",
				"properties": {
					"provideInstructions": {
						"type": "boolean",
						"description": "Use this element to indicate whether or not to provide the instructions.",
						"example": true
					},
					"optionsRequested": {
						"$ref": "#/components/schemas/DocumentFormatOptionsRequested"
					},
					"stockType": {
						"type": "string",
						"description": "Specify the label stock type.<br><a onclick='loadDocReference(\"labelstocktypes\")'>click here to see label format types</a>",
						"example": "PAPER_LETTER",
						"enum": [
							"PAPER_LETTER"
						]
					},
					"dispositions": {
						"type": "array",
						"description": "Details on creating, organizing, and returning the document.\n\n",
						"items": {
							"$ref": "#/components/schemas/ShippingDocumentDispositionDetail"
						}
					},
					"locale": {
						"type": "string",
						"description": "These are locale details.<br>example: 'en_US'<br><a onclick='loadDocReference(\"locales\")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.",
						"example": "en_US\""
					},
					"docType": {
						"type": "string",
						"description": "Specify the image format used for shipping document.<br><a onclick='loadDocReference(\"labelstocktypes\")'>click here to see label format types</a>",
						"example": "PNG",
						"enum": [
							"PNG",
							"PDF"
						]
					}
				},
				"description": "These are characteristics of a shipping document to be produced."
			},
			"Op900Detail": {
				"type": "object",
				"properties": {
					"customerImageUsages": {
						"type": "array",
						"description": "Specify the use and identification of supplied images to be used on document.",
						"items": {
							"$ref": "#/components/schemas/CustomerImageUsage"
						}
					},
					"signatureName": {
						"type": "string",
						"description": "Indicates the name to be printed as signature on the document instead of (or in addition to) a signature image.<br>Example: John Hill",
						"example": "Signature Name"
					},
					"documentFormat": {
						"$ref": "#/components/schemas/ShippingDocumentFormat"
					}
				},
				"description": "Use this object to specify details to generate the OP-900 document for hazardous material packages."
			},
			"CustomerImageUsage": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Specify the Image ID.",
						"example": "IMAGE_5",
						"enum": [
							"IMAGE_1",
							"IMAGE_2",
							"IMAGE_3",
							"IMAGE_4",
							"IMAGE_5"
						]
					},
					"type": {
						"type": "string",
						"description": "Specify document image type.",
						"example": "SIGNATURE",
						"enum": [
							"SIGNATURE",
							"LETTER_HEAD"
						]
					},
					"providedImageType": {
						"type": "string",
						"description": "Specify the provided document image type.",
						"example": "SIGNATURE",
						"enum": [
							"LETTER_HEAD",
							"SIGNATURE"
						]
					}
				},
				"description": "Specify the usse and identification of supplied images to be used on this document."
			},
			"UsmcaCertificationOfOriginDetail": {
				"type": "object",
				"properties": {
					"customerImageUsages": {
						"type": "array",
						"description": "Specifies the usage and identification of customer supplied images to be used on this document.",
						"items": {
							"$ref": "#/components/schemas/CustomerImageUsage"
						}
					},
					"documentFormat": {
						"$ref": "#/components/schemas/ShippingDocumentFormat"
					},
					"certifierSpecification": {
						"type": "string",
						"description": "This is certifier specification.",
						"example": "EXPORTER",
						"enum": [
							"EXPORTER",
							"IMPORTER",
							"PRODUCER"
						]
					},
					"importerSpecification": {
						"type": "string",
						"description": "This is importer specification.",
						"example": "UNKNOWN",
						"enum": [
							"UNKNOWN",
							"VARIOUS"
						]
					},
					"producerSpecification": {
						"type": "string",
						"description": "This is producer specification.",
						"example": "SAME_AS_EXPORTER",
						"enum": [
							"AVAILABLE_UPON_REQUEST",
							"VARIOUS",
							"SAME_AS_EXPORTER"
						]
					},
					"producer": {
						"$ref": "#/components/schemas/Party_3"
					},
					"blanketPeriod": {
						"$ref": "#/components/schemas/RetrieveDateRange"
					},
					"certifierJobTitle": {
						"type": "string",
						"description": "Specify the job title of the certifier",
						"example": "Manager"
					}
				},
				"description": "The instructions indicating how to print the USMCA Certificate of Origin (e.g. whether or not to include the instructions, image type, etc ...)."
			},
			"Party_3": {
				"type": "object",
				"properties": {
					"address": {
						"$ref": "#/components/schemas/PartyAddress_1"
					},
					"contact": {
						"$ref": "#/components/schemas/PartyContact_1"
					},
					"tins": {
						"type": "array",
						"description": "This is the tax identification number details.",
						"items": {
							"$ref": "#/components/schemas/TaxpayerIdentification"
						}
					}
				},
				"example": {
					"address": {
						"streetLines": [
							"10 FedEx Parkway",
							"Suite 302"
						],
						"city": "Beverly Hills",
						"stateOrProvinceCode": "CA",
						"postalCode": "90210",
						"countryCode": "US",
						"residential": false
					},
					"contact": {
						"personName": "John Taylor",
						"emailAddress": "sample@company.com",
						"phoneExtension": "000",
						"phoneNumber": "XXXX345671",
						"companyName": "Fedex"
					},
					"accountNumber": {
						"value": "Your account number"
					},
					"tins": [
						{
							"number": "123567",
							"tinType": "FEDERAL",
							"usage": "usage",
							"effectiveDate": "2000-01-23T04:56:07.000+00:00",
							"expirationDate": "2000-01-23T04:56:07.000+00:00"
						}
					]
				}
			},
			"PartyAddress_1": {
				"type": "object",
				"properties": {
					"streetLines": {
						"type": "array",
						"description": "This is the combination of number, street name, etc. Maximum length per line is 35.<br>Example: 10 FedEx Parkway, Suite 302.<p><i>Note:<ul><li>At least one line is required.</li><li>Streetlines more than 3 will be ignored.</li><li>Empty lines should not be included</li><li>For SmartPost Shipments, only 30 characters from the individual street lines will be printed on the labels.</li></ul></i></p>",
						"example": [
							"1550 Union Blvd",
							"Suite 302"
						],
						"items": {
							"type": "string"
						}
					},
					"city": {
						"type": "string",
						"description": "This is a placeholder for City Name. <br>Example: Beverly Hills",
						"example": "Beverly Hills"
					},
					"stateOrProvinceCode": {
						"type": "string",
						"description": "This is a placeholder for State or Province code.State code is required for US, CA, PR and not required for other countries. Conditional. Max length is 2.<br>Example: CA.<br><a onclick='loadDocReference(\"canadaprovincecodes\")'>click here to see State or Province Code</a>",
						"example": "CA"
					},
					"postalCode": {
						"type": "string",
						"description": "This is the Postal code.<br>This is Optional for non postal-aware countries.<br>Maximum length is 10.<br>Example: 65247<br><a onclick='loadDocReference(\"postalawarecountries\")'>click here to see Postal aware countries</a>",
						"example": "90210"
					},
					"countryCode": {
						"type": "string",
						"description": "This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference(\"countrycodes\")'>click here to see Country codes</a>",
						"example": "US"
					},
					"residential": {
						"type": "boolean",
						"description": "Indicate whether this address is residential (as opposed to commercial).",
						"example": false
					},
					"geographicCoordinates": {
						"type": "string",
						"description": "Indicates the geographic coordinates. <br> example: geographicCoordinates",
						"example": "geographicCoordinates"
					}
				},
				"description": "This is detailed information on physical location. May be used as an actual physical address (place to which one could go), or as a container of address parts which should be handled as a unit (such as a city-state-ZIP combination within the US).",
				"example": {
					"streetLines": [
						"10 FedEx Parkway",
						"Suite 302"
					],
					"city": "Beverly Hills",
					"stateOrProvinceCode": "CA",
					"postalCode": "90210",
					"countryCode": "US",
					"residential": false
				}
			},
			"PartyContact_1": {
				"type": "object",
				"properties": {
					"personName": {
						"type": "string",
						"description": "Specify contact name. Maximum length is 70. <br> Example: John Taylor",
						"example": "John Taylor"
					},
					"emailAddress": {
						"type": "string",
						"description": "Specify contact email address. Maximum length is 80. <br> Example: sample@company.com",
						"example": "sample@company.com"
					},
					"phoneExtension": {
						"type": "string",
						"description": "Specify contact phone extension. Maximum length is 6. <br> Example: 1234",
						"example": "91"
					},
					"phoneNumber": {
						"type": "string",
						"description": "Specify contact phone number. <br>Minimum length is 10 and supports Maximum as 15 for certain countries using longer phone numbers. <br>Note: Recommended Maximum length is 15 and there's no specific validation will be done for the phone number. <br> Example: 918xxxxx890",
						"example": "1234567890"
					},
					"companyName": {
						"type": "string",
						"description": "Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation of the company name.",
						"example": "Fedex"
					},
					"faxNumber": {
						"type": "string",
						"description": "Specify contact person's fax number. Maximum length is 15."
					}
				},
				"description": "Indicate the contact details for this shipment.",
				"example": {
					"personName": "John Taylor",
					"emailAddress": "sample@company.com",
					"phoneExtension": "91",
					"phoneNumber": "1234567890",
					"companyName": "Fedex"
				}
			},
			"RetrieveDateRange": {
				"type": "object",
				"properties": {
					"begins": {
						"type": "string",
						"description": "Indicates the start date.",
						"example": "22-01-2020"
					},
					"ends": {
						"type": "string",
						"description": "Indicates the end date.",
						"example": "2-01-2020"
					}
				},
				"description": "Date Range for custom delivery request; only used if type is BETWEEN."
			},
			"UsmcaCommercialInvoiceCertificationOfOriginDetail": {
				"type": "object",
				"properties": {
					"customerImageUsages": {
						"type": "array",
						"description": "Specifies the usage and identification of customer supplied images to be used on this document.",
						"items": {
							"$ref": "#/components/schemas/CustomerImageUsage"
						}
					},
					"documentFormat": {
						"$ref": "#/components/schemas/ShippingDocumentFormat"
					},
					"certifierSpecification": {
						"type": "string",
						"description": "This is certifier specification.",
						"example": "EXPORTER",
						"enum": [
							"EXPORTER",
							"IMPORTER",
							"PRODUCER"
						]
					},
					"importerSpecification": {
						"type": "string",
						"description": "This is importer specification.",
						"example": "UNKNOWN",
						"enum": [
							"UNKNOWN",
							"VARIOUS"
						]
					},
					"producerSpecification": {
						"type": "string",
						"description": "This is producer specification.",
						"example": "SAME_AS_EXPORTER",
						"enum": [
							"AVAILABLE_UPON_REQUEST",
							"VARIOUS",
							"SAME_AS_EXPORTER"
						]
					},
					"producer": {
						"$ref": "#/components/schemas/Party_3"
					},
					"certifierJobTitle": {
						"type": "string",
						"description": "Specify the job title of the certifier",
						"example": "Manager"
					}
				},
				"description": "The instructions indicating commercial invoice certification of origin."
			},
			"CertificateOfOriginDetail": {
				"type": "object",
				"properties": {
					"customerImageUsages": {
						"type": "array",
						"description": "Specifies the usage and identification of customer supplied images to be used on this document.",
						"items": {
							"$ref": "#/components/schemas/CustomerImageUsage"
						}
					},
					"documentFormat": {
						"$ref": "#/components/schemas/ShippingDocumentFormat"
					}
				},
				"description": "The instructions indicating how to print the Certificate of Origin ( e.g. whether or not to include the instructions, image type, etc ...)"
			},
			"CommercialInvoiceDetail": {
				"type": "object",
				"properties": {
					"customerImageUsages": {
						"type": "array",
						"description": "Specifies the usage and identification of customer supplied images to be used on this document.",
						"items": {
							"$ref": "#/components/schemas/CustomerImageUsage"
						}
					},
					"documentFormat": {
						"$ref": "#/components/schemas/ShippingDocumentFormat"
					}
				},
				"description": "The instructions indicating how to print the Commercial Invoice( e.g. image type) Specifies characteristics of a shipping document to be produced."
			},
			"MasterTrackingId": {
				"type": "object",
				"properties": {
					"formId": {
						"type": "string",
						"description": "This is FedEx tracking Identifier associated with the package.<br>Example: 8600",
						"example": "0201"
					},
					"trackingIdType": {
						"type": "string",
						"description": "Specify the FedEx transportation type. <br>Example: EXPRESS",
						"example": "EXPRESS"
					},
					"uspsApplicationId": {
						"type": "string",
						"description": "Specify the USPS tracking Identifier associated with FedEx SmartPost shipment.<br>Example: 92",
						"example": "92"
					},
					"trackingNumber": {
						"type": "string",
						"description": "This is the number associated with the package that is used to track it.For child shipment of an oneLabelAtATime shipments,this should be same as the masterTrackingNumber of the parent shipment. <br>Example: 49XXX0000XXX20032835",
						"example": "49092000070120032835"
					}
				},
				"description": "Indicates the tracking details of the package.Required for child shipments of an oneLabelAtATime shipments"
			},
			"RequestedPackageLineItem": {
				"required": [
					"weight"
				],
				"type": "object",
				"properties": {
					"sequenceNumber": {
						"type": "integer",
						"description": "Optional. <br>Used only with individual packages as a unique identifier of each requested package. Will be adjusted at the shipment level as pieces are added.",
						"example": "1"
					},
					"subPackagingType": {
						"type": "string",
						"description": "Indicate the subPackagingType, if you are using your own packaging for the shipment. Use it for all shipments inbound to Canada (CA) and inbound shipments to the U.S. and Puerto Rico (PR) from Canada and Mexico (MX).subPackagingType is mandatory for shipments to Canada.<br>Example: TUBE, CARTON, CONTAINER. etc.<br>Note: If the value is TUBE, a non-machinable surcharge will be applicable for SmartPost shipments.<br><a onclick='loadDocReference(\"subpackagetypes\")'>click here to see Sub-Packaging Types</a><br>For more information on physical packaging or packaging regulatory requirements, contact your FedEx representative.",
						"example": "BUCKET"
					},
					"customerReferences": {
						"type": "array",
						"description": "This object lists the customer references provided with the package.",
						"items": {
							"$ref": "#/components/schemas/CustomerReference_1"
						}
					},
					"declaredValue": {
						"description": "This is the Declared Value of any shipment which represents FedEx maximum liability associated with a shipment. This is including, but not limited to any loss, damage, delay, misdelivery, any failure to provide information, or misdelivery of information related to the Shipment.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					},
					"weight": {
						"$ref": "#/components/schemas/Weight"
					},
					"dimensions": {
						"description": "Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required when using a Express freight service.</li></ul>Note: The maximum/minimum dimension values varies based on the services and the packaging types. Refer <a href='https://www.fedex.com/en-us/service-guide.html' target='_blank'>FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Dimensions"
							}
						]
					},
					"groupPackageCount": {
						"type": "integer",
						"description": "Indicate the grouped package count. These are number of identical package(s) each with one or more commodities. <br> Example: 2",
						"format": "int32",
						"example": 2
					},
					"itemDescriptionForClearance": {
						"type": "string",
						"description": "Describe the content of the package for customs clearance purposes. This applies to intra-UAE, intra-Columbia and intra-Brazil shipments.",
						"example": "description"
					},
					"contentRecord": {
						"type": "array",
						"description": "Use this object to specify package content details.",
						"items": {
							"$ref": "#/components/schemas/ContentRecord"
						}
					},
					"itemDescription": {
						"type": "string",
						"description": "This the item description for the package.<br>Note: Item description is required for Email Label return shipments and ground Create tag.<br>Example: Item description<br> Maximum limit is 50 characters",
						"example": "item description for the package"
					},
					"variableHandlingChargeDetail": {
						"$ref": "#/components/schemas/VariableHandlingChargeDetail"
					},
					"packageSpecialServices": {
						"$ref": "#/components/schemas/PackageSpecialServicesRequested"
					}
				},
				"description": "These are one or more package-attribute descriptions, each of which describes an individual package, a group of identical packages, or (for the total-piece-total-weight case) common characteristics of all packages in the shipment.<ul><li>At least one instance containing the weight for at least one package is required for EXPRESS and GROUND shipments.</li><li>Single piece requests will have one RequestedPackageLineItem.</li><li>Multiple piece requests will have multiple RequestedPackageLineItems.</li><li>Maximum occurrences is 30.</li></ul>"
			},
			"CustomerReference_1": {
				"type": "object",
				"properties": {
					"customerReferenceType": {
						"type": "string",
						"description": "This is a customer reference type. The value specified here for the element is printed on the Commercial Invoice only for tracking and label information.<p>Note: <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li><li>The RMA_ASSOCIATION value sent by the customer is returned on the label in human readable form but also as a barcode.</li></ul>Note: INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.<br><a onclick='loadDocReference(\"customerreferencetypes\")'>For more information, click here for Customer References</a>",
						"example": "INVOICE_NUMBER",
						"enum": [
							"CUSTOMER_REFERENCE",
							"DEPARTMENT_NUMBER",
							"INVOICE_NUMBER",
							"P_O_NUMBER",
							"INTRACOUNTRY_REGULATORY_REFERENCE",
							"RMA_ASSOCIATION"
						]
					},
					"value": {
						"type": "string",
						"description": "This is a customer reference type value.<br>Example: 3686 <ul><li>The P_O_NUMBER value must be specified in customerReferences under requestedPackageLineItems</li><li>The INVOICE_NUMBER value that is printed on the FedEx-supplied invoice must be specified in customerReferences under commercialInvoice. Value defined in this section will print on the label that is attached to the package</li><li>The RMA value sent by the customer is returned on the label in human readable form but also as a barcode. RMA_ASSOCIATION only prints on the label as a barcode for a Return shipment.</ul>NOTE:<ul><li> INTRACOUNTRY_REGULATORY_REFERENCE is applicable only in Intra-Brazil.</li><li>  Maximum length varies for value field depending on customerReferenceType.</li></ul> Maximum length for value is as follows: <ul><li>CUSTOMER_REFERENCE - 40(Express), 30(Ground)</li><li>DEPARTMENT_NUMBER - 30</li><li>INVOICE_NUMBER - 30</li><li>P_O_NUMBER - 30</li><li>INTRACOUNTRY_REGULATORY_REFERENCE - 30</li><li>RMA_ASSOCIATION - 20</li>",
						"example": "3686"
					}
				}
			},
			"Dimensions": {
				"type": "object",
				"properties": {
					"length": {
						"type": "integer",
						"description": "Indicate the length of the package. No implied decimal places. Maximum value: 999 <br> Example: 20",
						"format": "int32",
						"example": 3
					},
					"width": {
						"type": "integer",
						"description": "Indicate the width of the package. No implied decimal places. Maximum value: 999 <br> Example: 10",
						"format": "int32",
						"example": 2
					},
					"height": {
						"type": "integer",
						"description": "Indicate the height of the package. No implied decimal places. Maximum value: 999 <br> Example: 10",
						"format": "int32",
						"example": 1
					},
					"units": {
						"type": "string",
						"description": "Indicate the Unit of measure for the provided dimensions.<br>Valid Values are:<li>IN - inches</li><li>CM - centimeters</li>Note: Any value other than CM including blank/null will default to IN.",
						"example": "CM",
						"enum": [
							"CM",
							"IN"
						]
					}
				},
				"description": "Indicate the dimensions of the package.<br> Following conditions will apply: <ul><li>Dimensions are optional but when added, then all three dimensions must be indicated.</li><li>Dimensions are required with YOUR_PACKAGING package type.</li></ul>Note: The maximum/minimum dimension values varies based on the services and the packaging types. Refer <a href=\"https://www.fedex.com/en-us/service-guide.html\" target=\"_blank\">FedEx Service Guide</a> for service details related to DIM Weighting for FedEx Express and oversize conditions for FedEx Express and FedEx Ground.",
				"example": {
					"length": 100,
					"width": 50,
					"height": 30,
					"units": "CM"
				}
			},
			"ContentRecord": {
				"type": "object",
				"properties": {
					"itemNumber": {
						"type": "string",
						"description": "This is a package item number.",
						"example": "2876"
					},
					"receivedQuantity": {
						"type": "integer",
						"description": "This is the package item quantity.",
						"format": "int32",
						"example": 256
					},
					"description": {
						"type": "string",
						"description": "This is the description of the package item.",
						"example": "Description"
					},
					"partNumber": {
						"type": "string",
						"description": "This is the part number.",
						"example": "456"
					}
				},
				"description": "Use this object to specify package content details."
			},
			"PackageSpecialServicesRequested": {
				"type": "object",
				"properties": {
					"specialServiceTypes": {
						"type": "array",
						"description": "Indicate the types of special services requested for the shipment.<br><a onclick='loadDocReference(\"packagelevelspecialservicetypes\")'>click here to see Package Special Service Types</a>",
						"example": [
							"ALCOHOL",
							"NON_STANDARD_CONTAINER"
						],
						"items": {
							"type": "string"
						}
					},
					"signatureOptionType": {
						"type": "string",
						"description": "Indicate the Signature Type. <br>Valid Values: <ul><li>ADULT - Adult signature required, at recipient address.</li><li>DIRECT - Signature required, at recipient address.</li><li>INDIRECT - Signature required, alternate address is accepted.This option is available for residential deliveries only</li><li>NO_SIGNATURE_REQUIRED - Signature is not required.</li><li>SERVICE_DEFAULT - Signature handled as per current Service Guide.</li></ul>",
						"example": "ADULT",
						"enum": [
							"SERVICE_DEFAULT",
							"NO_SIGNATURE_REQUIRED",
							"INDIRECT",
							"DIRECT",
							"ADULT"
						]
					},
					"priorityAlertDetail": {
						"$ref": "#/components/schemas/PriorityAlertDetail"
					},
					"signatureOptionDetail": {
						"$ref": "#/components/schemas/SignatureOptionDetail"
					},
					"alcoholDetail": {
						"$ref": "#/components/schemas/AlcoholDetail"
					},
					"dangerousGoodsDetail": {
						"$ref": "#/components/schemas/DangerousGoodsDetail"
					},
					"packageCODDetail": {
						"$ref": "#/components/schemas/PackageCODDetail"
					},
					"pieceCountVerificationBoxCount": {
						"type": "integer",
						"description": "Provide the pieceCount or VerificationBoxCount for batteries or cells that are contained within this specific package.",
						"format": "int32"
					},
					"batteryDetails": {
						"type": "array",
						"description": "Provide details about the batteries or cells that are contained within this specific package.",
						"items": {
							"$ref": "#/components/schemas/BatteryDetail"
						}
					},
					"dryIceWeight": {
						"$ref": "#/components/schemas/Weight_3"
					}
				},
				"description": "These are special services that are available at the package level for some or all service types."
			},
			"PriorityAlertDetail": {
				"type": "object",
				"properties": {
					"enhancementTypes": {
						"type": "array",
						"description": "The types of all enhancement for the Priority Alert.<br>Example: PRIORITY_ALERT_PLUS",
						"example": [
							"PRIORITY_ALERT_PLUS"
						],
						"items": {
							"type": "string"
						}
					},
					"content": {
						"type": "array",
						"description": "Specifies Content for the Priority Alert Detail.",
						"example": [
							"string"
						],
						"items": {
							"type": "string"
						}
					}
				},
				"description": "Specifies the Priority Alert Detail."
			},
			"SignatureOptionDetail": {
				"type": "object",
				"properties": {
					"signatureReleaseNumber": {
						"type": "string",
						"description": "This is release number.<br>Example: 23456",
						"example": "23456"
					}
				},
				"description": "This element specifies Signature option details."
			},
			"AlcoholDetail": {
				"type": "object",
				"properties": {
					"alcoholRecipientType": {
						"type": "string",
						"description": "Specify the Alcohol Recipient Type of the shipment. <br> Example: LICENSEE ",
						"example": "LICENSEE",
						"enum": [
							"LICENSEE",
							"CONSUMER"
						]
					},
					"shipperAgreementType": {
						"type": "string",
						"description": "Specify the type of entity, the shipper for alcohol shipment is registered such as fulfillment house, retailer or a winery.",
						"example": "Retailer"
					}
				},
				"description": "These are detcontentails for the package containing alcohol. This is required for alcohol special service. The alcoholRecipientType is required."
			},
			"DangerousGoodsDetail": {
				"required": [
					"accessibility"
				],
				"type": "object",
				"properties": {
					"cargoAircraftOnly": {
						"description": "A Boolean value that, when True, specifies the mode of shipment transportation should be Cargo Aircraft for Dangerous Goods. Its default value is set as False.<br>Note: An identifier DGD-CAO is added in AWB for cargo aircraft shipments.",
						"type": "boolean",
						"example": false
					},
					"accessibility": {
						"type": "string",
						"description": "Specify Dangerous Goods Accessibility Type. <ul><li>Inaccessible &ndash; it does not have to be accessable on the aircraft.</li><li>Accessible &ndash; it must be fully accessible on the aircraft, and is more strictly controlled.</li></ul>",
						"example": "INACCESSIBLE",
						"enum": [
							"ACCESSIBLE",
							"INACCESSIBLE"
						]
					},
					"options": {
						"type": "array",
						"description": "Indicate type of DG being reported.<br> - SMALL_QUANTITY_EXCEPTION : It is applicable for only One Piece shipment.",
						"example": [
							"LIMITED_QUANTITIES_COMMODITIES",
							"ORM_D"
						],
						"items": {
							"type": "string",
							"xml": {
								"name": "options"
							},
							"enum": [
								"HAZARDOUS_MATERIALS",
								"BATTERY",
								"ORM_D",
								"REPORTABLE_QUANTITIES",
								"SMALL_QUANTITY_EXCEPTION",
								"LIMITED_QUANTITIES_COMMODITIES"
							]
						}
					}
				},
				"description": "Provide dangerous goods shipment details."
			},
			"PackageCODDetail": {
				"type": "object",
				"properties": {
					"codCollectionAmount": {
						"description": "Indicate the COD collection amount.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Money"
							}
						]
					}
				},
				"description": "These are COD package details. For use with FedEx Ground services only; COD must be present in shipments special services."
			},
			"BatteryDetail": {
				"type": "object",
				"properties": {
					"batteryPackingType": {
						"type": "string",
						"description": "Describe the packing arrangement of the battery or cell with respect to other items within the same package.",
						"enum": [
							"CONTAINED_IN_EQUIPMENT",
							"PACKED_WITH_EQUIPMENT"
						]
					},
					"batteryRegulatoryType": {
						"type": "string",
						"description": "This is a regulation specific classification for the battery or the cell.",
						"enum": [
							"IATA_SECTION_II"
						]
					},
					"batteryMaterialType": {
						"type": "string",
						"description": "Indicate the material composition of the battery or cell.",
						"enum": [
							"LITHIUM_METAL",
							"LITHIUM_ION"
						]
					}
				}
			},
			"LABELRESPONSEOPTIONS": {
				"type": "string",
				"description": "This is to specify whether the encoded bytecode or  the Label URL to be returned in the response.<p>Valid values:<ul><li>LABEL &ndash; Indicates request is for encoded bytecode.</li><li>URL_ONLY &ndash; Indicates label URL request.</li></ul>Note: For asynchronous shipment (More than 40 packages) request only the value LABEL is suported.</p><br><i>Note: With URL_ONLY option, the URL once created will be active for 12 hours.</i>",
				"example": "LABEL",
				"enum": [
					"URL_ONLY",
					"LABEL"
				]
			},
			"ShipperAccountNumber": {
				"required": [
					"value"
				],
				"type": "object",
				"properties": {
					"value": {
						"type": "string",
						"description": "The account number value. Maximum length is 9 .<br>Example: Your account number"
					}
				},
				"description": "The account number associated with the shipment.",
				"example": {
					"value": "Your account number"
				}
			},
			"OpenShipmentAction": {
				"type": "string",
				"description": "Indicate shipment action for the Shipment. <ul><li>CONFIRM &ndash; used in case of shipment submission</li><li>TRANSFER &ndash; used in case of Email Label Shipment or Pending Shipment submission.",
				"example": "CONFIRM",
				"enum": [
					"CONFIRM",
					"TRANSFER"
				]
			},
			"AsynchronousProcessingOptionType_1": {
				"type": "string",
				"description": "Indicate the processing option for submitting a Single shot MPS shipment. The value indicates if the MPS to be processed synchronously or asynchronously.<br>Note: <ul><li>Default value is SYNCHRONOUS_ONLY.</li><li>Value or element is not needed when groupPackageCount is less than or equal to 40.</li><li>Must provide element with value ALLOW_ASYNCHRONOUS when groupPackageCount is greater than 40.</li></ul>",
				"example": "ALLOW_ASYNCHRONOUS",
				"enum": [
					"SYNCHRONOUS_ONLY",
					"ALLOW_ASYNCHRONOUS"
				]
			},
			"SHPCResponseVO_ShipShipment": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element has a unique identifier added in your request, helps you match the request to the reply.<br>Example: XXXX_XXX123XXXXX",
						"example": "AnyCo_order123456789"
					},
					"output": {
						"$ref": "#/components/schemas/BaseProcessOutputVO_ShipShipment"
					}
				},
				"description": "Wrapper class for ShipShipmentOutputVO. It holds transactionId and output."
			},
			"BaseProcessOutputVO_ShipShipment": {
				"$ref": "#/components/schemas/ShipShipmentOutputVO"
			},
			"ShipShipmentOutputVO": {
				"type": "object",
				"properties": {
					"transactionShipments": {
						"type": "array",
						"description": "These are shipping transaction details, such as master tracking number, service type, and ship date and time.",
						"items": {
							"$ref": "#/components/schemas/TransactionShipmentOutputVO"
						}
					},
					"alerts": {
						"type": "array",
						"description": "The alerts received when processing a shipment request.",
						"items": {
							"$ref": "#/components/schemas/Alert"
						}
					},
					"jobId": {
						"type": "string",
						"description": "Unique identifier for a Job. Example: abc123456",
						"example": "abc123456"
					}
				},
				"description": "This is the response received when a shipment is requested."
			},
			"TransactionShipmentOutputVO": {
				"type": "object",
				"properties": {
					"serviceType": {
						"type": "string",
						"description": "Indicate the FedEx serviceType used for this shipment. The results will be filtered by the serviceType value indicated.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference(\"servicetypes\")'>click here to see Service Types</a>",
						"example": "STANDARD_OVERNIGHT"
					},
					"shipDatestamp": {
						"type": "string",
						"description": "This is the shipment date. Default value is current date in case the date is not provided or a past date is provided.<br>Format [YYYY-MM-DD].<br>Example: 2019-10-14",
						"example": "2010-03-04"
					},
					"serviceCategory": {
						"type": "string",
						"description": "Indicates the Service Category.<br>Example: EXPRESS",
						"example": "EXPRESS"
					},
					"shipmentDocuments": {
						"type": "array",
						"description": "These are shipping document details.",
						"items": {
							"$ref": "#/components/schemas/LabelResponseVO"
						}
					},
					"pieceResponses": {
						"type": "array",
						"description": "Specifies the information about the pieces, received in the response.",
						"items": {
							"$ref": "#/components/schemas/PieceResponse"
						}
					},
					"serviceName": {
						"type": "string",
						"description": "This is the service name associated with the shipment.<br>Example: FedEx Ground",
						"example": "FedEx 2 Day Freight"
					},
					"alerts": {
						"type": "array",
						"description": "These are alert details received in the response.",
						"items": {
							"$ref": "#/components/schemas/Alert"
						}
					},
					"completedShipmentDetail": {
						"$ref": "#/components/schemas/CompletedShipmentDetail"
					},
					"shipmentAdvisoryDetails": {
						"$ref": "#/components/schemas/ShipmentAdvisoryDetails"
					},
					"masterTrackingNumber": {
						"type": "string",
						"description": "This is a master tracking number for the shipment (must be unique for stand-alone open shipments, or unique within consolidation if consolidation key is provided).<br>Example: 794953535000",
						"example": "794953535000"
					}
				},
				"description": "Specifies shipping transaction output details"
			},
			"LabelResponseVO": {
				"type": "object",
				"properties": {
					"contentKey": {
						"type": "string",
						"description": "This is the content key of the document/label.<br>Example: content key",
						"example": "content key"
					},
					"copiesToPrint": {
						"type": "integer",
						"description": "These are the number of copies to print for the specific document type.<br>Example: 10",
						"format": "int32",
						"example": 10
					},
					"contentType": {
						"type": "string",
						"description": "Indicates the type of document/label.",
						"example": "COMMERCIAL_INVOICE",
						"enum": [
							"LABEL",
							"BILL_OF_LADING",
							"GAA_FORM",
							"HAZMAT_LABEL",
							"END_OF_DAY_HAZMAT_REPORT",
							"MANIFEST_REPORT",
							"MULTIWEIGHT_REPORT",
							"MERGED_LABEL_DOCUMENTS",
							"AUXILIARY",
							"RETURN_INSTRUCTIONS",
							"ACCEPTANCE_LABEL",
							"COMMERCIAL_INVOICE",
							"PROFORMA_INVOICE",
							"USMCA_CERTIFICATION_OF_ORIGIN",
							"CERTIFICATE_OF_ORIGIN",
							"MERGED_LABELS_ONLY"
						]
					},
					"trackingNumber": {
						"type": "string",
						"description": "This is the tracking number of the package. <br>Example: 49XXX0000XXX20032835<br>",
						"example": "794953535000"
					},
					"docType": {
						"type": "string",
						"description": "This is the document type.<br>Example: PDF",
						"example": "PDF"
					},
					"alerts": {
						"type": "array",
						"description": "These are alerts received in the label response.",
						"items": {
							"$ref": "#/components/schemas/Alert"
						}
					},
					"encodedLabel": {
						"type": "string",
						"description": "Specifies if the document is encoded.<br>Example: encoded label",
						"example": "encoded label"
					},
					"url": {
						"type": "string",
						"description": "The URL of the shipping document/label<br>Example: https://.../document/v2/document/retrieve/SH,794816968200_Merge/isLabel=true&autoPrint=false<br><i>Note: The URL once created will be active for 24 hours.</i>",
						"example": "https://wwwdev.idev.fedex.com/document/v2/document/retrieve/SH,794810209259_SHIPPING_P/isLabel=true&autoPrint=false"
					}
				},
				"description": "These are shipping document/label specific information."
			},
			"Alert": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Specifies the API alert code.<br>Example: SHIP.RECIPIENT.POSTALCITY.MISMATCH",
						"example": "SHIP.RECIPIENT.POSTALCITY.MISMATCH"
					},
					"alertType": {
						"type": "string",
						"description": "Specifies the API alert type.",
						"example": "NOTE",
						"enum": [
							"NOTE",
							"WARNING"
						]
					},
					"message": {
						"type": "string",
						"description": "Specifies the API alert message.<br>Example: Recipient Postal-City Mismatch.",
						"example": "Recipient Postal-City Mismatch."
					}
				},
				"description": "These are alert details received in the response."
			},
			"PieceResponse": {
				"type": "object",
				"properties": {
					"netChargeAmount": {
						"type": "number",
						"description": "Indicates the net charges amount.<br>Example: 21.45",
						"format": "double",
						"example": 21.45
					},
					"transactionDetails": {
						"type": "array",
						"description": "Indicates data received that governs data payload language/translations. The TransactionDetail from the request is echoed back to the caller in the corresponding reply.",
						"items": {
							"$ref": "#/components/schemas/TransactionDetailVO"
						}
					},
					"packageDocuments": {
						"type": "array",
						"description": "These are package documents returned in the response.",
						"items": {
							"$ref": "#/components/schemas/LabelResponseVO"
						}
					},
					"acceptanceTrackingNumber": {
						"type": "string",
						"description": "Indicates the acceptance tracking number.<br>Example: 7949XXXXX5000",
						"example": "794953535000"
					},
					"serviceCategory": {
						"type": "string",
						"description": "Indicates the service category.",
						"example": "EXPRESS",
						"enum": [
							"EXPRESS",
							"GROUND",
							"EXPRESS_FREIGHT",
							"FREIGHT",
							"SMARTPOST",
							"EXPRESS_PARCEL",
							"NULL"
						]
					},
					"listCustomerTotalCharge": {
						"type": "string",
						"description": "Indicates total charges applicable to the customer.<br>Example: listCustomerTotalCharge",
						"example": "listCustomerTotalCharge"
					},
					"deliveryTimestamp": {
						"type": "string",
						"description": "Indicates delivery date with timestamp.<br>Example: 2012-09-23",
						"example": "2012-09-23"
					},
					"trackingIdType": {
						"type": "string",
						"description": "Indicates the type of the tracking identifier.",
						"example": "FEDEX"
					},
					"additionalChargesDiscount": {
						"type": "number",
						"description": "These are additional charges or discounts.<br>Example: 621.45",
						"format": "double",
						"example": 621.45
					},
					"netListRateAmount": {
						"type": "number",
						"description": "Indicates the net List rate amount.<br>Example: 1.45",
						"format": "double",
						"example": 1.45
					},
					"baseRateAmount": {
						"type": "number",
						"description": "Specifies the base rate amount.<br>Example: 321.45",
						"format": "double",
						"example": 321.45
					},
					"packageSequenceNumber": {
						"type": "integer",
						"description": "Indicates package sequence number.<br>Example: 215",
						"format": "int32",
						"example": 215
					},
					"netDiscountAmount": {
						"type": "number",
						"description": "Specifies the net discount amount.<br>Example: 121.45",
						"format": "double",
						"example": 121.45
					},
					"codcollectionAmount": {
						"type": "number",
						"description": "Specifies the Collect on Delivery collection amount.<br>Example: 231.45",
						"format": "double",
						"example": 231.45
					},
					"masterTrackingNumber": {
						"type": "string",
						"description": "This is a master tracking number of the shipment (must be unique for stand-alone open shipments, or unique within consolidation if consolidation key is provided).<br>Example: 794XXXXX5000",
						"example": "794953535000"
					},
					"acceptanceType": {
						"type": "string",
						"description": "Indicates acceptance type.",
						"example": "acceptanceType"
					},
					"trackingNumber": {
						"type": "string",
						"description": "This is the tracking number associated with this package. <br>Example: 49XXX0000XXX20032835",
						"example": "794953535000"
					},
					"successful": {
						"type": "boolean",
						"description": "Returns true if the responses are successful otherwise false.",
						"example": true
					},
					"customerReferences": {
						"type": "array",
						"description": "These are additional customer reference data.<br>Note: The groupPackageCount must be specified to retrieve customer references.",
						"items": {
							"$ref": "#/components/schemas/CustomerReference"
						}
					}
				},
				"description": "Piece Response information."
			},
			"TransactionDetailVO": {
				"type": "object",
				"properties": {
					"transactionDetails": {
						"type": "string",
						"description": "Includes data returned which governs data payload language/translations. The TransactionDetail from the request is echoed back to the caller in the corresponding reply.<br>Example: transactionDetails",
						"example": "transactionDetails"
					},
					"transactionId": {
						"type": "string",
						"description": "This element has a unique identifier added in your request, helps you match the request to the reply. Maximum of 40 characters allowed.<br>Example: XXXX_XXX123XXXXX.",
						"example": "12345"
					}
				}
			},
			"CompletedShipmentDetail": {
				"type": "object",
				"properties": {
					"completedPackageDetails": {
						"type": "array",
						"description": "Indicates the completed package details.",
						"items": {
							"$ref": "#/components/schemas/CompletedPackageDetail"
						}
					},
					"operationalDetail": {
						"$ref": "#/components/schemas/ShipmentOperationalDetail"
					},
					"carrierCode": {
						"type": "string",
						"description": "Specify the four letter code of a FedEx operating company that meets your requirements<br>Examples of FedEx Operating Companies are:<ul><li>FDXE - FedEx Express</li><li>FDXG - FedEx Ground</li><li>FXSP - FedEx SmartPost</li><li>FXCC - FedEx Custom Critical.</li></ul>",
						"example": "FDXE"
					},
					"completedHoldAtLocationDetail": {
						"$ref": "#/components/schemas/CompletedHoldAtLocationDetail"
					},
					"completedEtdDetail": {
						"$ref": "#/components/schemas/CompletedEtdDetail"
					},
					"packagingDescription": {
						"type": "string",
						"description": "Specifies packaging description.",
						"example": "description"
					},
					"masterTrackingId": {
						"$ref": "#/components/schemas/TrackingId"
					},
					"serviceDescription": {
						"$ref": "#/components/schemas/ServiceDescription"
					},
					"usDomestic": {
						"type": "boolean",
						"description": "Indicates whether or not this is an intra-U.S. shipment.",
						"example": true
					},
					"hazardousShipmentDetail": {
						"$ref": "#/components/schemas/CompletedHazardousShipmentDetail"
					},
					"shipmentRating": {
						"$ref": "#/components/schemas/ShipmentRating"
					},
					"documentRequirements": {
						"$ref": "#/components/schemas/DocumentRequirementsDetail"
					},
					"exportComplianceStatement": {
						"type": "string",
						"description": "For US export shipments requiring an EEI, enter the ITN number received from AES when you filed your shipment or the FTR (Foreign Trade Regulations) exemption number.The proper format for an ITN number is AES XYYYYMMDDNNNNNN where YYYYMMDD is date and NNNNNN are numbers generated by the AES.<br> Example: AESX20220714987654<br>Note: The ITN or FTR exemption number you submit in the ship request prints on the international shipping label.<br><br>For CA export shipments,it can be Proof of report number(15-32 alphanumeric) , Summary proof of report number(7-32 alphanumeric) or Exemption number(2 digit) based on the selected b13AFilingOption.<br>Example: 98765432107654321(POR number), 7654321(Summary POR number) and 02(Exemption number).<br>For FTR exemption number you need provide a predefined value as NO_EEI_30_37_A.",
						"example": "12345678901234567"
					},
					"accessDetail": {
						"$ref": "#/components/schemas/PendingShipmentAccessDetail"
					}
				},
				"description": "Returns the result of processing the desired package as a single-package shipment."
			},
			"CompletedPackageDetail": {
				"type": "object",
				"properties": {
					"sequenceNumber": {
						"type": "integer",
						"description": "This is package sequence number. No negative value or decimals are allowed.<br>Example: 256",
						"format": "int32",
						"example": 256
					},
					"operationalDetail": {
						"$ref": "#/components/schemas/PackageOperationalDetail"
					},
					"signatureOption": {
						"type": "string",
						"description": "It specifies the signature option applied, to allow cases in which the value requested conflicted with other service features in the shipment. <br>Example: DIRECT",
						"example": "DIRECT"
					},
					"trackingIds": {
						"type": "array",
						"description": "Tracking details of the package.",
						"items": {
							"$ref": "#/components/schemas/TrackingId"
						}
					},
					"groupNumber": {
						"type": "integer",
						"description": "This is group shipment number. Used with request containing PACKAGE_GROUPS, to identify which group of identical packages was used to produce a reply item.<br>Example: 10",
						"format": "int32",
						"example": 567
					},
					"oversizeClass": {
						"type": "string",
						"description": "Indicates the oversize classification.<br>Example: OVERSIZE_1",
						"example": "OVERSIZE_1, OVERSIZE_2, OVERSIZE_3"
					},
					"packageRating": {
						"$ref": "#/components/schemas/PackageRating"
					},
					"dryIceWeight": {
						"description": "Descriptive data required for a FedEx shipment containing dry ice. Includes weight and units. This element is required when SpecialServiceType DRY_ICE is present in the SpecialServiceTypes collection at the package level.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Weight"
							}
						]
					},
					"hazardousPackageDetail": {
						"$ref": "#/components/schemas/CompletedHazardousPackageDetail"
					}
				}
			},
			"PackageOperationalDetail": {
				"type": "object",
				"properties": {
					"astraHandlingText": {
						"type": "string",
						"description": "This is human-readable astra handling text.",
						"example": "astraHandlingText"
					},
					"barcodes": {
						"$ref": "#/components/schemas/PackageBarcodes"
					},
					"operationalInstructions": {
						"type": "array",
						"description": "These are operational instruction such as Ground Information printed on a given area of the label, one-dimensional barcode with only x-axis that contains the details of the shipment in encrypted form, COD Return operational instructions data such as COD amount, SECURED or UNSECURED.",
						"items": {
							"$ref": "#/components/schemas/OperationalInstructions"
						}
					}
				},
				"description": "Package-level data required for labeling and/or movement."
			},
			"PackageBarcodes": {
				"type": "object",
				"properties": {
					"binaryBarcodes": {
						"type": "array",
						"description": "This is binary-style barcodes used for the package identification.",
						"items": {
							"$ref": "#/components/schemas/BinaryBarcode"
						}
					},
					"stringBarcodes": {
						"type": "array",
						"description": "This is string-style barcodes  used for package identification.",
						"items": {
							"$ref": "#/components/schemas/StringBarcode"
						}
					}
				},
				"description": "These are package barcode details. Each instance of this data type represents the set of barcodes (of all types) which are associated with a specific package."
			},
			"BinaryBarcode": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"description": "This is the type of barcode data available in this instance.<br> Example: COMMON-2D",
						"example": "COMMON-2D"
					},
					"value": {
						"type": "string",
						"description": "This is the value.",
						"format": "byte"
					}
				},
				"description": "Each instance of this data type represents a barcode whose content must be represented as binary data (i.e. not ASCII text)."
			},
			"StringBarcode": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"description": "This is the type of barcode data in this instance. <br>Valid values:<ul><li>ADDRESS - Represents the recipient address.</li></ul>",
						"example": "ADDRESS"
					},
					"value": {
						"type": "string",
						"description": "This is the value.<br>Example: 1010062512241535917900794953544894",
						"example": "1010062512241535917900794953544894"
					}
				},
				"description": "Each instance of this data type represents a barcode whose content must be represented as ASCII text (i.e. not binary data)."
			},
			"OperationalInstructions": {
				"type": "object",
				"properties": {
					"number": {
						"type": "integer",
						"description": "Specifies the number of operational instructions returned for this shipment.<br>Example: 17",
						"format": "int32",
						"example": 17
					},
					"content": {
						"type": "string",
						"description": "This is an operational instruction printed or available on the shipping document.<br>Example: SECURED",
						"example": "content"
					}
				}
			},
			"TrackingId": {
				"type": "object",
				"properties": {
					"formId": {
						"type": "string",
						"description": "This is FedEx tracking Identifier associated with the package.<br>Example: 8600",
						"example": "0201"
					},
					"trackingIdType": {
						"type": "string",
						"description": "Specify the FedEx transportation type. <br>Example: EXPRESS",
						"example": "EXPRESS"
					},
					"uspsApplicationId": {
						"type": "integer",
						"description": "Specify the USPS tracking Identifier associated with FedEx SmartPost shipment.<br>Example: 92",
						"example": "92"
					},
					"trackingNumber": {
						"type": "string",
						"description": "This is the number associated with the package that is used to track it. <br>Example: 49XXX0000XXX20032835",
						"example": "49092000070120032835"
					}
				},
				"description": "Indicates the tracking details of the package."
			},
			"PackageRating": {
				"type": "object",
				"properties": {
					"effectiveNetDiscount": {
						"type": "number",
						"description": "This is the difference between the list and account net charge.<br>Example: 0.0",
						"format": "double",
						"example": 0
					},
					"actualRateType": {
						"type": "string",
						"description": "This is the actual rate type. It identifies which entry in the following array is considered as presenting the actual rates for the package.<br>Example: PAYOR_ACCOUNT_PACKAGE",
						"example": "PAYOR_ACCOUNT_PACKAGE"
					},
					"packageRateDetails": {
						"type": "array",
						"description": "Data for a package's rates, as calculated per a specific rate type.",
						"items": {
							"$ref": "#/components/schemas/PackageRateDetail"
						}
					}
				},
				"description": "This class groups together all package-level rate data for a single package (across all rate types) as part of the response to a shipping request, which groups shipment-level data together and groups package-level data by package."
			},
			"PackageRateDetail": {
				"type": "object",
				"properties": {
					"ratedWeightMethod": {
						"type": "string",
						"description": "Indicates the weight types used in calculating this rate, such as actual weight or dimensional weight.<br> Example: DIM",
						"example": "DIM"
					},
					"totalFreightDiscounts": {
						"type": "number",
						"description": "The sum of all freight discounts for this package.<br>Example: 44.55",
						"format": "double",
						"example": 44.55
					},
					"totalTaxes": {
						"type": "number",
						"description": "The sum of all taxes on this package.<br>Example: 3.45",
						"format": "double",
						"example": 3.45
					},
					"minimumChargeType": {
						"type": "string",
						"description": "Indicates the minumum charge type. INTERNAL FEDEX USE ONLY.",
						"example": "CUSTOMER"
					},
					"baseCharge": {
						"type": "number",
						"description": "The package transportation charge(prior to any discounts applied).<br>Example: 45.67",
						"format": "double",
						"example": 45.67
					},
					"totalRebates": {
						"type": "number",
						"description": "Specifies total rebates on this package.<br>Example: 4.56",
						"format": "double",
						"example": 4.56
					},
					"rateType": {
						"type": "string",
						"description": "This is the rate type used.<br>Example: PAYOR_RETAIL_PACKAGE",
						"example": "PAYOR_RETAIL_PACKAGE"
					},
					"billingWeight": {
						"$ref": "#/components/schemas/Weight"
					},
					"netFreight": {
						"type": "number",
						"description": "This is the net freight charges. i.e. base charge minus total freight discounts for a package.<br>Example: 4.89",
						"format": "double",
						"example": 4.89
					},
					"surcharges": {
						"type": "array",
						"description": "These are all surcharges on this package.<br><a onclick='loadDocReference(\"surcharges\")'>click here to see Surcharges</a>",
						"items": {
							"$ref": "#/components/schemas/Surcharge"
						}
					},
					"totalSurcharges": {
						"type": "number",
						"description": "The sum of all surcharges on this package.<br>Example: 22.56",
						"format": "double",
						"example": 22.56
					},
					"netFedExCharge": {
						"type": "number",
						"description": "This is sum of net freight and total surcharges (not including totalTaxes) for this package.<br>Example: 12.56",
						"format": "double",
						"example": 12.56
					},
					"netCharge": {
						"type": "number",
						"description": "This is the sum of net freight, total surcharges and total taxes for a package.<br>Example: 121.56",
						"format": "double",
						"example": 121.56
					},
					"currency": {
						"type": "string",
						"description": "This is the currency code. <br>Example: USD<br><a onclick='loadDocReference(\"currencycodes\")'>click here to see Currency codes</a>",
						"example": "USD"
					}
				},
				"description": "These are package rate details, as calculated per a specific rate type."
			},
			"Surcharge": {
				"type": "object",
				"properties": {
					"amount": {
						"description": "This is the surcharge amount.<br>Example: 15.35"
					},
					"surchargeType": {
						"type": "string",
						"description": "This is the surcharge type.<br>Example: APPOINTMENT_DELIVERY",
						"example": "APPOINTMENT_DELIVERY"
					},
					"level": {
						"type": "string",
						"description": "Specifies if the surcharge applies to the entire shipment, or to an individual package.<br>Example: PACKAGE",
						"example": "PACKAGE, or SHIPMENT"
					},
					"description": {
						"type": "string",
						"description": "Specifies the description of the surcharge. Indicates delivery and returns information for FedEx Ground Economy services. <br>Example: Fuel Surcharge",
						"example": "description"
					}
				},
				"description": "These are surcharges details.<br><a onclick='loadDocReference(\"surcharges\")'>click here to see Surcharges</a>"
			},
			"CompletedHazardousPackageDetail": {
				"type": "object",
				"properties": {
					"regulation": {
						"type": "string",
						"description": "Specifies the hazardous package regulation type.<br>Example: IATA",
						"example": "IATA"
					},
					"accessibility": {
						"type": "string",
						"description": "Specifies the hazardous package accessibility.<br>Example: ACCESSIBLE",
						"example": "ACCESSIBLE"
					},
					"labelType": {
						"type": "string",
						"description": "Specifies the label type of hazardous package.<br>Example: II_YELLOW",
						"example": "II_YELLOW"
					},
					"containers": {
						"type": "array",
						"description": "Indicates one or more approved containers used to pack dangerous goods commodities. This does not describe any individual inner receptacles that may be within this container.",
						"items": {
							"$ref": "#/components/schemas/ValidatedHazardousContainer"
						}
					},
					"cargoAircraftOnly": {
						"type": "boolean",
						"description": "A Boolean value that, when True, specifies the mode of shipment transportation should be Cargo Aircraft for Dangerous Goods. Its default value is set as False.<br>Note: An identifier DGD-CAO is added in AWB for cargo aircraft shipments.",
						"example": true
					},
					"referenceId": {
						"type": "string",
						"description": "A unique reference id that matches the package to a package configuration. This is populated if the client provided a package configuration for several packages that have the exact same dangerous goods content.<br>Example: 123456",
						"example": "123456"
					},
					"radioactiveTransportIndex": {
						"type": "number",
						"description": "Specifies the maximum radiation level from the package (measured in microSieverts per hour at a distance of one meter from the external surface of the package, divided by 10).<br>Example: 2.45",
						"format": "double",
						"example": 2.45
					}
				},
				"description": "Complete package-level hazardous commodity information for a single package."
			},
			"ValidatedHazardousContainer": {
				"type": "object",
				"properties": {
					"qvalue": {
						"type": "number",
						"description": "Indicates that the quantity of the dangerous goods packaged is permissible for shipping. This is used to ensure that the dangerous goods commodities do not exceed the net quantity per package restrictions.<br>Example: 2.0",
						"format": "double",
						"example": 2
					},
					"hazardousCommodities": {
						"type": "array",
						"description": "Indicates the details of the hazardous commodities in the completed package.",
						"items": {
							"$ref": "#/components/schemas/ValidatedHazardousCommodityContent"
						}
					}
				},
				"description": "Specifies the details of a container used to package dangerous goods commodities."
			},
			"ValidatedHazardousCommodityContent": {
				"type": "object",
				"properties": {
					"quantity": {
						"description": "Indicates hazardous commodity quantity details.",
						"allOf": [
							{
								"$ref": "#/components/schemas/HazardousCommodityQuantityDetail"
							}
						]
					},
					"options": {
						"$ref": "#/components/schemas/HazardousCommodityContent001"
					},
					"description": {
						"$ref": "#/components/schemas/ValidatedHazardousCommodityDescription"
					},
					"netExplosiveDetail": {
						"$ref": "#/components/schemas/NetExplosiveDetail"
					},
					"massPoints": {
						"type": "number",
						"description": "The mass points are a calculation used by ADR regulations for measuring the risk of a particular hazardous commodity.<br>Example: 2.0",
						"format": "double",
						"example": 2
					}
				},
				"description": "These the details on the kind and quantity of an individual hazardous commodity in a package."
			},
			"HazardousCommodityQuantityDetail": {
				"required": [
					"amount",
					"quantityType"
				],
				"type": "object",
				"properties": {
					"quantityType": {
						"type": "string",
						"description": "Indicate the measure of units quantity to be validated.",
						"example": "GROSS",
						"enum": [
							"GROSS",
							"NET"
						]
					},
					"amount": {
						"type": "number",
						"description": "Indicate the amount of the commodity in alternate units.<br>Example: 24.56",
						"format": "double",
						"example": 24.56
					},
					"units": {
						"type": "string",
						"description": "Indicate the unit of measure.<br>Example: KG",
						"example": "Kg"
					}
				},
				"description": "Specify the Hazardous commodity quantity details."
			},
			"HazardousCommodityContent001": {
				"type": "object",
				"properties": {
					"quantity": {
						"$ref": "#/components/schemas/HazardousCommodityQuantityDetail"
					},
					"innerReceptacles": {
						"type": "array",
						"description": "Specifies the inner receptacles within the container.",
						"items": {
							"$ref": "#/components/schemas/HazardousCommodityInnerReceptacleDetail01"
						}
					},
					"options": {
						"$ref": "#/components/schemas/HazardousCommodityOptionDetail01"
					},
					"description": {
						"$ref": "#/components/schemas/HazardousCommodityDescription01"
					}
				},
				"description": "Customer-provided specifications for handling individual commodities."
			},
			"HazardousCommodityInnerReceptacleDetail01": {
				"type": "object",
				"properties": {
					"quantity": {
						"$ref": "#/components/schemas/HazardousCommodityQuantityDetail002"
					}
				}
			},
			"HazardousCommodityQuantityDetail002": {
				"required": [
					"amount",
					"quantityType"
				],
				"type": "object",
				"properties": {
					"quantityType": {
						"type": "string",
						"description": "Specifies which measure of quantity is to be validated.",
						"example": "NET",
						"enum": [
							"GROSS",
							"NET"
						]
					},
					"amount": {
						"type": "number",
						"description": "Number of units of the type below.<br>Example: 34.56",
						"format": "double",
						"example": 34.56
					},
					"units": {
						"type": "string",
						"description": "Specifies the units.<br>Example: KG",
						"example": "Kg"
					}
				},
				"description": "Indicates the Hazardous Commodity Quantity Detail."
			},
			"HazardousCommodityOptionDetail01": {
				"type": "object",
				"properties": {
					"labelTextOption": {
						"type": "string",
						"description": "Indicates the label text option.",
						"enum": [
							"APPEND",
							"OVERRIDE",
							"STANDARD"
						]
					},
					"customerSuppliedLabelText": {
						"type": "string",
						"description": "'DG Data Upload Mode:- Optional.,DG Full Validation Mode:- Optional,Text used in labeling the commodity under control of the LabelTextOption field<br>Example:Customer Supplied Label Text' \n\n",
						"example": "Customer Supplied Label Text."
					}
				},
				"description": "Indicates details of hazardous commodity option detail."
			},
			"HazardousCommodityDescription01": {
				"required": [
					"packingGroup",
					"reportableQuantity"
				],
				"type": "object",
				"properties": {
					"sequenceNumber": {
						"type": "integer",
						"description": "Required<br>Specify the sequence number.<br>Example: 9812",
						"format": "int32",
						"example": 9812
					},
					"processingOptions": {
						"type": "array",
						"description": "Indicates any special processing options to be applied to the description of the dangerous goods commodity <br> Example: [\"INCLUDE_SPECIAL_PROVISIONS\"]",
						"items": {
							"type": "string",
							"example": "INCLUDE_SPECIAL_PROVISIONS",
							"enum": [
								"INCLUDE_SPECIAL_PROVISIONS"
							]
						}
					},
					"subsidiaryClasses": {
						"type": "array",
						"description": "Required\n\nIndicates list of subsidiary classes<br>Example: [\"Subsidiary Classes\"]",
						"example": [
							"Subsidiary Classes"
						],
						"items": {
							"type": "string"
						}
					},
					"labelText": {
						"type": "string",
						"description": "Specifies the text for the label.",
						"example": "labelText"
					},
					"technicalName": {
						"type": "string",
						"description": "Specifies the technical name for the hazardous material.",
						"example": "technicalName"
					},
					"packingDetails": {
						"$ref": "#/components/schemas/HazardousCommodityPackingDetail01"
					},
					"authorization": {
						"type": "string",
						"description": "Information related to quantity limitations and operator or state variations as may be applicable to the dangerous goods commodity.",
						"example": "authorization"
					},
					"reportableQuantity": {
						"type": "boolean",
						"description": "Reportable Quantity",
						"example": true
					},
					"percentage": {
						"type": "number",
						"description": "Percentage<br>Example: 12.45",
						"format": "double",
						"example": 12.45
					},
					"id": {
						"type": "string",
						"description": "ID<br>Example: 123",
						"example": "123"
					},
					"packingGroup": {
						"type": "string",
						"description": "Identifies DOT packing group for a hazardous commodity",
						"example": "I",
						"enum": [
							"DEFAULT",
							"I",
							"II",
							"III"
						]
					},
					"properShippingName": {
						"type": "string",
						"description": "The proper shipping name as defined by the regulation. The name can also include qualifying words<br>Example: properShippingName",
						"example": "properShippingName"
					},
					"hazardClass": {
						"type": "string",
						"description": "Specifies the hazard class for the commodity<br>Example: hazard Class\n",
						"example": "hazard Class"
					}
				},
				"description": "Required<br>Details of hazardous commodity description."
			},
			"HazardousCommodityPackingDetail01": {
				"required": [
					"cargoAircraftOnly"
				],
				"type": "object",
				"properties": {
					"packingInstructions": {
						"type": "string",
						"description": "Coded specification for how commodity is to be packed.<br>Example: packing Instructions",
						"example": "packing Instructions"
					},
					"cargoAircraftOnly": {
						"type": "boolean",
						"description": "A Boolean value that, when True, specifies the mode of shipment transportation should be Cargo Aircraft for Dangerous Goods. <br>Note: An identifier DGD-CAO is added in AWB for cargo aircraft shipments.",
						"example": true
					}
				},
				"description": "Specifies documentation and limits for validation of an individual packing group/category. DG Data Upload Mode: Required (IATA), Optional (Other), DG Full Validation Mode: Required (IATA), Optional (Other),"
			},
			"ValidatedHazardousCommodityDescription": {
				"type": "object",
				"properties": {
					"sequenceNumber": {
						"type": "integer",
						"description": "In conjunction with the regulatory identifier, this field uniquely identifies a specific hazardous materials commodity.<br>Example: 876",
						"format": "int32",
						"example": 876
					},
					"packingInstructions": {
						"type": "string",
						"description": "Specifies Packing Instructions.<br>Example: packingInstructions",
						"example": "packingInstructions"
					},
					"subsidiaryClasses": {
						"type": "array",
						"description": "Specifies subsidiary Classes.<br>Example:[\"Subsidiary Classes\"]",
						"example": [
							"Subsidiary Classes"
						],
						"items": {
							"type": "string"
						}
					},
					"labelText": {
						"type": "string",
						"description": "Specifies the text for the label.",
						"example": "labelText"
					},
					"tunnelRestrictionCode": {
						"type": "string",
						"description": "There are five categories of tunnel categorization with A representing the least restrictive and E as the most restrictive. Category A, as the least restrictive, will not be sign-posted. Category E, the most restrictive, only allows the passage of UN2919, UN3291, UN3331, UN3359 and UN3373.<br>Example: UN2919",
						"example": "UN2919"
					},
					"specialProvisions": {
						"type": "string",
						"description": "Specifies Special Provisions if any.<br>Example: specialProvisions",
						"example": "specialProvisions"
					},
					"properShippingNameAndDescription": {
						"type": "string",
						"description": "Fully-expanded descriptive text for a hazardous commodity.<br>Example: properShippingNameAndDescription",
						"example": "properShippingNameAndDescription"
					},
					"technicalName": {
						"type": "string",
						"description": "Specifies Technical Name.<br>Example: technicalName",
						"example": "technicalName"
					},
					"symbols": {
						"type": "string",
						"description": "Specifies Symbols.<br>Example: symbols",
						"example": "symbols"
					},
					"authorization": {
						"type": "string",
						"description": "Information related to quantity limitations and operator or state variations as may be applicable to the dangerous goods commodity.",
						"example": "authorization"
					},
					"attributes": {
						"type": "array",
						"description": "Specifies attributes.<br>Example: [\"attributes\"]",
						"example": [
							"attributes"
						],
						"items": {
							"type": "string"
						}
					},
					"id": {
						"type": "string",
						"description": "Specifies the Identification.<br>Example: 1234",
						"example": "1234"
					},
					"packingGroup": {
						"type": "string",
						"description": "Specifies packing group.",
						"example": "packingGroup"
					},
					"properShippingName": {
						"type": "string",
						"description": "Specifies proper shipping name.",
						"example": "properShippingName"
					},
					"hazardClass": {
						"type": "string",
						"description": "Specifies hazard class.<br>Example: Hazard Class",
						"example": "hazardClass"
					}
				},
				"description": "Identifies and describes an individual hazardous commodity. For 201001 load, this is based on data from the FedEx Ground Hazardous Materials Shipping Guide."
			},
			"NetExplosiveDetail": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "number",
						"description": "Specifies amount.<br>Example: 10.0",
						"format": "double",
						"example": 10
					},
					"units": {
						"type": "string",
						"description": "Specifies net explosive units.<br>Example: units",
						"example": "units"
					},
					"type": {
						"type": "string",
						"description": "Specifies net explosive  classification type.<br>Example: NET_EXPLOSIVE_WEIGHT",
						"example": "NET_EXPLOSIVE_WEIGHT"
					}
				},
				"description": "Specifies the total mass of the contained explosive substances, without the mass of any casings, bullets, shells, etc."
			},
			"ShipmentOperationalDetail": {
				"type": "object",
				"properties": {
					"originServiceArea": {
						"type": "string",
						"description": "Indicates the origin service area.<br>Example: A1",
						"example": "A1"
					},
					"serviceCode": {
						"type": "string",
						"description": "Indicates the service code.<br>Example: 010",
						"example": "010"
					},
					"airportId": {
						"type": "string",
						"description": "Indicates the airport identifier.<br>Example: DFW",
						"example": "DFW"
					},
					"postalCode": {
						"type": "string",
						"description": "Specifies the postal code.<br>Example: 38010<br><a onclick='loadDocReference(\"postalawarecountries\")'>click here to see Postal aware countries</a>",
						"example": "38010"
					},
					"scac": {
						"type": "string",
						"description": "Indicates standard carrier alpha code.",
						"example": "scac"
					},
					"deliveryDay": {
						"type": "string",
						"description": "Specifies expected/estimated day of week of the delivery.<br>Example: TUE",
						"example": "TUE"
					},
					"originLocationId": {
						"type": "string",
						"description": "This is the origin Location identifier.<br>Example: 678",
						"example": "678"
					},
					"countryCode": {
						"type": "string",
						"description": "Indicate the two-letter country code.<br>Example: US<br><a onclick='loadDocReference(\"countrycodes\")'>click here to see Country codes</a>",
						"example": "US"
					},
					"astraDescription": {
						"type": "string",
						"description": "Specifies astra description.<br>Example: SMART POST",
						"example": "SMART POST"
					},
					"originLocationNumber": {
						"type": "integer",
						"description": "Specifies origin location number.<br>Example: 243",
						"format": "int32",
						"example": 243
					},
					"deliveryDate": {
						"type": "string",
						"description": "Specifies delivery date for the shipment. The format is [YYYY-MM-DD]<br>Example: 2001-04-05",
						"example": "2001-04-05"
					},
					"deliveryEligibilities": {
						"type": "array",
						"description": "FedEx Ground delivery features for which this shipment may be eligible.<br>Example: [\"deliveryEligibilities\"]",
						"example": [
							"deliveryEligibilities"
						],
						"items": {
							"type": "string"
						}
					},
					"ineligibleForMoneyBackGuarantee": {
						"type": "boolean",
						"description": "Indicates that this shipment is not eligible for money back guarantee.",
						"example": true
					},
					"maximumTransitTime": {
						"type": "string",
						"description": "Maximum expected transit time.<br>Example: SEVEN_DAYS",
						"example": "SEVEN_DAYS"
					},
					"destinationLocationStateOrProvinceCode": {
						"type": "string",
						"description": "This is the state or province code of the shipment destination location, and is not necessarily the same as the postal state.<br>Example: GA<br><a onclick='loadDocReference(\"canadaprovincecodes\")'>click here to see State or Province Code</a>",
						"example": "GA"
					},
					"astraPlannedServiceLevel": {
						"type": "string",
						"description": "Text describing planned delivery.<br>Example: TUE - 15 OCT 10:30A",
						"example": "TUE - 15 OCT 10:30A"
					},
					"destinationLocationId": {
						"type": "string",
						"description": "Specifies the FedEx Destination Location Identifier.<br>Example: DALA",
						"example": "DALA"
					},
					"transitTime": {
						"type": "string",
						"description": "Standard transit time per origin, destination, and service.<br>Example: TWO_DAYS",
						"example": "TWO_DAYS"
					},
					"stateOrProvinceCode": {
						"type": "string",
						"description": "This is a placeholder for State or Province code.State code is required for US, CA, PR and not required for other countries. Conditional. Max length is 2.<br>Example: CA<br><a onclick='loadDocReference(\"canadaprovincecodes\")'>click here to see State or Province Code</a>",
						"example": "GA"
					},
					"destinationLocationNumber": {
						"type": "integer",
						"description": "Indicates destination location number.<br>Example: 876",
						"format": "int32",
						"example": 876
					},
					"packagingCode": {
						"type": "string",
						"description": "Indicates packaging code.<br>Example: 03",
						"example": "03"
					},
					"commitDate": {
						"type": "string",
						"description": "This is committed date of delivery.<br>Example: 2019-10-15",
						"example": "2019-10-15"
					},
					"publishedDeliveryTime": {
						"type": "string",
						"description": "This is delivery time, as published in Service Guide.<br>Example: 10:30A",
						"example": "10:30A"
					},
					"ursaSuffixCode": {
						"type": "string",
						"description": "This is ursa suffix code.<br>Example: Ga",
						"example": "Ga"
					},
					"ursaPrefixCode": {
						"type": "string",
						"description": "This is ursa prefix code.<br>Example: XH",
						"example": "XH"
					},
					"destinationServiceArea": {
						"type": "string",
						"description": "Specifies destination service area.<br>Example: A1",
						"example": "A1"
					},
					"commitDay": {
						"type": "string",
						"description": "Committed day of week of delivery.<br>Example: TUE",
						"example": "TUE"
					},
					"customTransitTime": {
						"type": "string",
						"description": "Transit time based on customer eligibility.<br>Example: ONE_DAY",
						"example": "ONE_DAY"
					}
				},
				"description": "Indicates the shipment level operational information."
			},
			"CompletedHoldAtLocationDetail": {
				"type": "object",
				"properties": {
					"holdingLocationType": {
						"type": "string",
						"description": "Indicates the type of the FedEx holding location <br>Example: FEDEX_STAFFED",
						"example": "FEDEX_STAFFED"
					},
					"holdingLocation": {
						"description": "Indicate the physical address of the FedEx holding location.",
						"allOf": [
							{
								"$ref": "#/components/schemas/JustContactAndAddress"
							}
						]
					}
				},
				"description": "This is default holding location information when HOLD_AT_LOCATION special service is requested and the client does not specify the hold location address."
			},
			"JustContactAndAddress": {
				"type": "object",
				"properties": {
					"address": {
						"$ref": "#/components/schemas/Address"
					},
					"contact": {
						"$ref": "#/components/schemas/Contact"
					}
				}
			},
			"Address": {
				"required": [
					"countryCode",
					"streetLines"
				],
				"type": "object",
				"properties": {
					"streetLines": {
						"type": "array",
						"description": "This is the combination of number, street name, etc. <br>Note: At least one line is required and streetlines more than 3 will be ignored. Empty lines should not be included. Maximum length per line is 35.<br>Example: [10 FedEx Parkway, Suite 302, .etc.]",
						"items": {
							"type": "string"
						}
					},
					"city": {
						"type": "string",
						"description": "This is a placeholder for City Name.<br>Note: This is conditional and not required in all the requests.<br>Note: It is recommended for Express shipments for the most accurate ODA and OPA surcharges.<br>Example: Beverly Hills"
					},
					"stateOrProvinceCode": {
						"type": "string",
						"description": "This is a placeholder for State or Province code.State code is required for US, CA, PR and not required for other countries. Conditional. Max length is 2.<br>Example: CA<br><a onclick='loadDocReference(\"canadaprovincecodes\")'>click here to see State or Province Code</a>"
					},
					"postalCode": {
						"type": "string",
						"description": "Indicate the Postal code. This is Optional for non postal-aware countries. Maximum length is 10.<br> Example: 65247<br><a onclick='loadDocReference(\"postalawarecountries\")'>click here to see Postal aware countries</a>"
					},
					"countryCode": {
						"type": "string",
						"description": "This is the two-letter country code.<br>Maximum length is 2.<br>Example: US<br><a onclick='loadDocReference(\"countrycodes\")'>click here to see Country codes</a>"
					},
					"residential": {
						"type": "boolean",
						"description": "Indicate whether this address is residential (as opposed to commercial)."
					}
				},
				"description": "Descriptive data for a physical location. May be used as an actual physical address (place to which one could go), or as a container of \"address parts\" which should be handled as a unit (such as a city-state-ZIP combination within the US).",
				"example": {
					"streetLines": [
						"10 FedEx Parkway",
						"Suite 302"
					],
					"city": "Beverly Hills",
					"stateOrProvinceCode": "CA",
					"postalCode": "38127",
					"countryCode": "US",
					"residential": false
				}
			},
			"Contact": {
				"type": "object",
				"properties": {
					"personName": {
						"type": "string",
						"description": "Specify person name.<br>Example: John Taylor"
					},
					"tollFreePhoneNumber": {
						"type": "string",
						"description": "Specify toll free phone number.<br>Example: XXXX7812"
					},
					"emailAddress": {
						"type": "string",
						"description": "Specify email address.<br>Example: sample@company.com"
					},
					"phoneNumber": {
						"type": "string",
						"description": "The shippers phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers.<br>Note: For US and CA, a phone number must have exactly 10 digits, plus an optional leading country code of 1 or +1.<br>Example: 918xxxxx890"
					},
					"phoneExtension": {
						"type": "string",
						"description": "The shipper's phone extension. Max length is 6.<br>Example: 91"
					},
					"companyName": {
						"type": "string",
						"description": "Specify company name."
					},
					"pagerNumber": {
						"type": "string",
						"description": "Specify pager number.<br>Example: XXX7812"
					},
					"faxNumber": {
						"type": "string",
						"description": "Specify fax number.<br>Example: XXXX567890"
					},
					"title": {
						"type": "string",
						"description": "Specify the title of the contact."
					}
				},
				"description": "Specify the contact information.",
				"example": {
					"personName": "John Taylor",
					"tollFreePhoneNumber": "6127812",
					"emailAddress": "sample@company.com",
					"phoneNumber": "1234567890",
					"phoneExtension": "91",
					"faxNumber": "1234567890",
					"pagerNumber": "6127812",
					"companyName": "Fedex",
					"title": "title"
				}
			},
			"CompletedEtdDetail": {
				"type": "object",
				"properties": {
					"folderId": {
						"type": "string",
						"description": "Returns the folder id where the documents is uploaded <br> Example: \"0b0493e580dc1a1b\"",
						"example": "0b0493e580dc1a1b"
					},
					"type": {
						"type": "string",
						"description": "Returns the type of the document that is being uploaded <br> Example: \"COMMERCIAL_INVOICE\"",
						"example": "COMMERCIAL_INVOICE"
					},
					"uploadDocumentReferenceDetails": {
						"type": "array",
						"description": "Specify the document upload reference details.",
						"items": {
							"$ref": "#/components/schemas/UploadDocumentReferenceDetail"
						}
					}
				},
				"description": "These are completed ETD details when ELECTRONIC_TRADE_DOCUMENTS Special service type is requested"
			},
			"ServiceDescription": {
				"type": "object",
				"properties": {
					"serviceType": {
						"type": "string",
						"description": "Indicate the FedEx serviceType used for this shipment. The results will be filtered by the serviceType value indicated.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference(\"servicetypes\")'>click here to see Service Types</a>",
						"example": "FEDEX_1_DAY_FREIGHT"
					},
					"code": {
						"type": "string",
						"description": "Specifies code of the Service.<br>example: 80",
						"example": "80"
					},
					"names": {
						"type": "array",
						"description": "Branded, translated, and/or localized names for this service.",
						"items": {
							"$ref": "#/components/schemas/ProductName"
						}
					},
					"operatingOrgCodes": {
						"type": "array",
						"description": "FOR FEDEX INTERNAL USE ONLY. The operating org code in a service.<br>Example: [\"FXE\", \"FXE\"]",
						"example": [
							"FXE"
						],
						"items": {
							"type": "string"
						}
					},
					"astraDescription": {
						"type": "string",
						"description": "Specifies astra Description.<br>Example: 2 DAY FRT",
						"example": "2 DAY FRT"
					},
					"description": {
						"type": "string",
						"description": "Specifies the description.",
						"example": "description"
					},
					"serviceId": {
						"type": "string",
						"description": "FOR FEDEX INTERNAL USE ONLY, Designates the service ID.<br>Example: EP1000000027",
						"example": "EP1000000027"
					},
					"serviceCategory": {
						"type": "string",
						"description": "FOR FEDEX INTERNAL USE ONLY. This is tied to the Product EFS interface definition which will currently contain the values of parcel.<br>Example: EXPRESS_PARCEL",
						"example": "freight"
					}
				},
				"description": "Descriptions for a service."
			},
			"ProductName": {
				"type": "object",
				"properties": {
					"type": {
						"type": "string",
						"description": "The type of name (long, medium, short, etc.) to which this value refers.<br>Example: long",
						"example": "long"
					},
					"encoding": {
						"type": "string",
						"description": "The character encoding used to represent this product name. <br>Example: UTF-8",
						"example": "UTF-8"
					},
					"value": {
						"type": "string",
						"description": "Specifies the value of the Product.<br>Example: F-2",
						"example": "F-2"
					}
				},
				"description": "Product Name information."
			},
			"CompletedHazardousShipmentDetail": {
				"type": "object",
				"properties": {
					"hazardousSummaryDetail": {
						"$ref": "#/components/schemas/CompletedHazardousSummaryDetail"
					},
					"adrLicense": {
						"$ref": "#/components/schemas/AdrLicenseDetail"
					},
					"dryIceDetail": {
						"$ref": "#/components/schemas/ShipmentDryIceDetail"
					}
				},
				"description": "Completed shipment level hazardous commodity information."
			},
			"CompletedHazardousSummaryDetail": {
				"type": "object",
				"properties": {
					"smallQuantityExceptionPackageCount": {
						"type": "integer",
						"description": "Specifies the total number of packages containing hazardous commodities in small exceptions.<br>Example: 10",
						"format": "int32",
						"example": 10
					}
				},
				"description": "Specifies Completed Hazardous Summary Detail."
			},
			"AdrLicenseDetail": {
				"type": "object",
				"properties": {
					"licenseOrPermitDetail": {
						"$ref": "#/components/schemas/LicenseOrPermitDetail"
					}
				},
				"description": "Specifies the details around the ADR license required for shipping."
			},
			"LicenseOrPermitDetail": {
				"type": "object",
				"properties": {
					"number": {
						"type": "string",
						"description": "Specifies license or permit detail number.<br>Example: 12345",
						"example": "12345"
					},
					"effectiveDate": {
						"type": "string",
						"description": "Specifies the effective date of the license.<br>The format is [YYYY-MM-DD].<br>Example: 2019-08-09",
						"example": "2019-08-09"
					},
					"expirationDate": {
						"type": "string",
						"description": "Specifies the expiration date of the license.<br>The format is [YYYY-MM-DD].<br>Example: 2019-04-09",
						"example": "2019-04-09"
					}
				},
				"description": "This contains the ADR license information, which identifies the license number, the effective date and the expiration date under which the customer is allowed to ship."
			},
			"ShipmentDryIceDetail": {
				"required": [
					"packageCount",
					"totalWeight"
				],
				"type": "object",
				"properties": {
					"totalWeight": {
						"description": "Specify total dry ice weight for the shipment.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Weight"
							}
						]
					},
					"packageCount": {
						"type": "integer",
						"description": "Specifies the package Count for the shipment<br>Example: 10",
						"format": "int32",
						"example": 10
					},
					"processingOptions": {
						"$ref": "#/components/schemas/ShipmentDryIceProcessingOptionsRequested"
					}
				},
				"description": "Specifies the shipment level totals of dry ice data across all packages."
			},
			"ShipmentDryIceProcessingOptionsRequested": {
				"type": "object",
				"properties": {
					"options": {
						"type": "array",
						"description": "Specifies the options.<br>Example: [\"options\"]",
						"example": [
							"options"
						],
						"items": {
							"type": "string"
						}
					}
				},
				"description": "Specify that dry ice information is only applicable at the shipment level. Package level dry ice information would not apply."
			},
			"ShipmentRating": {
				"type": "object",
				"properties": {
					"actualRateType": {
						"type": "string",
						"description": "This rate type identifies which entry in the following array is considered as presenting the \"actual\" rates for the shipment.<br>Example: PAYOR_LIST_SHIPMENT",
						"example": "PAYOR_LIST_SHIPMENT"
					},
					"shipmentRateDetails": {
						"type": "array",
						"description": "Each element of this field provides shipment-level rate totals for a specific rate type.",
						"items": {
							"$ref": "#/components/schemas/ShipmentRateDetail"
						}
					}
				},
				"description": "All shipment-level rating data for this shipment, which may include data for multiple rate types."
			},
			"ShipmentRateDetail": {
				"type": "object",
				"properties": {
					"rateZone": {
						"type": "string",
						"description": "Indicates the rate zone used (based on origin and destination).<br>Example: US001O",
						"example": "US001O"
					},
					"ratedWeightMethod": {
						"type": "string",
						"description": "Indicates which weight was used.<br>Example: ACTUAL",
						"example": "ACTUAL"
					},
					"totalDutiesTaxesAndFees": {
						"type": "number",
						"description": "The total of the total duties & taxes and the total ancillary fees & taxes.<br>Example: 24.56",
						"format": "double",
						"example": 24.56
					},
					"pricingCode": {
						"type": "string",
						"description": "Specifies pricing Code.<br>Example: PACKAGE",
						"example": "LTL_FREIGHT"
					},
					"totalFreightDiscounts": {
						"type": "number",
						"description": "The total discounts used in the rate calculation.<br>Example: 1.56",
						"format": "double",
						"example": 1.56
					},
					"totalTaxes": {
						"type": "number",
						"description": "Total of the transportation-based taxes.<br>Example: 3.45",
						"format": "double",
						"example": 3.45
					},
					"totalDutiesAndTaxes": {
						"type": "number",
						"description": "Total of all values under this shipment's duties and taxes; only provided if estimated duties and taxes were calculated for this shipment.<br>Example: 6.78",
						"format": "double",
						"example": 6.78
					},
					"totalAncillaryFeesAndTaxes": {
						"type": "number",
						"description": "Identifies the total amount of the shipment-level fees and taxes that are not based on transportation charges or commodity-level estimated duties and taxes.<br>Example: 5.67",
						"format": "double",
						"example": 5.67
					},
					"taxes": {
						"type": "array",
						"description": "All transportation-based taxes applicable to this shipment.",
						"items": {
							"allOf": [
								{
									"$ref": "#/components/schemas/Tax"
								}
							]
						}
					},
					"totalRebates": {
						"type": "number",
						"description": "The total sum of all rebates applied to this shipment.<br>Example: 1.98",
						"format": "double",
						"example": 1.98
					},
					"fuelSurchargePercent": {
						"type": "number",
						"description": "Specifies a fuel surcharge percentage.<br>Example: 4.56",
						"format": "double",
						"example": 4.56
					},
					"currencyExchangeRate": {
						"$ref": "#/components/schemas/CurrencyExchangeRate"
					},
					"totalNetFreight": {
						"type": "number",
						"description": "The freight charge minus discounts.<br>Example: 9.56",
						"format": "double",
						"example": 9.56
					},
					"totalNetFedExCharge": {
						"type": "number",
						"description": "This is the sum of shipment's total net freight, total surchages (not including totalTaxes).<br>Example: 88.56",
						"format": "double",
						"example": 88.56
					},
					"shipmentLegRateDetails": {
						"type": "array",
						"description": "This is data for a single leg of a shipment's total/summary rates, as calculated per a specific rate type.",
						"items": {
							"$ref": "#/components/schemas/ShipmentLegRateDetail"
						}
					},
					"dimDivisor": {
						"type": "integer",
						"description": "The value used to calculate the weight based on the dimensions.<br>Example: 0",
						"format": "int32",
						"example": 0
					},
					"rateType": {
						"type": "string",
						"description": "The Type used for this specific set of rate data.<br>Example: RATED_ACCOUNT_SHIPMENT",
						"example": "RATED_ACCOUNT_SHIPMENT"
					},
					"surcharges": {
						"type": "array",
						"description": "All surcharges that apply to this shipment.<br><a onclick='loadDocReference(\"surcharges\")'>click here to see Surcharges</a>",
						"items": {
							"$ref": "#/components/schemas/Surcharge"
						}
					},
					"totalSurcharges": {
						"type": "number",
						"description": "The total amount of all surcharges applied to this shipment.<br>Example: 9.88",
						"format": "double",
						"example": 9.88
					},
					"totalBillingWeight": {
						"description": "The weight used to calculate these rates.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Weight"
							}
						]
					},
					"freightDiscounts": {
						"type": "array",
						"description": "Indicates the freight discounts.",
						"items": {
							"$ref": "#/components/schemas/RateDiscount"
						}
					},
					"rateScale": {
						"type": "string",
						"description": "Indicates the rate scale used.<br>Example: 00000",
						"example": "00000"
					},
					"totalNetCharge": {
						"type": "number",
						"description": "The net charge after applying all discounts and surcharges.<br>Example: 3.78",
						"format": "double",
						"example": 3.78
					},
					"totalBaseCharge": {
						"type": "number",
						"description": "The total Shipment charge that was calculated before surcharges, discounts and taxes.<br>Example: 234.56",
						"format": "double",
						"example": 234.56
					},
					"totalNetChargeWithDutiesAndTaxes": {
						"type": "number",
						"description": "This is the sum of shipment's total net charges and total duties and taxes; only provided if estimated duties and taxes were calculated for this shipment AND duties, taxes and transportation charges are all paid by the same sender account.<br>Example: 222.56",
						"format": "double",
						"example": 222.56
					},
					"currency": {
						"type": "string",
						"description": "Indicates the currency code.<br><a onclick='loadDocReference(\"currencycodes\")'>click here to see Currency Codes</a>",
						"example": "USD"
					}
				},
				"description": "This is a placeholder for shipment total/summary rates details, as calculated per a specific rate type. The totals may differ from the sum of corresponding package data for Multiweight or Express MPS."
			},
			"Tax": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "number",
						"description": "Indicates the amount of tax.<br>Example: 10.0",
						"format": "double",
						"example": 10
					},
					"level": {
						"type": "string",
						"description": "Indicates the level of tax.",
						"example": "level"
					},
					"description": {
						"type": "string",
						"description": "Specifies the tax description.",
						"example": "description"
					},
					"type": {
						"type": "string",
						"description": "Specifies the type of the tax.",
						"example": "type"
					}
				},
				"description": "Specifies the tax for the shipment."
			},
			"CurrencyExchangeRate": {
				"type": "object",
				"properties": {
					"rate": {
						"type": "number",
						"description": "Multiplier used to convert from Currency units to into Currency units.<br>Example: 25.6",
						"format": "double",
						"example": 25.6
					},
					"fromCurrency": {
						"type": "string",
						"description": "The currency code for the original (converted FROM) currency.<br>Example: Rupee<br><a onclick='loadDocReference(\"currencycodes\")'>click here to see Currency codes</a>",
						"example": "Rupee"
					},
					"intoCurrency": {
						"type": "string",
						"description": "The currency code for the final(converted INTO) currency.<br>Example: USD<br><a onclick='loadDocReference(\"currencycodes\")'>click here to see currencycodes</a>",
						"example": "USD"
					}
				},
				"description": "Specifies the currency exchange performed on financial amounts on this rate."
			},
			"ShipmentLegRateDetail": {
				"type": "object",
				"properties": {
					"rateZone": {
						"type": "string",
						"description": "Indicates the rate zone used (based on origin and destination).<br>Example: rateZone",
						"example": "rateZone"
					},
					"pricingCode": {
						"type": "string",
						"description": "Specifies the Pricing Code.<br>Example: pricingCode",
						"example": "pricingCode"
					},
					"taxes": {
						"type": "array",
						"description": "Specifies the taxes.",
						"items": {
							"$ref": "#/components/schemas/Tax"
						}
					},
					"totalDimWeight": {
						"description": "Sum of dimensional weights for all packages.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Weight"
							}
						]
					},
					"totalRebates": {
						"type": "number",
						"description": "Specifies the total rebate.<br>Example: 2.0",
						"format": "double",
						"example": 2
					},
					"fuelSurchargePercent": {
						"type": "number",
						"description": "Specifies a fuel surcharge percentage.<br>Example: 6.0",
						"format": "double",
						"example": 6
					},
					"currencyExchangeRate": {
						"description": "Specifies currency exchange rate.",
						"allOf": [
							{
								"$ref": "#/components/schemas/CurrencyExchangeRate"
							}
						]
					},
					"dimDivisor": {
						"type": "integer",
						"description": "The value used to calculate the weight based on the dimensions.<br>Example: 6",
						"format": "int32",
						"example": 6
					},
					"rateType": {
						"type": "string",
						"description": "Type used for this specific set of rate data.<br>Example: PAYOR_RETAIL_PACKAGE",
						"example": "PAYOR_RETAIL_PACKAGE"
					},
					"legDestinationLocationId": {
						"type": "string",
						"description": "Specifies the location id the destination of shipment leg.<br>Example: HKAA",
						"example": "legDestinationLocationId"
					},
					"dimDivisorType": {
						"type": "string",
						"description": "Identifies the type of dim divisor that was applied.<br>Example: dimDivisorType",
						"example": "dimDivisorType"
					},
					"totalBaseCharge": {
						"type": "number",
						"description": "The total freight charge that was calculated before surcharges, discounts and taxes.<br>Example: 6.0",
						"format": "double",
						"example": 6
					},
					"ratedWeightMethod": {
						"type": "string",
						"description": "Indicates which weight was used.<br>Example: ratedWeightMethod",
						"example": "ratedWeightMethod"
					},
					"totalFreightDiscounts": {
						"type": "number",
						"description": "The sum of all discounts.<br>Example: 9.0",
						"format": "double",
						"example": 9
					},
					"totalTaxes": {
						"type": "number",
						"description": "Total of the transportation-based taxes.<br>Example: 12.6",
						"format": "double",
						"example": 12.6
					},
					"minimumChargeType": {
						"type": "string",
						"description": "Specifies minimum charge type.",
						"example": "minimumChargeType"
					},
					"totalDutiesAndTaxes": {
						"type": "number",
						"description": "Total of shipments duties and taxes; only provided if estimated duties and taxes were calculated for this shipment.<br>Example: 17.78",
						"format": "double",
						"example": 17.78
					},
					"totalNetFreight": {
						"type": "number",
						"description": "The freight charge minus discounts.<br>Example: 6.0",
						"format": "double",
						"example": 6
					},
					"totalNetFedExCharge": {
						"type": "number",
						"description": "This is the sum of shipment's total surcharges (not including total taxes).<br>Example: 3.2",
						"format": "double",
						"example": 3.2
					},
					"surcharges": {
						"type": "array",
						"description": "All surcharges that apply to this shipment.<br><a onclick='loadDocReference(\"surcharges\")'>click here to see surcharges</a>",
						"items": {
							"$ref": "#/components/schemas/Surcharge"
						}
					},
					"totalSurcharges": {
						"type": "number",
						"description": "The total of all surcharges.<br>Example: 5.0",
						"format": "double",
						"example": 5
					},
					"totalBillingWeight": {
						"description": "The weight used to calculate these rates.",
						"allOf": [
							{
								"$ref": "#/components/schemas/Weight"
							}
						]
					},
					"freightDiscounts": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/RateDiscount"
						}
					},
					"rateScale": {
						"type": "string",
						"description": "Indicates the rate scale used.<br>Example: 6702",
						"example": "6702"
					},
					"totalNetCharge": {
						"type": "number",
						"description": "The net charge after applying all discounts and surcharges.<br>Example: 253",
						"format": "double",
						"example": 253
					},
					"totalNetChargeWithDutiesAndTaxes": {
						"type": "number",
						"description": "Sum of total net charge, total duties and taxes; only provided if estimated duties and taxes were calculated for this shipment and duties, taxes and transportation charges are all paid by the same sender account.<br>Example: 25.67",
						"format": "double",
						"example": 25.67
					},
					"currency": {
						"type": "string",
						"description": "This is the currency code for the amount.<br>Example: USD<br><a onclick='loadDocReference(\"currencycodes\")'>click here to see Currency codes</a>",
						"example": "USD"
					}
				},
				"description": "This is a placeholder for single leg of a shipment rates details, as calculated per a specific rate type."
			},
			"RateDiscount": {
				"type": "object",
				"properties": {
					"amount": {
						"type": "number",
						"description": "Specifies the amount.<br>Example: 8.9",
						"format": "double",
						"example": 8.9
					},
					"rateDiscountType": {
						"type": "string",
						"description": "The type of rate discount. <br/> Valid Values are BONUS, COUPON,EARNED,OTHER,VOLUME.<br>Example: COUPON",
						"example": "COUPON"
					},
					"percent": {
						"type": "number",
						"description": "Specifies the percentage of Rate discount.<br>Example: 28.9",
						"format": "double",
						"example": 28.9
					},
					"description": {
						"type": "string",
						"description": "Specifies the description of the discounted rate.<br>Example: description",
						"example": "description"
					}
				},
				"description": "Specifies discount Rate for Shipment."
			},
			"DocumentRequirementsDetail": {
				"type": "object",
				"properties": {
					"requiredDocuments": {
						"type": "array",
						"description": "Indicates the required documents information.<br>Example: [\"COMMERCIAL_OR_PRO_FORMA_INVOICE\",\"AIR_WAYBILL\"]",
						"example": [
							"COMMERCIAL_OR_PRO_FORMA_INVOICE",
							"AIR_WAYBILL"
						],
						"items": {
							"type": "string"
						}
					},
					"prohibitedDocuments": {
						"type": "array",
						"description": "Indicates the prohibited Documents info.<br>Example: [\"CERTIFICATE_OF_ORIGIN \"]",
						"example": [
							"CERTIFICATE_OF_ORIGIN"
						],
						"items": {
							"type": "string"
						}
					},
					"generationDetails": {
						"type": "array",
						"description": "Specifies the generation details.",
						"items": {
							"$ref": "#/components/schemas/DocumentGenerationDetail"
						}
					}
				},
				"description": "Indicates the document requirements detail."
			},
			"DocumentGenerationDetail": {
				"type": "object",
				"properties": {
					"letterhead": {
						"type": "string",
						"description": "Indicates the letterhead requirement type.<br>Example: OPTIONAL"
					},
					"electronicSignature": {
						"type": "string",
						"description": "Indicates electronic signature requirement type.<br>Example:  OPTIONAL"
					},
					"minimumCopiesRequired": {
						"type": "integer",
						"description": "It is a non-Negative Integer.<br>Example: 3",
						"format": "int32"
					},
					"type": {
						"type": "string",
						"description": "It is an Enterprise Document Type.<br>Example: COMMERCIAL_INVOICE"
					}
				},
				"description": "Indicates the document generation detail information.",
				"example": {
					"type": "COMMERCIAL_INVOICE",
					"minimumCopiesRequired": 3,
					"letterhead": "OPTIONAL",
					"electronicSignature": "OPTIONAL"
				}
			},
			"PendingShipmentAccessDetail": {
				"type": "object",
				"properties": {
					"accessorDetails": {
						"type": "array",
						"description": "Indicates the details about the users who can access the shipment.",
						"items": {
							"$ref": "#/components/schemas/PendingShipmentAccessorDetail"
						}
					}
				},
				"description": "This information describes how and when a online email return label shipment may be accessed for completion."
			},
			"PendingShipmentAccessorDetail": {
				"type": "object",
				"properties": {
					"password": {
						"type": "string",
						"description": "Specifies the accessor password.<br>Example: password",
						"example": "password"
					},
					"role": {
						"type": "string",
						"description": "Specifies the accessor role.<br>Example: role",
						"example": "role"
					},
					"emailLabelUrl": {
						"type": "string",
						"description": "Specifies the URL for the email label.<br>Example: emailLabelUrl",
						"example": "emailLabelUrl"
					},
					"userId": {
						"type": "string",
						"description": "Specifies the accessor User ID.<br>Example: userId",
						"example": "userId"
					}
				},
				"description": "Specifies details for how to access the pending email return label."
			},
			"ShipmentAdvisoryDetails": {
				"type": "object",
				"properties": {
					"regulatoryAdvisory": {
						"$ref": "#/components/schemas/RegulatoryAdvisoryDetail"
					}
				},
				"description": "These are shipment advisory details."
			},
			"RegulatoryAdvisoryDetail": {
				"type": "object",
				"properties": {
					"prohibitions": {
						"type": "array",
						"description": "It is a regulatory probitions.",
						"items": {
							"$ref": "#/components/schemas/RegulatoryProhibition"
						}
					}
				},
				"description": "Indicates the regulatory advisory details."
			},
			"SuggestedCommodityDetail": {
				"type": "object",
				"properties": {
					"description": {
						"type": "string",
						"description": "This is a suggested commodity description.<br>Example: Commodity",
						"example": "description"
					},
					"harmonizedCode": {
						"type": "string",
						"description": "Specify the harmonized code.<br>Example: XXX12",
						"example": "harmonized Code"
					}
				}
			},
			"RegulatoryProhibition": {
				"type": "object",
				"properties": {
					"derivedHarmonizedCode": {
						"type": "string",
						"description": "Indicates the derived harmonized code value<br>Example: 01",
						"example": "01"
					},
					"advisory": {
						"$ref": "#/components/schemas/Message"
					},
					"commodityIndex": {
						"type": "integer",
						"description": "Indicates one based index identifying the associated commodity.<br>Example: 12",
						"format": "int32",
						"example": 12
					},
					"source": {
						"type": "string",
						"description": "Indicates the prohibition source type.<br>Example: source",
						"example": "source"
					},
					"categories": {
						"type": "array",
						"description": "Indicate the shipment rule type.<br>Example: [\"categories\"]",
						"example": [
							"categories"
						],
						"items": {
							"type": "string"
						}
					},
					"type": {
						"type": "string",
						"description": "Indicates the prohibition type.<br>Example: type",
						"example": "type"
					},
					"waiver": {
						"$ref": "#/components/schemas/RegulatoryWaiver"
					},
					"status": {
						"type": "string",
						"description": "Indicates the prohibitory status.<br>Example: status",
						"example": "status"
					}
				}
			},
			"Message": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Specifies the message code for the tag created.<br>Example: code",
						"example": "code"
					},
					"text": {
						"type": "string",
						"description": "Specifies the text message for the tag created.<br>Example: Text",
						"example": "Text"
					},
					"parameters": {
						"type": "array",
						"description": "Specifies the message parameters list.",
						"items": {
							"$ref": "#/components/schemas/MessageParameter"
						}
					},
					"localizedText": {
						"type": "string",
						"description": "Specifies the message ID and value.<br>Example: localizedText",
						"example": "localizedText"
					}
				},
				"description": "Specifies the advisory details."
			},
			"MessageParameter": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "Specifies the message parameter code.<br>Example: message ID",
						"example": "message ID"
					},
					"value": {
						"type": "string",
						"description": "Specifies the message parameter value of the code.<br>Example: value",
						"example": "Message value"
					}
				}
			},
			"RegulatoryWaiver": {
				"type": "object",
				"properties": {
					"advisories": {
						"type": "array",
						"description": "Indicates the advisories list.",
						"items": {
							"$ref": "#/components/schemas/Message"
						}
					},
					"description": {
						"type": "string",
						"description": "Indicates the regulatory prohibitions description.<br>Example: description",
						"example": "description"
					},
					"id": {
						"type": "string",
						"description": "Indicates the prohibitory ID.<br>Example: id",
						"example": "id"
					}
				},
				"description": "Indicates the regulatory waiver."
			},
			"ErrorResponseVO": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError"
						}
					}
				}
			},
			"CXSError": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: SHIPMENT.USER.UNAUTHORIZED"
					},
					"parameterList": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"type": "string",
						"description": "Indicates the description of API error alert message.<br>Example: Requested user is not authorized to perform the operation."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"Parameter": {
				"type": "object",
				"properties": {
					"value": {
						"type": "string",
						"description": "Identifies the error option to be applied."
					},
					"key": {
						"type": "string",
						"description": "Indicates the value associated with the key."
					}
				},
				"description": "List of parameters which indicates the properties of the alert message."
			},
			"ErrorResponseVO401": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError401"
						}
					}
				}
			},
			"CXSError401": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: NOT.AUTHORIZED.ERROR"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"description": "Indicates the description of API error alert message.<br>Example: Access token expired. Please modify your request and try again."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"ErrorResponseVO403": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError403"
						}
					}
				}
			},
			"CXSError403": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: FORBIDDEN.ERROR"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"description": "Indicates the description of API error alert message.<br>Example: We could not authorize your credentials. Please check your permissions and try again"
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"ErrorResponseVO404": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError404"
						}
					}
				}
			},
			"CXSError404": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: NOT.FOUND.ERROR"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"description": "Indicates the description of API error alert message.<br>Example: The resource you requested is no longer available. Please modify your request and try again."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"ErrorResponseVO500": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError500"
						}
					}
				}
			},
			"CXSError500": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: INTERNAL.SERVER.ERROR"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"description": "Indicates the description of API error alert message.<br>Example: We encountered an unexpected error and are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"ErrorResponseVO503": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError503"
						}
					}
				}
			},
			"CXSError503": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: SERVICE.UNAVAILABLE.ERROR"
					},
					"parameterList": {
						"type": "array",
						"description": "Specifies list of parameters.",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"description": "Indicates the description of API error alert message.<br>Example: The service is currently unavailable and we are working to resolve the issue. We apologize for any inconvenience. Please check back at a later time."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"Full_Schema_Cancel_Shipment": {
				"required": [
					"accountNumber",
					"trackingNumber"
				],
				"type": "object",
				"properties": {
					"accountNumber": {
						"description": "The account number (account value) associated with the shipment.",
						"allOf": [
							{
								"$ref": "#/components/schemas/ShipperAccountNumber"
							}
						]
					},
					"emailShipment": {
						"description": "A boolean flag passed by Clients to indicate that whether a shipment is a EMAIL shipment(Pending Shipment) or not. Once a shipment is confirmed, it can no longer be cancelled by having this flag as True.",
						"type": "boolean",
						"example": "false"
					},
					"senderCountryCode": {
						"type": "string",
						"description": "The two-letter sender Country code(Ex: US, CA, GB..etc).<br>Example: US<br><a onclick='loadDocReference(\"countrycodes\")'>Click here to see Country Codes</a>",
						"example": "US"
					},
					"deletionControl": {
						"type": "string",
						"description": "Specifies which packages in a shipment to be canceled<b>DELETE_ALL_PACKAGES</b> which will cancel all tracking numbers associated to the shipment.",
						"example": "DELETE_ALL_PACKAGES",
						"enum": [
							"DELETE_ALL_PACKAGES"
						]
					},
					"trackingNumber": {
						"type": "string",
						"description": "This is an unique number assigned by FedEx to the packages for tracking.<br>Example: \"794953555571\"",
						"example": "794953555571"
					}
				},
				"description": "The request elements required to cancel a shipment. "
			},
			"SHPCResponseVO_CancelShipment": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"output": {
						"$ref": "#/components/schemas/BaseProcessOutputVO_CancelShipment"
					}
				},
				"description": "This is a wrapper class for outputVO"
			},
			"BaseProcessOutputVO_CancelShipment": {
				"$ref": "#/components/schemas/CancelShipmentOutputVO"
			},
			"CancelShipmentOutputVO": {
				"type": "object",
				"properties": {
					"cancelledShipment": {
						"type": "boolean",
						"description": "Indicates whether the shipment has been cancelled or not. If the value is True, then it indicates that the shipment has been cancelled.<br>Example: true",
						"example": true
					},
					"cancelledHistory": {
						"type": "boolean",
						"description": "Indicates whether the shipment has been deleted from history or not. If the value is True, then it indicates that the shipment has been deleted.<br>Example: true",
						"example": true
					},
					"successMessage": {
						"type": "string",
						"description": "The success message generated during cancellation request for Shipment.<br>Example: Success",
						"example": "Success"
					},
					"alerts": {
						"type": "array",
						"description": "This is a cancellation request alert. This alert includes information such as alert code, alert type, and alert message.",
						"items": {
							"$ref": "#/components/schemas/Alert"
						}
					}
				},
				"description": "The response elements received when a shipment is cancelled."
			},
			"ErrorResponseVO_2": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError_2"
						}
					}
				}
			},
			"CXSError_2": {
				"type": "object",
				"properties": {
					"code": {
						"type": "string",
						"description": "Indicates the error code.<br>Example: SHIPMENT.USER.UNAUTHORIZED"
					},
					"parameterList": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Parameter"
						}
					},
					"message": {
						"type": "string",
						"description": "Indicates the description of API error alert message.<br>Example: Requested user is not authorized to perform the operation."
					}
				},
				"description": "Indicates error alert when suspicious files, potential exploits and viruses found while scanning files , directories and user accounts. This includes code, message and parameter"
			},
			"ErrorResponseVO401_2": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError401"
						}
					}
				}
			},
			"ErrorResponseVO403_2": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError403"
						}
					}
				}
			},
			"ErrorResponseVO404_2": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError404"
						}
					}
				}
			},
			"ErrorResponseVO500_2": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError500"
						}
					}
				}
			},
			"ErrorResponseVO503_2": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CXSError503"
						}
					}
				}
			},
			"FullSchema-getConfirmedShipmentAsyncResults": {
				"required": [
					"accountNumber",
					"jobId"
				],
				"type": "object",
				"properties": {
					"accountNumber": {
						"$ref": "#/components/schemas/AccountNumber"
					},
					"jobId": {
						"type": "string",
						"description": "Indicates the job under which the deferred shipment artifacts must be identified in the subsequent retrieval request. <br> Example: 89sxxxxx233ae24ff31xxxxx",
						"example": "89sxxxxx233ae24ff31xxxxx"
					}
				}
			},
			"AccountNumber": {
				"$ref": "#/components/schemas/PartyAccountNumber"
			},
			"SHPCResponseVO_GetOpenShipmentResults": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624xxxxx-b709-470c-8c39-4b55112xxxxx",
						"example": "624xxxxx-b709-470c-8c39-4b55112xxxxx"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This is a unique identifier to your transaction and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"output": {
						"allOf": [
							{
								"description": "This is the output response."
							},
							{
								"$ref": "#/components/schemas/BaseProcessOutputVO_GetOpenShipmentResults"
							}
						]
					}
				},
				"description": "Wrapper class for GetOpenshipmentResultsOutputVo. It holds transactionId and output."
			},
			"BaseProcessOutputVO_GetOpenShipmentResults": {
				"$ref": "#/components/schemas/GetOpenShipmentResultsOutputVO"
			},
			"GetOpenShipmentResultsOutputVO": {
				"type": "object",
				"properties": {
					"transactionShipments": {
						"type": "array",
						"description": "These are shipping transaction details, such as master tracking number, service type, and ship date and time.",
						"items": {
							"$ref": "#/components/schemas/TransactionShipmentOutputVO"
						}
					},
					"alerts": {
						"type": "array",
						"description": "object indicate the alert details received in the output.",
						"items": {
							"$ref": "#/components/schemas/Alert"
						}
					}
				}
			},
			"FullSchema-VerifyShipment": {
				"required": [
					"requestedShipment"
				],
				"type": "object",
				"properties": {
					"requestedShipment": {
						"$ref": "#/components/schemas/RequestedShipmentVerify"
					},
					"accountNumber": {
						"$ref": "#/components/schemas/ShipperAccountNumber"
					}
				},
				"description": "The request elements required to create a shipment."
			},
			"RequestedShipmentVerify": {
				"required": [
					"labelSpecification",
					"packagingType",
					"pickupType",
					"recipients",
					"requestedPackageLineItems",
					"serviceType",
					"shipper",
					"shippingChargesPayment"
				],
				"type": "object",
				"properties": {
					"shipDatestamp": {
						"type": "string",
						"description": "Indicate the shipment date.<br>Format: YYYY-MM-DD<br>Note: Default value is current date in case the date is not provided in the request.<br>Example: 2021-04-06",
						"example": "2019-10-14"
					},
					"pickupType": {
						"type": "string",
						"description": "Select if the shipment is to be dropped off at Fedex location or to be picked up by FedEx or if it is a scheduled pickup for this shipment.<br><a onclick='loadDocReference(\"pickuptypes\")'>Click here for more information on Pickup Types.</a>",
						"example": "USE_SCHEDULED_PICKUP",
						"enum": [
							"CONTACT_FEDEX TO_SCHEDULE",
							"DROPOFF_AT_FEDEX_LOCATION",
							"USE_SCHEDULED_PICKUP"
						]
					},
					"serviceType": {
						"type": "string",
						"description": "Indicate the FedEx service Type used for this shipment.<br>Example: STANDARD_OVERNIGHT<br><a onclick='loadDocReference(\"servicetypes\")'>click here to see available FedEx Service Types</a>",
						"example": "PRIORITY_OVERNIGHT"
					},
					"packagingType": {
						"type": "string",
						"description": "Indicate the type of packaging used for the package.<br>Note: For Express Freight shipments, the packaging will default to value  YOUR_PACKAGING irrespective type provided in the request.<br>Example: FEDEX_ENVELOPE<br><a onclick='loadDocReference(\"packagetypes\")'>click here to see Package Types</a>",
						"example": "YOUR_PACKAGING"
					},
					"totalWeight": {
						"type": "integer",
						"description": "shipment total weight should be in Kg or in Lbs",
						"format": "int32",
						"example": 20
					},
					"shipper": {
						"description": "Indicate shippers details. <br>Note: Shipper address and Origin address should be the same address.",
						"example": {
							"address": {
								"streetLines": [
									"10 FedEx Parkway",
									"Suite 302"
								],
								"city": "Beverly Hills",
								"stateOrProvinceCode": "CA",
								"postalCode": "90210",
								"countryCode": "US",
								"residential": false
							},
							"contact": {
								"personName": "John Taylor",
								"emailAddress": "sample@company.com",
								"phoneExtension": "91",
								"phoneNumber": "1234567890",
								"companyName": "Fedex"
							},
							"tins": [
								{
									"number": "123567",
									"tinType": "FEDERAL",
									"usage": "usage",
									"effectiveDate": "2000-01-23T04:56:07.000+00:00",
									"expirationDate": "2000-01-23T04:56:07.000+00:00"
								}
							]
						},
						"allOf": [
							{
								"$ref": "#/components/schemas/ShipperParty"
							}
						]
					},
					"recipients": {
						"type": "array",
						"description": "Indicate the shipment recipient details or the physical location details for the package destination.",
						"items": {
							"$ref": "#/components/schemas/RecipientsParty"
						}
					},
					"origin": {
						"description": "Indicate the shipment origin address information, if it is different from the shippers address.",
						"allOf": [
							{
								"$ref": "#/components/schemas/ContactAndAddress_Verify"
							}
						]
					},
					"shippingChargesPayment": {
						"$ref": "#/components/schemas/Payment"
					},
					"shipmentSpecialServices": {
						"$ref": "#/components/schemas/RequestedShipmentVerify_shipmentSpecialServices"
					},
					"emailNotificationDetail": {
						"$ref": "#/components/schemas/EMailNotificationDetail"
					},
					"variableHandlingChargeDetail": {
						"$ref": "#/components/schemas/VariableHandlingChargeDetail"
					},
					"customsClearanceDetail": {
						"$ref": "#/components/schemas/CustomsClearanceDetail"
					},
					"smartPostInfoDetail": {
						"$ref": "#/components/schemas/SmartPostInfoDetail"
					},
					"blockInsightVisibility": {
						"type": "boolean",
						"description": "Indicate if the shipment be available to be visible/tracked using FedEx InSight® tool. If value indicated as true, only the shipper/payer will have visibility of this shipment in the said tool.",
						"example": true
					},
					"labelSpecification": {
						"$ref": "#/components/schemas/LabelSpecification"
					},
					"shippingDocumentSpecification": {
						"$ref": "#/components/schemas/ShippingDocumentSpecification"
					},
					"rateRequestType": {
						"type": "array",
						"description": "Indicate the type of rates to be returned.<br>Following are values:<ul><li>LIST - Returns published list rates will be returned in addition to account-specific rate (if applicable).</li><li>PREFERRED - It returns rates in currency as specified in the PreferredCurrency element.</li><li>ACCOUNT - Returns account specific rates. Note: The account specific rates are returned by default if the shipper account number is specified in the shipment.</li><li>INCENTIVE - This is one-time discount for incentivizing the customer.</li></ul>Examples: [\"ACCOUNT\", \"PREFERRED\"] ",
						"example": [
							"LIST",
							"PREFERRED"
						],
						"items": {
							"type": "string",
							"enum": [
								"LIST",
								"NONE",
								"PREFERRED",
								"ACCOUNT",
								"INCENTIVE",
								"RETAIL"
							]
						}
					},
					"preferredCurrency": {
						"type": "string",
						"description": "Indicate the currency the caller requests to have used in all returned monetary values. Should be Used in conjunction with the element RateRequestType.<br>Example: USD<br><a onclick='loadDocReference(\"currencycodes\")'>click here to see available Currency codes</a><br>Note: Incorrect currency codes should not be supplied. The system ignores the incorrect currency code.",
						"example": "USD"
					},
					"requestedPackageLineItems": {
						"type": "array",
						"description": "Use this object to provide the package details.<br>Note: <ul><li>At least one instance containing the weight is required for EXPRESS and GROUND package.</li><li>Only Single piece requests are supported henceonly one line item should be provided.</li><li>Multiple piece shipment validation is not supported.</li></ul>",
						"items": {
							"$ref": "#/components/schemas/RequestedPackageLineItem"
						}
					}
				},
				"description": "This is the detailed shipment request data to be validated before being submitted to FedEx."
			},
			"ContactAndAddress_Verify": {
				"type": "object",
				"properties": {
					"contact": {
						"$ref": "#/components/schemas/Contact_verify"
					},
					"address": {
						"$ref": "#/components/schemas/Address_1"
					}
				},
				"description": "Specifies the contact and address details of a location.",
				"example": {
					"address": {
						"streetLines": [
							"10 FedEx Parkway",
							"Suite 302"
						],
						"city": "Beverly Hills",
						"stateOrProvinceCode": "CA",
						"postalCode": "38127",
						"countryCode": "US",
						"residential": false
					},
					"contact": {
						"personName": "person name",
						"emailAddress": "email address",
						"phoneNumber": "phone number",
						"phoneExtension": "phone extension",
						"companyName": "company name",
						"faxNumber": "fax number"
					}
				}
			},
			"Contact_verify": {
				"type": "object",
				"properties": {
					"personName": {
						"type": "string",
						"description": "Specify contact person name.<br>Recommended length is 70.<br>Note: There's no specific validation for the person name.<br> Example: John Taylor",
						"example": "John Taylor"
					},
					"emailAddress": {
						"type": "string",
						"description": "Specify contact email address. Maximum length is 80. <br> Example: sample@company.com",
						"example": "sample@company.com"
					},
					"phoneNumber": {
						"type": "string",
						"description": "Specify contact phone number. <br>Minimum length is 10 and supports maximum of 15 for certain countries using longer phone numbers. <br>Note: Recommended Maximum length is 15 and there's no specific validation will be done for the phone number. <br> Example: 918xxxxx890",
						"example": "1234567890"
					},
					"phoneExtension": {
						"type": "string",
						"description": "Specify contact phone extension. <br>Note: Recommended length is 6. There's no specific validation for the phone extension. <br> Example: 1234",
						"example": "91"
					},
					"faxNumber": {
						"type": "string",
						"description": "Specify contact fax number.<br>Note: Recommended length is 15. There's no specific validation for the fax number.<br> Example: 1234567890",
						"example": "956123"
					},
					"companyName": {
						"type": "string",
						"description": "Specify contact company name.<br>Recommended length is 35.<br>Note: There's no specific validation for the company name.",
						"example": "Fedex"
					}
				},
				"description": "Indicate the contact details of the shipper.",
				"example": {
					"personName": "John Taylor",
					"emailAddress": "sample@company.com",
					"phoneNumber": "1234567890",
					"phoneExtension": 1234,
					"faxNumber": "1234567890",
					"companyName": "Fedex"
				}
			},
			"EMailNotificationDetail": {
				"type": "object",
				"properties": {
					"aggregationType": {
						"type": "string",
						"description": "Indicate the shipment notification aggregation type.",
						"example": "PER_PACKAGE",
						"enum": [
							"PER_PACKAGE",
							"PER_SHIPMENT"
						]
					},
					"emailNotificationRecipients": {
						"type": "array",
						"description": "These are email notification recipient details.",
						"items": {
							"$ref": "#/components/schemas/EmailNotificationRecipient"
						}
					},
					"personalMessage": {
						"type": "string",
						"description": "This is your personal message for the email.<br>Note: The maximum personal message character limit depends on the element emailNotificationDetail\\emailNotificationRecipients\\notificationFormatType values:<ul><li>If notificationFormatType is TEXT, then only 120 characters printed on the email</li><li>If notificationFormatType is HTML, then 500 characters printed on the email</li></ul><br>Example: This is concerning the order 123456 of 26 July 2021 - art no 34324-23 Teddy Bear, brown",
						"example": "your personal message here"
					}
				},
				"description": "These are email disposition details. Provides the type and email addresses of e-mail recipients. If returnedDispositionDetail in labelSpecification is set as true then email will be send with label and documents copy."
			},
			"EmailNotificationRecipient": {
				"required": [
					"emailNotificationRecipientType"
				],
				"type": "object",
				"properties": {
					"name": {
						"type": "string",
						"description": "Specify the recipient name.<br>Example: Joe Smith",
						"example": "Joe Smith"
					},
					"emailNotificationRecipientType": {
						"type": "string",
						"description": "Specify the recipient type for email notification.",
						"example": "SHIPPER",
						"enum": [
							"BROKER",
							"OTHER",
							"RECIPIENT",
							"SHIPPER",
							"THIRD_PARTY"
						]
					},
					"emailAddress": {
						"type": "string",
						"description": "Specify the recipient email address.<br>Example: xyz@aol.com",
						"example": "jsmith3@aol.com"
					},
					"notificationFormatType": {
						"type": "string",
						"description": "This is the format for the email notification. Either HTML or plain text can be provided.",
						"example": "TEXT",
						"enum": [
							"HTML",
							"TEXT"
						]
					},
					"notificationType": {
						"type": "string",
						"description": "Indicate the type of notification that will be sent as an email.",
						"example": "EMAIL",
						"enum": [
							"EMAIL"
						]
					},
					"locale": {
						"type": "string",
						"description": "These are the locale details for email.<br><a onclick='loadDocReference(\"locales\")'>click here to see Locales</a><br>Note: If the locale is left blank or an invalid locale is entered, an error message is returned in response.",
						"example": "en_US"
					},
					"notificationEventType": {
						"type": "array",
						"description": "Specify notification event types.<br><a onclick='loadDocReference(\"notificationeventtypes\")'>Click here for more information on Notification Event Types.</a>",
						"example": [
							"ON_PICKUP_DRIVER_ARRIVED",
							"ON_SHIPMENT"
						],
						"items": {
							"type": "string",
							"enum": [
								"ON_DELIVERY",
								"ON_EXCEPTION",
								"ON_SHIPMENT",
								"ON_TENDER",
								"ON_ESTIMATED_DELIVERY",
								"ON_BILL_OF_LADING",
								"ON_PICKUP_DRIVER_ARRIVED",
								"ON_PICKUP_DRIVER_ASSIGNED",
								"ON_PICKUP_DRIVER_DEPARTED",
								"ON_PICKUP_DRIVER_EN_ROUTE"
							]
						}
					}
				},
				"description": "These are recipient details for receiving email notification."
			},
			"SHPCResponseVO_Validate": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"output": {
						"$ref": "#/components/schemas/BaseProcessOutputVO_Validate"
					}
				},
				"description": "Wrapper class for VerifyShipmentOutputVO. It holds transactionId and output."
			},
			"BaseProcessOutputVO_Validate": {
				"$ref": "#/components/schemas/VerifyShipmentOutputVO"
			},
			"VerifyShipmentOutputVO": {
				"type": "object",
				"properties": {
					"alerts": {
						"type": "array",
						"description": "The alerts received when a Shipment Package Validate is processed. This includes the alert code, alert type, and alert message.",
						"items": {
							"$ref": "#/components/schemas/Alert"
						}
					}
				},
				"description": "The response elements received when a shipment is created."
			},
			"RequestedShipmentVerify_shipmentSpecialServices": {
				"type": "object",
				"properties": {
					"specialServiceTypes": {
						"type": "array",
						"description": "Indicate the Special services requested for this shipment.<br>Example: <ul><li>HOLD_AT_LOCATION</li><li>RETURN_SHIPMENT</li><li>BROKER_SELECT_OPTION</li><li>CALL_BEFORE_DELIVERY</li><li>COD</li><li>CUSTOM_DELIVERY_WINDOW</li></ul><br><a onclick='loadDocReference(\"shipmentlevelspecialservicetypes\")'>click here to see Shipment Special Service Types</a>",
						"example": [
							"THIRD_PARTY_CONSIGNEE"
						],
						"items": {
							"type": "string"
						}
					},
					"etdDetail": {
						"$ref": "#/components/schemas/ETDDetail"
					},
					"returnShipmentDetail": {
						"$ref": "#/components/schemas/ReturnShipmentDetail"
					},
					"deliveryOnInvoiceAcceptanceDetail": {
						"$ref": "#/components/schemas/DeliveryOnInvoiceAcceptanceDetail"
					},
					"internationalTrafficInArmsRegulationsDetail": {
						"$ref": "#/components/schemas/InternationalTrafficInArmsRegulationsDetail"
					},
					"pendingShipmentDetail": {
						"$ref": "#/components/schemas/PendingShipmentDetail"
					},
					"holdAtLocationDetail": {
						"$ref": "#/components/schemas/HoldAtLocationDetail"
					},
					"shipmentCODDetail": {
						"$ref": "#/components/schemas/ShipmentCODDetail"
					},
					"shipmentDryIceDetail": {
						"$ref": "#/components/schemas/ShipmentDryIceDetail_1"
					},
					"internationalControlledExportDetail": {
						"$ref": "#/components/schemas/InternationalControlledExportDetail"
					},
					"homeDeliveryPremiumDetail": {
						"$ref": "#/components/schemas/HomeDeliveryPremiumDetail"
					}
				},
				"description": "Indicate the shipment special service or handling required for this shipment. <br>Note: <ul><li>If the shipper is requesting a special service, the special service type must be indicated in the object specialServiceTypes, and all supporting detail must be provided in the appropriate sub-object below.</li><li>For returns it is required to provide value RETURN_SHIPMENT in the specialServiceTypes.</li></ul>"
			},
			"Full_Schema_Create_Tag": {
				"required": [
					"accountNumber",
					"requestedShipment"
				],
				"type": "object",
				"properties": {
					"requestedShipment": {
						"description": "The shipment data describing the shipment being tendered to FedEx.",
						"allOf": [
							{
								"$ref": "#/components/schemas/CreateTagRequestedShipment"
							}
						]
					},
					"accountNumber": {
						"description": "The specific FedEx customer account number (account value) associated with the shipment.",
						"allOf": [
							{
								"$ref": "#/components/schemas/AccountNumber"
							}
						]
					}
				}
			},
			"CreateTagRequestedShipment": {
				"required": [
					"packagingType",
					"pickupDetail",
					"recipients",
					"requestedPackageLineItems",
					"serviceType",
					"shipTimestamp",
					"shipper",
					"shippingChargesPayment",
					"shippingLabelType",
					"specialServicesRequested"
				],
				"allOf": [
					{
						"$ref": "#/components/schemas/RequestedShipment"
					},
					{
						"properties": {
							"pickupDetail": {
								"required": [
									"latestPickupDateTime",
									"readyPickupDateTime"
								],
								"properties": {
									"readyPickupDateTime": {
										"type": "string",
										"description": "Specify the time and date the package will be ready for pickup.",
										"example": "2020-07-03T09:00:00Z"
									},
									"latestPickupDateTime": {
										"type": "string",
										"description": "Specify the last possible pickup date and time.",
										"example": "2020-07-03T09:00:00Z"
									}
								},
								"description": "Specifies the pickup details for the Tag shipment.<br>ReadyDateTime and LatestPickupDateTime are required."
							}
						}
					}
				]
			},
			"SHPCResponseVO_CreateTag": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"output": {
						"$ref": "#/components/schemas/BaseProcessOutputVO_CreateTag"
					}
				},
				"description": "Wrapper class for ShipShipmentOutputVO. It holds transactionId and output."
			},
			"BaseProcessOutputVO_CreateTag": {
				"$ref": "#/components/schemas/CreateTagOutputVO"
			},
			"CreateTagOutputVO": {
				"type": "object",
				"properties": {
					"masterTrackingNumber": {
						"type": "string",
						"description": "Specifies the Master Tracking Number for the requested shipment.<br>Example: 997338100007320",
						"example": "997338100007320"
					},
					"serviceType": {
						"type": "string",
						"description": "Specifies the service type for this shipment.<br>Example: GROUND_HOME_DELIVERY<br><a onclick='loadDocReference(\"servicetypes\")'>Click here to see Service Types</a>",
						"example": "GROUND_HOME_DELIVERY"
					},
					"shipTimestamp": {
						"type": "string",
						"description": "Specifies the shipment date and time. The default timestamp is the current date-time. Format is MMM-dd-yyyy.<br>Example: 2019-10-04",
						"example": "2019-10-04"
					},
					"completedTagDetail": {
						"$ref": "#/components/schemas/CompletedTagDetail"
					},
					"alerts": {
						"type": "array",
						"description": "Specifies the alerts received when a tag is created. This includes the alert code, alert type, and alert message.",
						"items": {
							"$ref": "#/components/schemas/Alert"
						}
					}
				},
				"description": "Specifies the output details when a tag is created."
			},
			"CompletedTagDetail": {
				"description": "Specifies the pickup confirmation and location details for the return tag shipment.",
				"allOf": [
					{
						"$ref": "#/components/schemas/CompletedTagDetail_2"
					}
				]
			},
			"CompletedTagDetail_2": {
				"required": [
					"confirmationNumber",
					"dispatchDate",
					"location"
				],
				"type": "object",
				"properties": {
					"confirmationNumber": {
						"type": "string",
						"description": "Confirmation Number.<br>Example: 275",
						"example": "275"
					},
					"location": {
						"type": "string",
						"description": "Applicable for FedEx Express services.<br>Example: NQAA",
						"example": "NQAA"
					},
					"dispatchDate": {
						"type": "string",
						"description": "The dispatch date for the FedEx Tag to be cancelled.<br>Example: 2019-08-03",
						"example": "2019-08-03"
					}
				}
			},
			"FullSchema-CancelTag": {
				"required": [
					"accountNumber",
					"completedTagDetail",
					"serviceType"
				],
				"type": "object",
				"properties": {
					"accountNumber": {
						"description": "The specific FedEx customer account number (account value and account key) associated with the shipment.",
						"allOf": [
							{
								"$ref": "#/components/schemas/ShipmentAccountNumber"
							}
						]
					},
					"serviceType": {
						"type": "string",
						"description": "This is the FedEx service type associated with the shipment.<br>Example: PRIORITY_OVERNIGHT<br><a onclick='loadDocReference(\"servicetypes\")'>Click here to see Service Types</a>",
						"example": "PRIORITY_OVERNIGHT"
					},
					"trackingNumber": {
						"type": "string",
						"description": "The tracking number for the Express or Ground Tag to the cancelled.<br>Example: 301025281523<br><a onclick='loadDocReference(\"mocktrackingnumbersforfedexexpressandfedexground\")'>Click here to see mock tracking numbers for FedEx Express and FedEx Ground.</a>",
						"example": "301025281523"
					},
					"completedTagDetail": {
						"description": "The details of the package for which shipping has been completed. The details include dispatch confirmation number, dispatch date, location, and the cxs alerts associated with the process.",
						"allOf": [
							{
								"$ref": "#/components/schemas/CompletedTagDetail_2"
							}
						]
					}
				},
				"description": "The input details required to cancel a tag."
			},
			"ShipmentAccountNumber": {
				"$ref": "#/components/schemas/PartyAccountNumber_2"
			},
			"PartyAccountNumber_2": {
				"type": "object",
				"properties": {
					"value": {
						"type": "string",
						"description": "Conditional.<br> The account number value. Max Length is 9.<br>Example: 123456789"
					}
				},
				"description": "The account number of the recipient.",
				"example": {
					"value": "123456789"
				}
			},
			"SHPCResponseVO": {
				"type": "object",
				"properties": {
					"transactionId": {
						"type": "string",
						"description": "The transaction ID is a special set of numbers that defines each transaction.<br>Example: 624deea6-b709-470c-8c39-4b5511281492",
						"example": "624deea6-b709-470c-8c39-4b5511281492"
					},
					"customerTransactionId": {
						"type": "string",
						"description": "This element allows you to assign a unique identifier to your transaction. This element is also returned in the reply and helps you match the request to the reply. <br> Example: AnyCo_order123456789",
						"example": "AnyCo_order123456789"
					},
					"output": {
						"$ref": "#/components/schemas/BaseProcessOutputVO"
					}
				},
				"description": "Wrapper class for CancelTagOuputVO. It holds transactionId and output."
			},
			"BaseProcessOutputVO": {
				"$ref": "#/components/schemas/CancelTagOuputVO"
			},
			"CancelTagOuputVO": {
				"type": "object",
				"properties": {
					"cancelledTag": {
						"type": "boolean",
						"description": "Indicates whether the tag has been cancelled or not. If true, then the tag has been successfully cancelled.<br>Example: true",
						"example": true
					},
					"successMessage": {
						"type": "string",
						"description": "Message received when a tag is successfully cancelled.<br>Example: success",
						"example": "success"
					}
				},
				"description": "The output details when a tag is cancelled."
			}
		}
	}
}